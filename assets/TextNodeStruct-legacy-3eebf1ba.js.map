{"version":3,"file":"TextNodeStruct-legacy-3eebf1ba.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimation.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimationController.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/lib/Matrix3d.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/CoreNode.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/scene/Scene.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/SdfShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/CoreShaderManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/animations/AnimationManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/textures/ImageTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/textures/NoiseTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/CoreTextureManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TrFontManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/TextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/PeekableGenerator.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getUnicodeCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/layoutText.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/measureText.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/constants.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/makeRenderWindow.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getStartConditions.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/LightningTextTextureRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/CanvasTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/Stage.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/platform.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/CoreTextNode.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/utils.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/SharedObject.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/buffer-struct-utils.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/ThreadX.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.4/node_modules/@lightningjs/threadx/dist/BufferStruct.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/NodeStruct.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/SharedNode.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/TextNodeStruct.js"],"sourcesContent":["import { CoreExtension } from '../../exports/core-api.js';\n/**\n * Type guard that checks if a Class extends CoreExtension.\n *\n * @param Class\n * @returns\n */\nexport function classExtendsCoreExtension(Class) {\n    return Class.prototype instanceof CoreExtension;\n}\nexport async function loadCoreExtension(coreExtensionModule, stage) {\n    let module;\n    try {\n        console.log('Loading core extension', coreExtensionModule);\n        module = (await import(coreExtensionModule /* @vite-ignore */));\n    }\n    catch (e) {\n        console.error(`The core extension module at '${coreExtensionModule}' could not be loaded.`);\n        console.error(e);\n        return;\n    }\n    if (!module.default) {\n        console.error(`The core extension module at '${coreExtensionModule}' does not have a default export.`);\n        return;\n    }\n    const ExtensionClass = module.default;\n    if (classExtendsCoreExtension(ExtensionClass)) {\n        const coreExtension = new ExtensionClass();\n        try {\n            await coreExtension.run(stage);\n        }\n        catch (e) {\n            console.error(`The core extension at '${coreExtensionModule}' threw an error.`);\n            console.error(e);\n        }\n    }\n    else {\n        console.error(`The core extension at '${coreExtensionModule}' does not extend CoreExtension.`);\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    propStartValues = {};\n    restoreValues = {};\n    progress = 0;\n    timingFunction;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        this.settings = settings;\n        this.propStartValues = {};\n        Object.keys(props).forEach((propName) => {\n            this.propStartValues[propName] = node[propName];\n        });\n        this.timingFunction = (t) => t;\n        if (settings.easing && typeof settings.easing === 'string') {\n            this.timingFunction = getTimingFunction(settings.easing);\n        }\n    }\n    reset() {\n        this.progress = 0;\n        this.update(0);\n    }\n    restore() {\n        this.reset();\n        Object.keys(this.props).forEach((propName) => {\n            this.node[propName] = this.propStartValues[propName];\n        });\n    }\n    reverse() {\n        this.progress = 0;\n        Object.keys(this.props).forEach((propName) => {\n            // set the start value to the current value\n            const startValue = this.props[propName];\n            const endValue = this.propStartValues[propName];\n            // swap the start and end values\n            this.props[propName] = endValue;\n            this.propStartValues[propName] = startValue;\n        });\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    update(dt) {\n        const { duration, loop, easing } = this.settings;\n        if (!duration) {\n            this.emit('finished', {});\n            return;\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            this.emit('finished', {});\n        }\n        Object.keys(this.props).forEach((propName) => {\n            const propValue = this.props[propName];\n            const startValue = this.propStartValues[propName];\n            const endValue = propValue;\n            if (propName.indexOf('color') !== -1) {\n                const progressValue = easing\n                    ? this.timingFunction(this.progress) || this.progress\n                    : this.progress;\n                const colorValue = mergeColorProgress(startValue, endValue, progressValue);\n                this.node[propName] = easing\n                    ? colorValue\n                    : mergeColorProgress(startValue, endValue, this.progress);\n            }\n            else {\n                this.node[propName] = easing\n                    ? this.applyEasing(this.progress, startValue, endValue)\n                    : startValue + (endValue - startValue) * this.progress;\n            }\n        });\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nexport class CoreAnimationController {\n    manager;\n    animation;\n    stoppedPromise = null;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    constructor(manager, animation) {\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n    }\n    state;\n    start() {\n        this.makeStoppedPromise();\n        this.animation.once('finished', this.finished.bind(this));\n        // prevent registering the same animation twice\n        if (!this.manager.activeAnimations.has(this.animation)) {\n            this.manager.registerAnimation(this.animation);\n        }\n        this.state = 'running';\n        return this;\n    }\n    stop() {\n        this.manager.unregisterAnimation(this.animation);\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.manager.unregisterAnimation(this.animation);\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        this.makeStoppedPromise();\n        const promise = this.stoppedPromise;\n        assertTruthy(promise);\n        return promise;\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    finished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.reverse();\n            this.start();\n            return;\n        }\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.manager.unregisterAnimation(this.animation);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/* eslint-disable @typescript-eslint/no-non-null-assertion */\n// Matrix3d is a 3x3 matrix in column-major order because that's how WebGL likes it.\n// The matrix is stored in a Float32Array in the following order:\n// | 0 3 6 |\n// | 1 4 7 |\n// | 2 5 8 |\n// The following constants are used to index into the array in a row-major way.\nconst m0 = 0;\nconst m1 = 3;\nconst m2 = 6;\nconst m3 = 1;\nconst m4 = 4;\nconst m5 = 7;\nconst m6 = 2;\nconst m7 = 5;\nconst m8 = 8;\n/**\n * A 3x3 matrix representing a 2D transformation.\n *\n * @remarks\n * The matrix is stored in column-major order in the `data` property which can\n * be passed directly to a WebGL shader uniform.\n *\n * The matrix is stored in a Float32Array in the following index order:\n * | 0 3 6 |\n * | 1 4 7 |\n * | 2 5 8 |\n *\n * Only the first two rows are really used for the transformation. The last row is\n * generally always `[0, 0, 1]` if you only use the 2D transformation methods\n * provided by this class.\n *\n * For convenience, entries in the first two rows can be accessed by the following\n * getter properties:\n * | ta tb tx |\n * | tc td ty |\n * | 0  0  1  |\n */\nexport class Matrix3d {\n    data;\n    /**\n     * Creates a new 3x3 matrix.\n     *\n     * @param entries Row-major 3x3 matrix\n     */\n    constructor(entries) {\n        if (entries) {\n            // Transpose the input matrix so that it's in column-major order.\n            this.data = new Float32Array(9);\n            this.data[m0] = entries[0];\n            this.data[m1] = entries[3];\n            this.data[m2] = entries[6];\n            this.data[m3] = entries[1];\n            this.data[m4] = entries[4];\n            this.data[m5] = entries[7];\n            this.data[m6] = entries[2];\n            this.data[m7] = entries[5];\n            this.data[m8] = entries[8];\n        }\n        else {\n            this.data = new Float32Array(9);\n        }\n    }\n    /**\n     * Returns a temporary matrix that can be used for calculations.\n     *\n     * @remarks\n     * This is useful for avoiding allocations in tight loops.\n     *\n     * The matrix is not guaranteed to be the same between calls.\n     *\n     * @returns\n     */\n    static get temp() {\n        return tempMatrix;\n    }\n    static multiply(a, b, out) {\n        const e0 = a.data[m0] * b.data[m0] +\n            a.data[m1] * b.data[m3] +\n            a.data[m2] * b.data[m6];\n        const e1 = a.data[m0] * b.data[m1] +\n            a.data[m1] * b.data[m4] +\n            a.data[m2] * b.data[m7];\n        const e2 = a.data[m0] * b.data[m2] +\n            a.data[m1] * b.data[m5] +\n            a.data[m2] * b.data[m8];\n        const e3 = a.data[m3] * b.data[m0] +\n            a.data[m4] * b.data[m3] +\n            a.data[m5] * b.data[m6];\n        const e4 = a.data[m3] * b.data[m1] +\n            a.data[m4] * b.data[m4] +\n            a.data[m5] * b.data[m7];\n        const e5 = a.data[m3] * b.data[m2] +\n            a.data[m4] * b.data[m5] +\n            a.data[m5] * b.data[m8];\n        const e6 = a.data[m6] * b.data[m0] +\n            a.data[m7] * b.data[m3] +\n            a.data[m8] * b.data[m6];\n        const e7 = a.data[m6] * b.data[m1] +\n            a.data[m7] * b.data[m4] +\n            a.data[m8] * b.data[m7];\n        const e8 = a.data[m6] * b.data[m2] +\n            a.data[m7] * b.data[m5] +\n            a.data[m8] * b.data[m8];\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = e0;\n        out.data[m1] = e1;\n        out.data[m2] = e2;\n        out.data[m3] = e3;\n        out.data[m4] = e4;\n        out.data[m5] = e5;\n        out.data[m6] = e6;\n        out.data[m7] = e7;\n        out.data[m8] = e8;\n        return out;\n    }\n    static identity(out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = 1;\n        out.data[m1] = 0;\n        out.data[m2] = 0;\n        out.data[m3] = 0;\n        out.data[m4] = 1;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static translate(x, y, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = 1;\n        out.data[m1] = 0;\n        out.data[m2] = x;\n        out.data[m3] = 0;\n        out.data[m4] = 1;\n        out.data[m5] = y;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static scale(sx, sy, out) {\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = sx;\n        out.data[m1] = 0;\n        out.data[m2] = 0;\n        out.data[m3] = 0;\n        out.data[m4] = sy;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static rotate(angle, out) {\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        if (!out) {\n            out = new Matrix3d();\n        }\n        out.data[m0] = cos;\n        out.data[m1] = -sin;\n        out.data[m2] = 0;\n        out.data[m3] = sin;\n        out.data[m4] = cos;\n        out.data[m5] = 0;\n        out.data[m6] = 0;\n        out.data[m7] = 0;\n        out.data[m8] = 1;\n        return out;\n    }\n    static copy(src, dst, transpose) {\n        if (!dst) {\n            dst = new Matrix3d();\n        }\n        dst.data[0] = src.data[0];\n        dst.data[1] = src.data[1];\n        dst.data[2] = src.data[2];\n        dst.data[3] = src.data[3];\n        dst.data[4] = src.data[4];\n        dst.data[5] = src.data[5];\n        dst.data[6] = src.data[6];\n        dst.data[7] = src.data[7];\n        dst.data[8] = src.data[8];\n        return dst;\n    }\n    translate(x, y) {\n        this.data[m2] = this.data[m0] * x + this.data[m1] * y + this.data[m2];\n        this.data[m5] = this.data[m3] * x + this.data[m4] * y + this.data[m5];\n        return this;\n    }\n    scale(sx, sy) {\n        this.data[m0] = this.data[m0] * sx;\n        this.data[m1] = this.data[m1] * sy;\n        this.data[m3] = this.data[m3] * sx;\n        this.data[m4] = this.data[m4] * sy;\n        return this;\n    }\n    rotate(angle) {\n        if (angle === 0 || !((angle % Math.PI) * 2)) {\n            return this;\n        }\n        const cos = Math.cos(angle);\n        const sin = Math.sin(angle);\n        const e0 = this.data[m0] * cos + this.data[m1] * sin;\n        const e1 = this.data[m1] * cos - this.data[m0] * sin;\n        const e3 = this.data[m3] * cos + this.data[m4] * sin;\n        const e4 = this.data[m4] * cos - this.data[m3] * sin;\n        this.data[m0] = e0;\n        this.data[m1] = e1;\n        this.data[m3] = e3;\n        this.data[m4] = e4;\n        return this;\n    }\n    multiply(other) {\n        return Matrix3d.multiply(this, other, this);\n    }\n    get tx() {\n        return this.data[m2];\n    }\n    get ty() {\n        return this.data[m5];\n    }\n    get ta() {\n        return this.data[m0];\n    }\n    get tb() {\n        return this.data[m1];\n    }\n    get tc() {\n        return this.data[m3];\n    }\n    get td() {\n        return this.data[m4];\n    }\n    transformPoint(x, y) {\n        return [\n            this.data[m0] * x + this.data[m1] * y + this.data[m2],\n            this.data[m3] * x + this.data[m4] * y + this.data[m3],\n        ];\n    }\n}\nconst tempMatrix = new Matrix3d();\n//# sourceMappingURL=Matrix3d.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nimport { Matrix3d } from './lib/Matrix3d.js';\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    props;\n    /**\n     * Recalculation type\n     * 0 - no recalculation\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     */\n    recalculationType = 6;\n    hasUpdates = true;\n    globalTransform;\n    scaleRotateTransform;\n    localTransform;\n    isComplex = false;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n        };\n        // Allow for parent to be processed appropriately\n        this.parent = props.parent;\n        this.updateScaleRotateTransform();\n    }\n    //#region Textures\n    loadTexture(textureType, props, options = null) {\n        // First unload any existing texture\n        if (this.props.texture) {\n            this.unloadTexture();\n        }\n        const { txManager } = this.stage;\n        const texture = txManager.loadTexture(textureType, props, options);\n        this.props.texture = texture;\n        this.props.textureOptions = options;\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            if (texture.state === 'loaded') {\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                this.onTextureFailed(texture, texture.error);\n            }\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n        });\n    }\n    unloadTexture() {\n        if (this.props.texture) {\n            this.props.texture.off('loaded', this.onTextureLoaded);\n            this.props.texture.off('failed', this.onTextureFailed);\n        }\n        this.props.texture = null;\n        this.props.textureOptions = null;\n    }\n    onTextureLoaded = (target, dimensions) => {\n        this.emit('loaded', {\n            type: 'texture',\n            dimensions,\n        });\n    };\n    onTextureFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'texture',\n            error,\n        });\n    };\n    //#endregion Textures\n    loadShader(shaderType, props) {\n        const shManager = this.stage.renderer.getShaderManager();\n        assertTruthy(shManager);\n        const { shader, props: p } = shManager.loadShader(shaderType, props);\n        this.props.shader = shader;\n        this.props.shaderProps = p;\n    }\n    setHasUpdates() {\n        if (!this.props.alpha) {\n            return;\n        }\n        this.hasUpdates = true;\n        let p = this?.props.parent;\n        while (p) {\n            p.hasUpdates = true;\n            p = p?.props.parent;\n        }\n    }\n    /**\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     * @param type\n     */\n    setRecalculationType(type) {\n        this.recalculationType |= type;\n        this.setHasUpdates();\n    }\n    updateScaleRotateTransform() {\n        this.setRecalculationType(4);\n        this.scaleRotateTransform = Matrix3d.rotate(this.props.rotation, this.scaleRotateTransform).scale(this.props.scaleX, this.props.scaleY);\n        // do transformations when matrix is implemented\n        this.updateLocalTransform();\n    }\n    updateLocalTransform() {\n        assertTruthy(this.scaleRotateTransform);\n        this.setRecalculationType(2);\n        const pivotTranslateX = this.props.pivotX * this.props.width;\n        const pivotTranslateY = this.props.pivotY * this.props.height;\n        const mountTranslateX = this.props.mountX * this.props.width;\n        const mountTranslateY = this.props.mountY * this.props.height;\n        this.localTransform = Matrix3d.translate(pivotTranslateX - mountTranslateX + this.props.x, pivotTranslateY - mountTranslateY + this.props.y, this.localTransform)\n            .multiply(this.scaleRotateTransform)\n            .translate(-pivotTranslateX, -pivotTranslateY);\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta) {\n        assertTruthy(this.localTransform);\n        const parentGlobalTransform = this.parent?.globalTransform;\n        if (parentGlobalTransform) {\n            this.globalTransform = Matrix3d.copy(parentGlobalTransform, this.globalTransform).multiply(this.localTransform);\n        }\n        else {\n            this.globalTransform = Matrix3d.copy(this.localTransform, this.globalTransform);\n        }\n        if (this.children.length) {\n            this.children.forEach((child) => {\n                child.update(delta);\n            });\n        }\n        // reset update flag\n        this.hasUpdates = false;\n        // reset recalculation type\n        this.recalculationType = 0;\n    }\n    renderQuads(renderer, clippingRect) {\n        const { width, height, colorTl, colorTr, colorBl, colorBr, texture, textureOptions, shader, shaderProps, } = this.props;\n        const { zIndex, worldAlpha, globalTransform: gt } = this;\n        assertTruthy(gt);\n        // add to list of renderables to be sorted before rendering\n        renderer.addRenderable({\n            width,\n            height,\n            colorTl,\n            colorTr,\n            colorBl,\n            colorBr,\n            texture,\n            textureOptions,\n            zIndex,\n            shader,\n            shaderProps,\n            alpha: worldAlpha,\n            clippingRect,\n            tx: gt.tx,\n            ty: gt.ty,\n            ta: gt.ta,\n            tb: gt.tb,\n            tc: gt.tc,\n            td: gt.td,\n        });\n        // Calculate absolute X and Y based on all ancestors\n        // renderer.addQuad(absX, absY, w, h, color, texture, textureOptions, zIndex);\n    }\n    //#region Properties\n    get id() {\n        return this.props.id;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.updateLocalTransform();\n        }\n    }\n    get absX() {\n        return (this.props.x +\n            (this.props.parent?.absX || this.props.parent?.globalTransform?.tx || 0));\n    }\n    get absY() {\n        return this.props.y + (this.props.parent?.absY ?? 0);\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.updateLocalTransform();\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.updateLocalTransform();\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.updateLocalTransform();\n        }\n    }\n    get scale() {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        return this.scaleX;\n    }\n    set scale(value) {\n        // The CoreNode `scale` property is only used by Animations.\n        // Unlike INode, `null` should never be possibility for Animations.\n        this.scaleX = value;\n        this.scaleY = value;\n    }\n    get scaleX() {\n        return this.props.scaleX;\n    }\n    set scaleX(value) {\n        if (this.props.scaleX !== value) {\n            this.props.scaleX = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get scaleY() {\n        return this.props.scaleY;\n    }\n    set scaleY(value) {\n        if (this.props.scaleY !== value) {\n            this.props.scaleY = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get worldScaleX() {\n        return (this.props.scaleX * (this.props.parent?.worldScaleX ?? 1) ||\n            this.props.scaleX);\n    }\n    get worldScaleY() {\n        return (this.props.scaleY * (this.props.parent?.worldScaleY ?? 1) ||\n            this.props.scaleY);\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        // if (this.props.mountX !== value || this.props.mountY !== value) {\n        this.props.mountX = value;\n        this.props.mountY = value;\n        this.props.mount = value;\n        this.updateLocalTransform();\n        // }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        this.props.mountX = value;\n        this.updateLocalTransform();\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        this.props.mountY = value;\n        this.updateLocalTransform();\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.updateLocalTransform();\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        this.props.pivotX = value;\n        this.updateLocalTransform();\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        this.props.pivotY = value;\n        this.updateLocalTransform();\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.updateScaleRotateTransform();\n        }\n    }\n    get alpha() {\n        return this.props.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n    }\n    get worldAlpha() {\n        const props = this.props;\n        const parent = props.parent;\n        return props.alpha * (parent?.worldAlpha || 1);\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        if (this.props.colorTl !== value ||\n            this.props.colorTr !== value ||\n            this.props.colorBl !== value ||\n            this.props.colorBr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.color = value;\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n    }\n    get zIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        if (props.parent?.zIndexLocked) {\n            return z < p ? z : p;\n        }\n        return z;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n        }\n        this.updateScaleRotateTransform();\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Scene {\n    /**\n     * Root node of the scene\n     *\n     * @type {Node}\n     * @memberof Scene\n     */\n    root;\n    constructor(root) {\n        this.root = root;\n    }\n    /**\n     * Get all nodes of a specific type\n     * @param type\n     * @returns\n     */\n    getNodeByType(type) {\n        return [];\n    }\n    /**\n     * Find a node by id\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        return null;\n    }\n    /**\n     * Create a new node\n     * @param parent\n     * @returns\n     */\n    // public createNode(settings: Partial<INodeWritableProps> = {}): NodeTypes {\n    //   return createNode(settings);\n    // }\n    /**\n     * create a new RectangleNode\n     * @param w\n     * @param h\n     * @param parent\n     * @returns\n     */\n    // public rectangle(w: number, h: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new RectangleNode(w, h), parent);\n    // }\n    /**\n     * Create a new CircleNode\n     * @param r\n     * @param parent\n     * @returns\n     */\n    // public circle(r: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new CircleNode(r), parent);\n    // }\n    /**\n     * Create a new TextNode\n     * @param text\n     * @param parent\n     * @returns\n     */\n    // public text(text = '', parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new TextNode(text), parent);\n    // }\n    /**\n     * Setup and attaching Node\n     * @param node\n     * @param parent\n     * @returns\n     */\n    // private create(node: NodeTypes, parent: NodeTypes | null = null): NodeTypes {\n    //   if (!parent) {\n    //     parent = this.root;\n    //   }\n    //   node.parent = parent;\n    //   return node;\n    // }\n    /**\n     * Update the scene\n     * @param delta\n     */\n    update(delta) {\n        this.root.update(delta);\n    }\n}\n//# sourceMappingURL=Scene.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, gl } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            gl.activeTexture(gl.TEXTURE0 + i);\n            gl.bindTexture(gl.TEXTURE_2D, t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.setUniform('u_textures[0]', samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float mask = clamp(shaderMask + width, 0.0, 1.0) - clamp(shaderMask, 0.0, 1.0);\n  return mix(shaderColor, maskColor, mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static onColorize = `\n    vec3 color = pow(maskColor.rgb, vec3(2.0));\n    float gray = dot(color, vec3(0.2126, 0.7152, 0.0722));\n    float gammaGray = sqrt(gray);\n    return vec4(gammaGray, gammaGray, gammaGray, 1.0);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            validator: (value) => {\n                return (Date.now() - value) % 1000;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport { RadiusEffect } from './effects/RadiusEffect.js';\nimport { BorderEffect } from './effects/BorderEffect.js';\nimport { LinearGradientEffect } from './effects/LinearGradientEffect.js';\nimport { GrayscaleEffect } from './effects/GrayscaleEffect.js';\nimport { ShaderEffect } from './effects/ShaderEffect.js';\nimport { BorderRightEffect } from './effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './effects/BorderLeftEffect.js';\nimport { GlitchEffect } from './effects/GlitchEffect.js';\nimport { FadeOutEffect } from './effects/FadeOutEffect.js';\nimport { RadialGradientEffect } from './effects/RadialGradientEffect.js';\nconst Effects = {\n    radius: RadiusEffect,\n    border: BorderEffect,\n    borderBottom: BorderBottomEffect,\n    borderLeft: BorderLeftEffect,\n    borderRight: BorderRightEffect,\n    borderTop: BorderTopEffect,\n    fadeOut: FadeOutEffect,\n    linearGradient: LinearGradientEffect,\n    radialGradient: RadialGradientEffect,\n    grayscale: GrayscaleEffect,\n    glitch: GlitchEffect,\n};\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        props.effects?.forEach((eff, index) => {\n            const effect = this.effects[index];\n            const fxClass = Effects[effect.name];\n            const props = eff.props ?? {};\n            const uniInfo = effect.uniformInfo;\n            Object.keys(props).forEach((p) => {\n                const fxProp = fxClass.uniforms[p];\n                const propInfo = uniInfo[p];\n                let value = fxProp.validator\n                    ? fxProp.validator(props[p], props)\n                    : props[p];\n                if (Array.isArray(value)) {\n                    value = new Float32Array(value);\n                }\n                this.setUniform(propInfo.name, value);\n            });\n        });\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = Effects[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                Effects[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        return {\n            effects: (props.effects ?? []).map((effect) => ({\n                type: effect.type,\n                props: effectContructors[effect.type].resolveDefaults(effect.props || {}),\n            })),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        this.setUniform('u_radius', props.radius);\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nconst IDENTITY_MATRIX_3x3 = new Float32Array([1, 0, 0, 0, 1, 0, 0, 0, 1]);\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_transform', uniform: 'uniformMatrix3fv' },\n                { name: 'u_scrollY', uniform: 'uniform1f' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'transform') {\n                this.setUniform('u_transform', false, resolvedProps[key]);\n            }\n            else if (key === 'scrollY') {\n                this.setUniform('u_scrollY', resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.setUniform('u_color', components);\n            }\n            else if (key === 'size') {\n                this.setUniform('u_size', resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.setUniform('u_distanceRange', resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.setUniform('u_debug', resolvedProps[key] ? 1.0 : 0.0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            transform: props.transform ?? IDENTITY_MATRIX_3x3,\n            scrollY: props.scrollY ?? 0,\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_resolution;\n      uniform mat3 u_transform;\n      uniform float u_scrollY;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        vec2 scrolledPosition = a_position * u_size - vec2(0, u_scrollY);\n        vec2 transformedPosition = (u_transform * vec3(scrolledPosition, 1)).xy;\n        gl_Position = vec4((transformedPosition * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1), 0, 1);\n        v_texcoord = a_textureCoordinate;\n      }\n    `,\n        fragment: `\n      precision highp float;\n\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader,\n            props: resolvedProps,\n        };\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader: shader,\n            props: resolvedProps,\n        };\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { src, premultiplyAlpha } = this.props;\n        if (!src) {\n            return {\n                data: null,\n            };\n        }\n        if (src instanceof ImageData) {\n            return {\n                data: src,\n                premultiplyAlpha,\n            };\n        }\n        const response = await fetch(src);\n        const blob = await response.blob();\n        return {\n            data: await createImageBitmap(blob, {\n                premultiplyAlpha: premultiplyAlpha ? 'premultiply' : 'none',\n                colorSpaceConversion: 'none',\n                imageOrientation: 'none',\n            }),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // ImageTextures sourced by ImageData are non-cacheable\n        if (resolvedProps.src instanceof ImageData) {\n            return false;\n        }\n        return `ImageTexture,${resolvedProps.src},${resolvedProps.premultiplyAlpha}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nexport class CoreTextureManager {\n    /**\n     * Amount of used memory defined in pixels\n     */\n    usedMemory = 0;\n    txConstructors = {};\n    textureKeyCache = new Map();\n    textureIdCache = new Map();\n    ctxTextureCache = new WeakMap();\n    textureRefCountMap = new WeakMap();\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    constructor() {\n        // Register default known texture types\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    loadTexture(textureType, props, options = null) {\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        let texture;\n        // If an ID is specified, try to get the texture from the ID cache first\n        if (options?.id !== undefined && this.textureIdCache.has(options.id)) {\n            // console.log('Getting texture by texture desc ID', options.id);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            texture = this.textureIdCache.get(options.id);\n        }\n        // If the texture is not found in the ID cache, try to get it from the key cache\n        if (!texture) {\n            const descId = options?.id;\n            const cacheKey = options?.cacheKey ?? TextureClass.makeCacheKey(props);\n            if (cacheKey && this.textureKeyCache.has(cacheKey)) {\n                // console.log('Getting texture by cache key', cacheKey);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                texture = this.textureKeyCache.get(cacheKey);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n                texture = new TextureClass(this, props);\n            }\n            if (descId) {\n                this.addTextureIdToCache(descId, cacheKey, texture);\n            }\n        }\n        if (options?.preload) {\n            const ctxTx = this.getCtxTexture(texture);\n            ctxTx.load();\n        }\n        return texture;\n    }\n    /**\n     * Add a `Texture` to the texture cache by its texture desc ID and cache key\n     *\n     * @remarks\n     * This is used internally by the `CoreTextureManager` to cache textures\n     * when they are created.\n     *\n     * It handles updating the texture ID cache, texture key cache, and texture\n     * reference count map.\n     *\n     * @param textureDescId\n     * @param cacheKey\n     * @param texture\n     */\n    addTextureIdToCache(textureDescId, cacheKey, texture) {\n        const { textureIdCache, textureRefCountMap } = this;\n        textureIdCache.set(textureDescId, texture);\n        if (textureRefCountMap.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            textureRefCountMap.get(texture).count++;\n        }\n        else {\n            textureRefCountMap.set(texture, { cacheKey, count: 1 });\n            if (cacheKey) {\n                this.textureKeyCache.set(cacheKey, texture);\n            }\n        }\n    }\n    /**\n     * Remove a `Texture` from the texture cache by its texture desc ID\n     *\n     * @remarks\n     * This is called externally by when we know (at least reasonably well) that\n     * the `TextureRef` in the Main API space has been is no longer used. This\n     * allows us to remove the `Texture` from the Usage Cache so that it can be\n     * garbage collected as well.\n     *\n     * @param textureDescId\n     */\n    removeTextureIdFromCache(textureDescId) {\n        const { textureIdCache, textureRefCountMap } = this;\n        const texture = textureIdCache.get(textureDescId);\n        if (!texture) {\n            // Sometimes a texture is removed from the cache before it ever gets\n            // added to the cache. This is fine and not an error.\n            return;\n        }\n        textureIdCache.delete(textureDescId);\n        if (textureRefCountMap.has(texture)) {\n            const refCountObj = textureRefCountMap.get(texture);\n            assertTruthy(refCountObj);\n            refCountObj.count--;\n            if (refCountObj.count === 0) {\n                textureRefCountMap.delete(texture);\n                // If the texture is not referenced anywhere else, remove it from the key cache\n                // as well.\n                // This should allow the `Texture` instance to be garbage collected.\n                if (refCountObj.cacheKey) {\n                    this.textureKeyCache.delete(refCountObj.cacheKey);\n                }\n            }\n        }\n    }\n    /**\n     * Get an object containing debug information about the texture manager.\n     *\n     * @returns\n     */\n    getDebugInfo() {\n        // const textureSet = new Set<Texture>();\n        // for (const texture of this.textureIdCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // for (const texture of this.textureKeyCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // TODO: Output number of bytes used by textures\n        return {\n            keyCacheSize: this.textureKeyCache.size,\n            idCacheSize: this.textureIdCache.size,\n        };\n    }\n    /**\n     * Get a CoreContextTexture for the given Texture source.\n     *\n     * @remarks\n     * If the texture source already has an allocated CoreContextTexture, it will be\n     * returned from the cache. Otherwise, a new CoreContextTexture will be created\n     * and cached.\n     *\n     * ContextTextures are stored in a WeakMap, so they will be garbage collected\n     * when the Texture source is no longer referenced.\n     *\n     * @param textureSource\n     * @returns\n     */\n    getCtxTexture(textureSource) {\n        if (this.ctxTextureCache.has(textureSource)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.ctxTextureCache.get(textureSource);\n        }\n        const texture = this.renderer.createCtxTexture(textureSource);\n        this.ctxTextureCache.set(textureSource, texture);\n        return texture;\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SdfTrFontFace } from './font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { WebTrFontFace } from './font-face-types/WebTrFontFace.js';\nexport class TrFontManager {\n    textRenderers;\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    static resolveFontFace(familyMapsByPriority, props) {\n        const closeFaces = [];\n        const exactMatch = familyMapsByPriority.reduce((prev, fontFamiles) => {\n            if (prev) {\n                return prev;\n            }\n            const fontFaces = fontFamiles[props.fontFamily];\n            if (!fontFaces) {\n                return undefined;\n            }\n            const fontFacesCopy = new Set(fontFaces);\n            // Remove any font faces that don't match the style exactly\n            // TODO: In the future we may enhance this to find the best match\n            // based on font weight, style, etc.\n            // See https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n            for (const fontFace of fontFacesCopy) {\n                if (fontFace.descriptors.stretch !== props.fontStretch ||\n                    fontFace.descriptors.style !== props.fontStyle ||\n                    fontFace.descriptors.weight !== props.fontWeight) {\n                    fontFacesCopy.delete(fontFace);\n                }\n            }\n            // Return the first font face that matches the style exactly\n            return fontFacesCopy.values().next().value;\n        }, undefined);\n        return exactMatch || closeFaces[0];\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    scaleX: (state, value) => {\n        state.props.scaleX = value;\n    },\n    scaleY: (state, value) => {\n        state.props.scaleY = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        this.set = Object.freeze({\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        });\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A wrapper Generator class that makes a generator peekable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class PeekableIterator {\n    iterator;\n    peekBuffer = [];\n    _lastIndex;\n    constructor(iterator, indexBase = 0) {\n        this.iterator = iterator;\n        this.iterator = iterator;\n        this._lastIndex = indexBase - 1;\n        this.peekBuffer = [];\n    }\n    next() {\n        const nextResult = this.peekBuffer.length > 0\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.peekBuffer.pop()\n            : this.iterator.next();\n        if (nextResult.done) {\n            this._lastIndex = -1;\n        }\n        else {\n            this._lastIndex++;\n        }\n        return nextResult;\n    }\n    peek() {\n        if (this.peekBuffer.length > 0) {\n            // We know that the buffer is not empty, so we can safely use the\n            // non-null assertion operator\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.peekBuffer[0];\n        }\n        const result = this.iterator.next();\n        this.peekBuffer.push(result);\n        return result;\n    }\n    get lastIndex() {\n        return this._lastIndex;\n    }\n}\n//# sourceMappingURL=PeekableGenerator.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Reversible Generator Wrapper Class\n/**\n * Generator function that yields each Unicode code point in the given string.\n */\nexport function* getUnicodeCodepoints(text, start = 0) {\n    let i = start;\n    while (i < text.length) {\n        const codePoint = text.codePointAt(i);\n        if (codePoint === undefined) {\n            throw new Error('Invalid Unicode code point');\n        }\n        yield codePoint;\n        i += codePoint <= 0xffff ? 1 : 2;\n    }\n}\n//# sourceMappingURL=getUnicodeCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../../../utils.js';\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\nimport { measureText } from './measureText.js';\nexport function layoutText(curLineIndex, startX, startY, text, textAlign, width, height, fontSize, letterSpacing, \n/**\n * Mutated\n */\nvertexBuffer, contain, \n/**\n * Mutated\n */\nlineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable) {\n    assertTruthy(trFontFace, 'Font face must be loaded');\n    assertTruthy(trFontFace.loaded, 'Font face must be loaded');\n    assertTruthy(trFontFace.data, 'Font face must be loaded');\n    assertTruthy(trFontFace.shaper, 'Font face must be loaded');\n    // Regardless of fontSize (or other scaling properties), we layout the vertices of each glyph\n    // using the fixed coordinate space determined by font size used to produce the atlas.\n    // Scaling for display is handled by shader uniforms inexpensively.\n    // So we have:\n    //  - vertex space: the space in which the vertices of each glyph are laid out\n    //  - screen space: the screen pixel space\n    // Input properties such as x, y, w, fontSize, letterSpacing, etc. are all expressed in screen space.\n    // We convert these to the vertex space by dividing them the `fontSizeRatio` factor.\n    /**\n     * `lineHeight` in vertex coordinates\n     */\n    const vertexLineHeight = trFontFace.data.info.size;\n    /**\n     * See above\n     */\n    const fontSizeRatio = fontSize / vertexLineHeight;\n    /**\n     * `w` in vertex coordinates\n     */\n    const vertexW = width / fontSizeRatio;\n    /**\n     * `letterSpacing` in vertex coordinates\n     */\n    const vertexLSpacing = letterSpacing / fontSizeRatio;\n    const startingLineCacheEntry = lineCache[curLineIndex];\n    const startingCodepointIndex = startingLineCacheEntry?.codepointIndex || 0;\n    const startingMaxX = startingLineCacheEntry?.maxX || 0;\n    const startingMaxY = startingLineCacheEntry?.maxY || 0;\n    let maxX = startingMaxX;\n    let maxY = startingMaxY;\n    let curX = startX;\n    let curY = startY;\n    let bufferOffset = 0;\n    /**\n     * Buffer offset to last word boundry. This is -1 when we aren't in a word boundry.\n     */\n    const lastWord = {\n        codepointIndex: -1,\n        bufferOffset: -1,\n        xStart: -1,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const shaper = trFontFace.shaper;\n    const shaperProps = {\n        letterSpacing: vertexLSpacing,\n    };\n    // Get glyphs\n    let glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, startingCodepointIndex), startingCodepointIndex));\n    let glyphResult;\n    let curLineBufferStart = -1;\n    const bufferLineInfos = [];\n    const truncateSeq = '...';\n    const vertexTruncateHeight = height / fontSizeRatio;\n    const truncateSeqVertexWidth = measureText(truncateSeq, shaperProps, shaper);\n    // Line-by-line layout\n    let moreLines = true;\n    while (moreLines) {\n        const nextLineWillFit = contain !== 'both' ||\n            scrollable ||\n            curY + vertexLineHeight + vertexLineHeight <= vertexTruncateHeight;\n        const lineVertexW = nextLineWillFit\n            ? vertexW\n            : vertexW - truncateSeqVertexWidth;\n        /**\n         * Vertex X position to the beginning of the last word boundary. This becomes -1 when we start traversing a word.\n         */\n        let xStartLastWordBoundary = 0;\n        // Layout glyphs in this line\n        // Any break statements in this while loop will trigger a line break\n        while ((glyphResult = glyphs.next()) && !glyphResult.done) {\n            const glyph = glyphResult.value;\n            if (curLineIndex === lineCache.length) {\n                lineCache.push({\n                    codepointIndex: glyph.cluster,\n                    maxY,\n                    maxX,\n                });\n            }\n            else if (curLineIndex > lineCache.length) {\n                throw new Error('Unexpected lineCache length');\n            }\n            // If we encounter a word boundary (white space or newline) we invalidate\n            // the lastWord and set the xStartLastWordBoundary if we haven't already.\n            if (glyph.codepoint === 32 || glyph.codepoint === 10) {\n                if (lastWord.codepointIndex !== -1) {\n                    lastWord.codepointIndex = -1;\n                    xStartLastWordBoundary = curX;\n                }\n            }\n            else if (lastWord.codepointIndex === -1) {\n                lastWord.codepointIndex = glyph.cluster;\n                lastWord.bufferOffset = bufferOffset;\n                lastWord.xStart = xStartLastWordBoundary;\n            }\n            if (glyph.mapped) {\n                // Mapped glyph\n                const charEndX = curX + glyph.xOffset + glyph.width;\n                // Word wrap check\n                if (\n                // We are containing the text\n                contain !== 'none' &&\n                    // The current glyph reaches outside the contained width\n                    charEndX >= lineVertexW &&\n                    // There is a last word that we can break to the next line\n                    lastWord.codepointIndex !== -1 &&\n                    // We have advanced at least one character since the last word started\n                    lastWord.codepointIndex < glyph.cluster &&\n                    // Prevents infinite loop when a single word is longer than the width\n                    lastWord.xStart > 0) {\n                    // The current word is about to go off the edge of the container width\n                    // Reinitialize the iterator starting at the last word\n                    // and proceeding to the next line\n                    if (nextLineWillFit) {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, lastWord.codepointIndex), lastWord.codepointIndex));\n                        bufferOffset = lastWord.bufferOffset;\n                        break;\n                    }\n                    else {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(truncateSeq, 0), 0));\n                        curX = lastWord.xStart;\n                        bufferOffset = lastWord.bufferOffset;\n                    }\n                }\n                else {\n                    // This glyph fits, so we can add it to the buffer\n                    const quadX = curX + glyph.xOffset;\n                    const quadY = curY + glyph.yOffset;\n                    const lineIsBelowWindowTop = renderWindow\n                        ? curY + vertexLineHeight >= renderWindow.y1 / fontSizeRatio\n                        : true;\n                    const lineIsAboveWindowBottom = renderWindow\n                        ? curY <= renderWindow.y2 / fontSizeRatio\n                        : true;\n                    // Only add to buffer for rendering if the line is within the render window\n                    if (lineIsBelowWindowTop && lineIsAboveWindowBottom) {\n                        if (curLineBufferStart === -1) {\n                            curLineBufferStart = bufferOffset;\n                        }\n                        const atlasEntry = trFontFace.getAtlasEntry(glyph.glyphId);\n                        // Add texture coordinates\n                        const u = atlasEntry.x / trFontFace.data.common.scaleW;\n                        const v = atlasEntry.y / trFontFace.data.common.scaleH;\n                        const uvWidth = atlasEntry.width / trFontFace.data.common.scaleW;\n                        const uvHeight = atlasEntry.height / trFontFace.data.common.scaleH;\n                        // TODO: (Performance) We can optimize this by using ELEMENT_ARRAY_BUFFER\n                        // eliminating the need to duplicate vertices\n                        // Top-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Top-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Bottom-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                        // Bottom-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                    }\n                    maxY = Math.max(maxY, quadY + glyph.height);\n                    curX += glyph.xAdvance;\n                    maxX = Math.max(maxX, curX);\n                }\n            }\n            else {\n                // Unmapped character\n                // Handle newlines\n                if (glyph.codepoint === 10) {\n                    break;\n                }\n            }\n        }\n        // Prepare for the next line...\n        if (curLineBufferStart !== -1) {\n            bufferLineInfos.push({\n                bufferStart: curLineBufferStart,\n                bufferEnd: bufferOffset,\n            });\n            curLineBufferStart = -1;\n        }\n        curX = 0;\n        curY += vertexLineHeight;\n        curLineIndex++;\n        lastWord.codepointIndex = -1;\n        xStartLastWordBoundary = 0;\n        // Figure out if there are any more lines to render...\n        if (!forceFullLayoutCalc &&\n            contain === 'both' &&\n            renderWindow &&\n            curY > renderWindow.y2 / fontSizeRatio) {\n            // Stop layout calculation early (for performance purposes) if:\n            // - We're not forcing a full layout calculation (for width/height calculation)\n            // - ...and we're containing the text vertically+horizontally (contain === 'both')\n            // - ...and we have a render window\n            // - ...and the next line is below the bottom of the render window\n            moreLines = false;\n        }\n        else if (glyphResult && glyphResult.done) {\n            // If we've reached the end of the text, we know we're done\n            moreLines = false;\n        }\n        else if (contain === 'both' && !scrollable && !nextLineWillFit) {\n            // If we're contained vertically+horizontally (contain === 'both')\n            // but not scrollable and the next line won't fit, we're done.\n            moreLines = false;\n        }\n    }\n    // Use textAlign to determine if we need to adjust the x position of the text\n    // in the buffer line by line\n    if (textAlign === 'center') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            // - 4 = the x position of a rightmost vertex\n            const lineWidth = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = (vertexTextW - lineWidth) / 2;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    else if (textAlign === 'right') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            const lineWidth = line.bufferEnd === line.bufferStart\n                ? 0\n                : // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = vertexTextW - lineWidth;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    assertTruthy(glyphResult);\n    return {\n        bufferNumFloats: bufferOffset,\n        bufferNumQuads: bufferOffset / 16,\n        layoutNumCharacters: glyphResult.done\n            ? text.length - startingCodepointIndex\n            : glyphResult.value.cluster - startingCodepointIndex + 1,\n        fullyProcessed: !!glyphResult.done,\n        maxX,\n        maxY,\n    };\n}\n//# sourceMappingURL=layoutText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\n/**\n * Measures a single-line of text width ignoring any unmapped glyphs including line breaks\n *\n * @param text\n * @param shaperProps\n * @param shaper\n * @returns\n */\nexport function measureText(text, shaperProps, shaper) {\n    const glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, 0), 0));\n    let width = 0;\n    for (const glyph of glyphs) {\n        if (glyph.mapped) {\n            width += glyph.xAdvance;\n        }\n    }\n    return width;\n}\n//# sourceMappingURL=measureText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { intersectBound } from '../../../lib/utils.js';\nimport { TextRenderer, } from '../TextRenderer.js';\nimport { SdfTrFontFace } from '../../font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { FLOATS_PER_GLYPH } from './internal/constants.js';\nimport { getStartConditions } from './internal/getStartConditions.js';\nimport { layoutText } from './internal/layoutText.js';\nimport { makeRenderWindow } from './internal/makeRenderWindow.js';\nimport { TrFontManager } from '../../TrFontManager.js';\nimport { assertTruthy, mergeColorAlpha } from '../../../../utils.js';\nimport { WebGlCoreRenderOp } from '../../../renderers/webgl/WebGlCoreRenderOp.js';\nimport { BufferCollection } from '../../../renderers/webgl/internal/BufferCollection.js';\nimport { EventEmitter } from '../../../../common/EventEmitter.js';\n/**\n * Singleton class for rendering text using signed distance fields.\n *\n * @remarks\n * SdfTextRenderer supports both single-channel and multi-channel signed distance fields.\n */\nexport class SdfTextRenderer extends TextRenderer {\n    /**\n     * Map of font family names to a set of font faces.\n     */\n    ssdfFontFamilies = {};\n    msdfFontFamilies = {};\n    sdfShader;\n    constructor(stage) {\n        super(stage);\n        this.sdfShader = this.stage.shManager.loadShader('SdfShader').shader;\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                this.invalidateCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n            },\n            x: (state, value) => {\n                state.props.x = value;\n            },\n            y: (state, value) => {\n                state.props.y = value;\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.invalidateCache(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.invalidateCache(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateCache(state);\n            },\n            scrollable: (state, value) => {\n                state.props.scrollable = value;\n                this.invalidateCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateCache(state);\n            },\n            debug: (state, value) => {\n                state.props.debug = value;\n            },\n        };\n    }\n    canRenderFont(props) {\n        // TODO: Support matching on font stretch, weight and style (if/when needed)\n        // For now we just match on the font family name\n        // '$$SDF_FAILURE_TEST$$' is used to test the 'failure' event coming from text\n        const { fontFamily } = props;\n        return (fontFamily in this.ssdfFontFamilies ||\n            fontFamily in this.msdfFontFamilies ||\n            fontFamily === '$$SDF_FAILURE_TEST$$');\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof SdfTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an SDF font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof SdfTrFontFace);\n        const familyName = fontFace.fontFamily;\n        const fontFamiles = fontFace.type === 'ssdf'\n            ? this.ssdfFontFamilies\n            : fontFace.type === 'msdf'\n                ? this.msdfFontFamilies\n                : undefined;\n        if (!fontFamiles) {\n            console.warn(`Invalid font face type: ${fontFace.type}`);\n            return;\n        }\n        let faceSet = fontFamiles[familyName];\n        if (!faceSet) {\n            faceSet = new Set();\n            fontFamiles[familyName] = faceSet;\n        }\n        faceSet.add(fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            emitter: new EventEmitter(),\n            lineCache: [],\n            forceFullLayoutCalc: false,\n            renderWindow: undefined,\n            bufferNumFloats: 0,\n            bufferNumQuads: 0,\n            vertexBuffer: undefined,\n            webGlBuffers: null,\n            bufferUploaded: false,\n            textH: undefined,\n            textW: undefined,\n            distanceRange: 0,\n            trFontFace: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                drawCount: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        const updateStartTime = performance.now();\n        let { trFontFace } = state;\n        const { textH, lineCache, debugData, forceFullLayoutCalc } = state;\n        debugData.updateCount++;\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // Resolve font face if we haven't yet\n        if (!trFontFace) {\n            trFontFace = this.resolveFontFace(state.props);\n            state.trFontFace = trFontFace;\n            if (!trFontFace) {\n                const msg = `SdfTextRenderer: Could not resolve font face for family: '${state.props.fontFamily}'`;\n                console.error(msg);\n                this.setStatus(state, 'failed', new Error(msg));\n                return;\n            }\n        }\n        // If the font hasn't been loaded yet, stop here.\n        // Listen for the 'loaded' event and forward fontLoaded event\n        if (!trFontFace.loaded) {\n            trFontFace.on('loaded', function loadedHandler() {\n                state.emitter.emit('fontLoaded', {});\n                trFontFace?.off('fontLoaded', loadedHandler);\n            });\n            return;\n        }\n        // If the font is loaded then so should the data\n        assertTruthy(trFontFace.data, 'Font face data should be loaded');\n        const { text, fontSize, x, y, contain, width, height, scrollable } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        let { renderWindow } = state;\n        // Needed in renderWindow calculation\n        const sdfLineHeight = trFontFace.data.info.size;\n        /**\n         * Divide screen space points by this to get the SDF space points\n         * Mulitple SDF space points by this to get screen space points\n         */\n        const fontSizeRatio = fontSize / sdfLineHeight;\n        state.distanceRange =\n            fontSizeRatio * trFontFace.data.distanceField.distanceRange;\n        // Allocate buffers if needed\n        const neededLength = text.length * FLOATS_PER_GLYPH;\n        let vertexBuffer = state.vertexBuffer;\n        if (!vertexBuffer || vertexBuffer.length < neededLength) {\n            vertexBuffer = new Float32Array(neededLength * 2);\n        }\n        // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n        const rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n        const elementBounds = {\n            x1: x,\n            y1: y,\n            x2: contain !== 'none' ? x + width : Infinity,\n            y2: contain === 'both' ? y + height : Infinity,\n        };\n        /**\n         * Area that is visible on the screen.\n         */\n        const visibleWindow = intersectBound(rendererBounds, elementBounds);\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        // (Only if there's an established renderWindow and we're not suppressing early exit)\n        if (!forceFullLayoutCalc && renderWindow) {\n            if (x + renderWindow.x1 <= visibleWindow.x1 &&\n                x + renderWindow.x2 >= visibleWindow.x2 &&\n                y - scrollY + renderWindow.y1 <= visibleWindow.y1 &&\n                y - scrollY + renderWindow.y2 >= visibleWindow.y2)\n                return;\n            // Otherwise clear the renderWindow so it can be redone\n            state.renderWindow = renderWindow = undefined;\n        }\n        const { offsetY, textAlign } = state.props;\n        // Create a new renderWindow if needed\n        if (!renderWindow) {\n            const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n            const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / sdfLineHeight);\n            renderWindow = makeRenderWindow(x, y, scrollY, sdfLineHeight, maxLinesPerCanvasPage, visibleWindow);\n        }\n        const start = getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH);\n        if (!start) {\n            // Nothing to render, return early, but still mark as loaded (since the text is just scrolled\n            // out of view)\n            this.setStatus(state, 'loaded');\n            return;\n        }\n        const { letterSpacing } = state.props;\n        const out2 = layoutText(start.lineIndex, start.x, start.y, text, textAlign, width, height, fontSize, letterSpacing, vertexBuffer, contain, lineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable);\n        state.bufferUploaded = false;\n        state.bufferNumFloats = out2.bufferNumFloats;\n        state.bufferNumQuads = out2.bufferNumQuads;\n        state.vertexBuffer = vertexBuffer;\n        state.renderWindow = renderWindow;\n        debugData.lastLayoutNumCharacters = out2.layoutNumCharacters;\n        debugData.bufferSize = vertexBuffer.byteLength;\n        // If we didn't exit early, we know we have completely computed w/h\n        if (out2.fullyProcessed) {\n            state.textW = out2.maxX * fontSizeRatio;\n            state.textH = out2.maxY * fontSizeRatio;\n        }\n        // if (state.props.debug.printLayoutTime) {\n        //   debugData.layoutSum += performance.now() - updateStartTime;\n        //   debugData.layoutCount++;\n        // }\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, transform, clippingRect, alpha) {\n        if (!state.vertexBuffer) {\n            // Nothing to draw\n            return;\n        }\n        const drawStartTime = performance.now();\n        const { sdfShader } = this;\n        const { renderer } = this.stage;\n        const { appWidth, appHeight } = this.stage.options;\n        const { fontSize, color, contain, scrollable, zIndex, debug } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        const { textW = 0, textH = 0, distanceRange, vertexBuffer, bufferNumFloats, bufferUploaded, renderWindow, debugData, trFontFace, } = state;\n        let { webGlBuffers } = state;\n        if (!webGlBuffers) {\n            const gl = renderer.gl;\n            const stride = 4 * Float32Array.BYTES_PER_ELEMENT;\n            const webGlBuffer = gl.createBuffer();\n            assertTruthy(webGlBuffer);\n            state.webGlBuffers = new BufferCollection([\n                {\n                    buffer: webGlBuffer,\n                    attributes: {\n                        a_position: {\n                            name: 'a_position',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 0, // start at the beginning of the buffer\n                        },\n                        a_textureCoordinate: {\n                            name: 'a_textureCoordinate',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                        },\n                    },\n                },\n            ]);\n            state.bufferUploaded = false;\n            assertTruthy(state.webGlBuffers);\n            webGlBuffers = state.webGlBuffers;\n        }\n        if (!bufferUploaded) {\n            const gl = renderer.gl;\n            const buffer = webGlBuffers?.getBuffer('a_textureCoordinate') ?? null;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertexBuffer, gl.STATIC_DRAW);\n            state.bufferUploaded = true;\n        }\n        assertTruthy(trFontFace);\n        const renderOp = new WebGlCoreRenderOp(renderer.gl, renderer.options, webGlBuffers, this.sdfShader, {\n            transform: transform.data,\n            // IMPORTANT: The SDF Shader expects the color NOT to be premultiplied\n            // for the best blending results. Which is why we use `mergeColorAlpha`\n            // instead of `mergeColorAlphaPremultiplied` here.\n            color: mergeColorAlpha(color, alpha),\n            size: fontSize / (trFontFace.data?.info.size || 0),\n            scrollY,\n            distanceRange,\n            debug: debug.sdfShaderDebug,\n        }, alpha, clippingRect, { height: textH, width: textW }, 0, zIndex);\n        const texture = state.trFontFace?.texture;\n        assertTruthy(texture);\n        const ctxTexture = this.stage.txManager.getCtxTexture(texture);\n        renderOp.addTexture(ctxTexture);\n        renderOp.length = state.bufferNumFloats;\n        renderOp.numQuads = state.bufferNumQuads;\n        renderer.addRenderable(renderOp);\n        // const elementRect = {\n        //   x: x,\n        //   y: y,\n        //   w: contain !== 'none' ? width : textW,\n        //   h: contain === 'both' ? height : textH,\n        // };\n        // const visibleRect = intersectRect(\n        //   {\n        //     x: 0,\n        //     y: 0,\n        //     w: renderer.w,\n        //     h: renderer.h,\n        //   },\n        //   elementRect,\n        // );\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // Draw the arrays\n        // gl.drawArrays(\n        //   gl.TRIANGLES, // Primitive type\n        //   0,\n        //   bufferNumVertices, // Number of verticies\n        // );\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n        // if (debug.printLayoutTime) {\n        //   debugData.drawSum += performance.now() - drawStartTime;\n        //   debugData.drawCount++;\n        // }\n    }\n    //#endregion Overrides\n    resolveFontFace(props) {\n        return TrFontManager.resolveFontFace([this.msdfFontFamilies, this.ssdfFontFamilies], props);\n    }\n    /**\n     * Invalidate the cache stored in the state. This will cause the text to be\n     * re-layed out on the next update.\n     *\n     * @param state\n     */\n    invalidateCache(state) {\n        state.renderWindow = undefined;\n        state.textH = undefined;\n        state.textW = undefined;\n        state.lineCache = [];\n        this.setStatus(state, 'loading');\n    }\n}\n//# sourceMappingURL=SdfTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Number of floating point numbers that represent a single glyph in the SDF vertex buffer.\n *\n * @remarks\n * The vertex buffer contains:\n *  - 6 vertex positions\n *  - 6 texture coordinates\n *  - = 12 positions/coordinates per glyph\n *\n * Each vertex position and texture coordinate consist of 2 floating point numbers (x/y).\n * So there are 12 * 2 = 24 floating point numbers that make up a single glyph.\n */\nexport const FLOATS_PER_GLYPH = 24;\n//# sourceMappingURL=constants.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isBoundPositive } from '../../../../lib/utils.js';\n/**\n * Create a render window from the given parameters.\n *\n * @remarks\n * The render window is a rectangle that defines the area of the text that\n * should be rendered. It is used to skip rendering parts of the text that\n * are outside of the render window. The render window is relative to the\n * text's top left corner of the overrall text.\n *\n * @param x The x coordinate of the text element's top left corner relative to the screen.\n * @param y The y coordinate of the text element's top left corner relative to the screen.\n * @param scrollY The amount of pixels to scroll the text vertically.\n * @param lineHeight The height of a single line of text.\n * @param numExtraLines The number of extra lines to render above and below the visible window.\n * @param visibleWindow The visible window of the text element relative to the screen\n * @returns\n */\nexport function makeRenderWindow(x, y, scrollY, lineHeight, numExtraLines, visibleWindow) {\n    const bufferMargin = lineHeight * numExtraLines;\n    const x1 = visibleWindow.x1 - x;\n    const y1 = visibleWindow.y1 - y;\n    return isBoundPositive(visibleWindow)\n        ? {\n            x1: x1,\n            y1: y1 + scrollY - bufferMargin,\n            x2: x1 + (visibleWindow.x2 - visibleWindow.x1),\n            y2: y1 + scrollY + (visibleWindow.y2 - visibleWindow.y1) + bufferMargin,\n        }\n        : {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        };\n}\n//# sourceMappingURL=makeRenderWindow.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Gets the start conditions for the layout loop.\n *\n * @remarks\n * Returns `undefined` if the layout loop should not be run.\n *\n * @param fontSize\n * @param fontSizeRatio\n * @param sdfLineHeight\n * @param renderWindow\n * @param lineCache\n * @param textH\n * @returns\n */\nexport function getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH) {\n    // State variables\n    let startLineIndex = 0;\n    if (renderWindow) {\n        startLineIndex = Math.min(Math.max(Math.floor(renderWindow.y1 / fontSize), 0), lineCache.length);\n    }\n    // TODO: Possibly break out startX / startY into a separate function\n    // TODO: (fontSize / 6.4286 / fontSizeRatio) Adding this to the startY helps the text line up better with Canvas rendered text\n    const startX = 0;\n    const startY = offsetY / fontSizeRatio + startLineIndex * sdfLineHeight; // TODO: Figure out what determines the initial y offset of text.\n    // Don't attempt to render anything if we know we're starting past the established end of the text\n    if (textH && startY >= textH / fontSizeRatio) {\n        return;\n    }\n    return {\n        x: startX,\n        y: startY,\n        lineIndex: startLineIndex,\n    };\n}\n//# sourceMappingURL=getStartConditions.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { getRgbaString } from '../../lib/utils.js';\nconst MAX_TEXTURE_DIMENSION = 2048;\nexport class LightningTextTextureRenderer {\n    _canvas;\n    _context;\n    _settings;\n    renderInfo;\n    constructor(canvas, context) {\n        this._canvas = canvas;\n        this._context = context;\n        this._settings = this.mergeDefaults({});\n    }\n    set settings(v) {\n        this._settings = this.mergeDefaults(v);\n    }\n    get settings() {\n        return this._settings;\n    }\n    getPrecision() {\n        return this._settings.precision;\n    }\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    }\n    _getFontSetting() {\n        const ff = [this._settings.fontFace];\n        const ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === 'serif' || ff[i] === 'sans-serif') {\n                ffs.push(ff[i]);\n            }\n            else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(',')}`;\n    }\n    _load() {\n        if (true && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts\n                        .load(fontSetting, this._settings.text)\n                        .catch((err) => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    })\n                        .then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            }\n            catch (e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n    calculateRenderInfo() {\n        const renderInfo = {};\n        const precision = this.getPrecision();\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null\n            ? null\n            : this._settings.offsetY * precision;\n        let lineHeight = (this._settings.lineHeight || fontSize) * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n        // Set font properties.\n        this.setFontProperties();\n        // Total width.\n        let width = w || 2048 / this.getPrecision();\n        // Inner width.\n        let innerWidth = width - paddingLeft;\n        if (innerWidth < 10) {\n            width += 10 - innerWidth;\n            innerWidth = 10;\n        }\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth;\n        }\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\n        }\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        }\n        else {\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\n            const n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            const usedLines = lines.slice(0, this._settings.maxLines);\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                const w = this._settings.maxLinesSuffix\n                    ? this.measureText(this._settings.maxLinesSuffix)\n                    : 0;\n                const al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = `${al.l[0]}${this._settings.maxLinesSuffix}`;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            }\n            else {\n                otherLines = [''];\n            }\n            // Re-assemble the remaining text.\n            let i;\n            const n = lines.length;\n            let j = 0;\n            const m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += `${otherLines[j] ? ' ' : ''}${lines[i]}`;\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n            renderInfo.remainingText = otherLines.join('\\n');\n            renderInfo.moreTextLines = true;\n            lines = usedLines;\n        }\n        else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = '';\n        }\n        // calculate text width\n        let maxLineWidth = 0;\n        const lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            const lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        renderInfo.lineWidths = lineWidths;\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n        let height;\n        if (h) {\n            height = h;\n        }\n        else {\n            const baselineOffset = this._settings.textBaseline != 'bottom' ? 0.5 * fontSize : 0;\n            height =\n                lineHeight * (lines.length - 1) +\n                    baselineOffset +\n                    Math.max(lineHeight, fontSize) +\n                    (offsetY || 0);\n        }\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n        return renderInfo;\n    }\n    draw(renderInfo, linesOverride) {\n        const precision = this.getPrecision();\n        // Allow lines to be overriden for partial rendering.\n        const lines = linesOverride?.lines || renderInfo.lines;\n        const lineWidths = linesOverride?.lineWidths || renderInfo.lineWidths;\n        const height = linesOverride\n            ? linesOverride.lines.length * renderInfo.lineHeight\n            : renderInfo.height;\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.min(Math.ceil(renderInfo.width + this._settings.textRenderIssueMargin), MAX_TEXTURE_DIMENSION);\n        this._canvas.height = Math.min(Math.ceil(height), MAX_TEXTURE_DIMENSION);\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n        let linePositionX;\n        let linePositionY;\n        const drawLines = [];\n        // Draw lines line by line.\n        for (let i = 0, n = lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n            // By default, text is aligned to top\n            linePositionY = i * renderInfo.lineHeight + renderInfo.offsetY;\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            }\n            else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n            if (this._settings.textAlign === 'right') {\n                linePositionX += renderInfo.innerWidth - lineWidths[i];\n            }\n            else if (this._settings.textAlign === 'center') {\n                linePositionX += (renderInfo.innerWidth - lineWidths[i]) / 2;\n            }\n            linePositionX += renderInfo.paddingLeft;\n            drawLines.push({\n                text: lines[i],\n                x: linePositionX,\n                y: linePositionY,\n                w: lineWidths[i],\n            });\n        }\n        // Highlight.\n        if (this._settings.highlight) {\n            const color = this._settings.highlightColor;\n            const hlHeight = this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5;\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = this._settings.highlightPaddingLeft !== null\n                ? this._settings.highlightPaddingLeft * precision\n                : renderInfo.paddingLeft;\n            const hlPaddingRight = this._settings.highlightPaddingRight !== null\n                ? this._settings.highlightPaddingRight * precision\n                : renderInfo.paddingRight;\n            this._context.fillStyle = getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                const drawLine = drawLines[i];\n                this._context.fillRect(drawLine.x - hlPaddingLeft, drawLine.y - renderInfo.offsetY + offset, drawLine.w + hlPaddingRight + hlPaddingLeft, hlHeight);\n            }\n        }\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [\n                this._context.shadowColor,\n                this._context.shadowOffsetX,\n                this._context.shadowOffsetY,\n                this._context.shadowBlur,\n            ];\n            this._context.shadowColor = getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n        this._context.fillStyle = getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            const drawLine = drawLines[i];\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            }\n            else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n        this.renderInfo = renderInfo;\n    }\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length;\n        const wordWidth = this._context.measureText(word).width;\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width +\n            suffixWidth;\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                }\n                else {\n                    break;\n                }\n            }\n            /* In case guess was underestimated, extend it letter by letter. */\n        }\n        else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                }\n                else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -= 1;\n                    break;\n                }\n            }\n        }\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return (word.substring(0, cutoffIndex) +\n            (wordWrapWidth >= suffixWidth ? suffix : ''));\n    }\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        const lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        const realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            const resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            const words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ', letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ` ${words[j]}`;\n                }\n            }\n            resultLines.push(result);\n            result = '';\n            allLines = allLines.concat(resultLines);\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n        return { l: allLines, n: realNewlines };\n    }\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    mergeDefaults(settings) {\n        return {\n            text: '',\n            w: 0,\n            h: 0,\n            fontStyle: 'normal',\n            fontSize: 40,\n            fontFace: null,\n            wordWrap: true,\n            wordWrapWidth: 0,\n            wordBreak: false,\n            textOverflow: '',\n            lineHeight: null,\n            textBaseline: 'alphabetic',\n            textAlign: 'left',\n            verticalAlign: 'top',\n            offsetY: null,\n            maxLines: 0,\n            maxLinesSuffix: '..',\n            textColor: [1.0, 1.0, 1.0, 1.0],\n            paddingLeft: 0,\n            paddingRight: 0,\n            shadow: false,\n            shadowColor: [0.0, 0.0, 0.0, 1.0],\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowBlur: 5,\n            highlight: false,\n            highlightHeight: 0,\n            highlightColor: [0.0, 0.0, 0.0, 1.0],\n            highlightOffset: 0,\n            highlightPaddingLeft: 0,\n            highlightPaddingRight: 0,\n            letterSpacing: 0,\n            textIndent: 0,\n            cutSx: 0,\n            cutEx: 0,\n            cutSy: 0,\n            cutEy: 0,\n            advancedRenderer: false,\n            fontBaselineRatio: 0,\n            precision: 1,\n            textRenderIssueMargin: 0,\n            ...settings,\n        };\n    }\n}\n//# sourceMappingURL=LightningTextTextureRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nimport { assertTruthy } from '../../../utils.js';\nimport { intersectRect, intersectBound, getNormalizedRgbaComponents, getNormalizedAlphaComponent, } from '../../lib/utils.js';\nimport { WebTrFontFace } from '../font-face-types/WebTrFontFace.js';\nimport { LightningTextTextureRenderer, } from './LightningTextTextureRenderer.js';\nimport { TextRenderer, } from './TextRenderer.js';\nconst resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\n/**\n * Global font set regardless of if run in the main thread or a web worker\n */\nconst globalFontSet = (resolvedGlobal.document?.fonts ||\n    resolvedGlobal.fonts);\nfunction getFontCssString(props) {\n    const { fontFamily, fontStyle, fontWeight, fontStretch, fontSize } = props;\n    return [fontStyle, fontWeight, fontStretch, `${fontSize}px`, fontFamily].join(' ');\n}\nexport class CanvasTextRenderer extends TextRenderer {\n    canvas;\n    context;\n    constructor(stage) {\n        super(stage);\n        if (typeof OffscreenCanvas !== 'undefined') {\n            this.canvas = new OffscreenCanvas(0, 0);\n        }\n        else {\n            this.canvas = document.createElement('canvas');\n        }\n        let context = this.canvas.getContext('2d');\n        if (!context) {\n            // A browser may appear to support OffscreenCanvas but not actually support the Canvas '2d' context\n            // Here we try getting the context again after falling back to an HTMLCanvasElement.\n            // See: https://github.com/lightning-js/renderer/issues/26#issuecomment-1750438486\n            this.canvas = document.createElement('canvas');\n            context = this.canvas.getContext('2d');\n        }\n        assertTruthy(context);\n        this.context = context;\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.markForReload(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.markForReload(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n                this.markForReload(state);\n            },\n            x: (state, value) => {\n                state.props.x = value;\n            },\n            y: (state, value) => {\n                state.props.y = value;\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.markForReload(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.markForReload(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.markForReload(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.markForReload(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.markForReload(state);\n            },\n            // debug: (state, value) => {\n            //   state.props.debug = value;\n            // },\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    canRenderFont(props) {\n        // The canvas renderer can render any font because it automatically\n        // falls back to system fonts. The CanvasTextRenderer should be\n        // checked last if other renderers are preferred.\n        return true;\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof WebTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an Canvas font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof WebTrFontFace);\n        // We simply add the font face to the document\n        // @ts-expect-error `add()` method should be available from a FontFaceSet\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        globalFontSet.add(fontFace.fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            emitter: new EventEmitter(),\n            canvasPages: undefined,\n            lightning2TextRenderer: new LightningTextTextureRenderer(this.canvas, this.context),\n            renderWindow: undefined,\n            renderInfo: undefined,\n            forceFullLayoutCalc: false,\n            textW: 0,\n            textH: 0,\n            fontInfo: undefined,\n            fontFaceLoadedHandler: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                drawCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // If fontInfo is invalid, we need to establish it\n        if (!state.fontInfo) {\n            const cssString = getFontCssString(state.props);\n            state.fontInfo = {\n                cssString: cssString,\n                // TODO: For efficiency we would use this here but it's not reliable on WPE -> document.fonts.check(cssString),\n                loaded: false,\n            };\n            // If font is not loaded, set up a handler to update the font info when the font loads\n            if (!state.fontInfo.loaded) {\n                globalFontSet\n                    .load(cssString)\n                    .then(this.onFontLoaded.bind(this, state, cssString))\n                    .catch(this.onFontLoadError.bind(this, state, cssString));\n                return;\n            }\n        }\n        // If we're waiting for a font face to load, don't render anything\n        if (!state.fontInfo.loaded) {\n            return;\n        }\n        if (!state.renderInfo) {\n            state.lightning2TextRenderer.settings = {\n                text: state.props.text,\n                textAlign: state.props.textAlign,\n                fontFace: state.props.fontFamily,\n                fontSize: state.props.fontSize,\n                fontStyle: [\n                    state.props.fontStretch,\n                    state.props.fontStyle,\n                    state.props.fontWeight,\n                ].join(' '),\n                textColor: getNormalizedRgbaComponents(state.props.color),\n                offsetY: state.props.fontSize + state.props.offsetY,\n                wordWrap: state.props.contain !== 'none',\n                wordWrapWidth: state.props.contain === 'none' ? undefined : state.props.width,\n                letterSpacing: state.props.letterSpacing,\n            };\n            const renderInfoCalculateTime = performance.now();\n            state.renderInfo = state.lightning2TextRenderer.calculateRenderInfo();\n            console.log('Render info calculated in', performance.now() - renderInfoCalculateTime, 'ms');\n            state.textH = state.renderInfo.lineHeight * state.renderInfo.lines.length;\n            state.textW = state.renderInfo.width;\n            // Invalidate renderWindow because the renderInfo changed\n            state.renderWindow = undefined;\n        }\n        const { x, y, width, height, scrollY, contain } = state.props;\n        let { renderWindow, canvasPages } = state;\n        // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n        const rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n        const elementBounds = {\n            x1: x,\n            y1: y,\n            x2: contain !== 'none' ? x + width : Infinity,\n            y2: contain === 'both' ? y + height : Infinity,\n        };\n        /**\n         * Area that is visible on the screen.\n         */\n        const visibleWindow = intersectBound(rendererBounds, elementBounds);\n        const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n        const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / state.renderInfo.lineHeight);\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        if (renderWindow && canvasPages) {\n            const renderWindowScreenX1 = x + renderWindow.x1;\n            const renderWindowScreenY1 = y - scrollY + renderWindow.y1;\n            const renderWindowScreenX2 = x + renderWindow.x2;\n            const renderWindowScreenY2 = y - scrollY + renderWindow.y2;\n            if (renderWindowScreenX1 <= visibleWindow.x1 &&\n                renderWindowScreenX2 >= visibleWindow.x2 &&\n                renderWindowScreenY1 <= visibleWindow.y1 &&\n                renderWindowScreenY2 >= visibleWindow.y2)\n                return;\n            if (renderWindowScreenY2 < visibleWindow.y2) {\n                // We've scrolled up, so we need to render the next page\n                renderWindow.y1 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.push(canvasPages.shift());\n                canvasPages[2].lineNumStart =\n                    canvasPages[1].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].lineNumEnd =\n                    canvasPages[2].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].valid = false;\n            }\n            else if (renderWindowScreenY1 > visibleWindow.y1) {\n                // We've scrolled down, so we need to render the previous page\n                renderWindow.y1 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.unshift(canvasPages.pop());\n                canvasPages[0].lineNumStart =\n                    canvasPages[1].lineNumStart - maxLinesPerCanvasPage;\n                canvasPages[0].lineNumEnd =\n                    canvasPages[0].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[0].valid = false;\n            }\n        }\n        else {\n            const pageHeight = state.renderInfo.lineHeight * maxLinesPerCanvasPage;\n            const page1Block = Math.ceil(scrollY / pageHeight);\n            const page1LineStart = page1Block * maxLinesPerCanvasPage;\n            const page0LineStart = page1LineStart - maxLinesPerCanvasPage;\n            const page2LineStart = page1LineStart + maxLinesPerCanvasPage;\n            // We haven't rendered anything yet, so we need to render the first page\n            // If canvasPages already exist, let's re-use the textures\n            canvasPages = [\n                {\n                    texture: canvasPages?.[0].texture,\n                    lineNumStart: page0LineStart,\n                    lineNumEnd: page0LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[1].texture,\n                    lineNumStart: page1LineStart,\n                    lineNumEnd: page1LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[2].texture,\n                    lineNumStart: page2LineStart,\n                    lineNumEnd: page2LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n            ];\n            state.canvasPages = canvasPages;\n            const scrollYNearestPage = Math.ceil(scrollY / pageHeight) * pageHeight;\n            renderWindow = {\n                x1: 0,\n                y1: scrollYNearestPage - pageHeight,\n                x2: width,\n                y2: scrollYNearestPage + pageHeight * 2,\n            };\n        }\n        state.renderWindow = renderWindow;\n        const pageDrawTime = performance.now();\n        for (const pageInfo of canvasPages) {\n            if (pageInfo.valid)\n                continue;\n            if (pageInfo.lineNumStart < 0) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: '',\n                });\n                pageInfo.valid = true;\n                continue;\n            }\n            state.lightning2TextRenderer.draw(state.renderInfo, {\n                lines: state.renderInfo.lines.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n                lineWidths: state.renderInfo.lineWidths.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n            });\n            if (!(this.canvas.width === 0 || this.canvas.height === 0)) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: this.context.getImageData(0, 0, this.canvas.width, this.canvas.height),\n                }, {\n                    preload: true,\n                });\n            }\n            pageInfo.valid = true;\n        }\n        console.log('pageDrawTime', performance.now() - pageDrawTime, 'ms');\n        // Report final status\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, transform, clippingRect, alpha) {\n        const { stage } = this;\n        const { canvasPages, textW = 0, textH = 0, renderWindow } = state;\n        if (!canvasPages || !renderWindow)\n            return;\n        const { x, y, scrollY, contain, width, height /*, debug*/ } = state.props;\n        const elementRect = {\n            x: x,\n            y: y,\n            width: contain !== 'none' ? width : textW,\n            height: contain === 'both' ? height : textH,\n        };\n        const visibleRect = intersectRect({\n            x: 0,\n            y: 0,\n            width: stage.options.appWidth,\n            height: stage.options.appHeight,\n        }, elementRect);\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        assertTruthy(canvasPages, 'canvasPages is not defined');\n        assertTruthy(renderWindow, 'renderWindow is not defined');\n        const renderWindowHeight = renderWindow.y2 - renderWindow.y1;\n        const pageSize = renderWindowHeight / 3.0;\n        const { zIndex, color } = state.props;\n        // Color alpha of text is not properly rendered to the Canvas texture, so we\n        // need to apply it here.\n        const combinedAlpha = alpha * getNormalizedAlphaComponent(color);\n        if (canvasPages[0].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[0].texture?.dimensions?.width || 0,\n                height: canvasPages[0].texture?.dimensions?.height || 0,\n                texture: canvasPages[0].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        if (canvasPages[1].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[1].texture?.dimensions?.width || 0,\n                height: canvasPages[1].texture?.dimensions?.height || 0,\n                texture: canvasPages[1].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1 + pageSize,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        if (canvasPages[2].valid) {\n            this.stage.renderer.addRenderable({\n                alpha: combinedAlpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[2].texture?.dimensions?.width || 0,\n                height: canvasPages[2].texture?.dimensions?.height || 0,\n                texture: canvasPages[2].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                tx: transform.tx,\n                ty: transform.ty - scrollY + renderWindow.y1 + pageSize + pageSize,\n                ta: transform.ta,\n                tb: transform.tb,\n                tc: transform.tc,\n                td: transform.td,\n            });\n        }\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n    }\n    //#endregion Overrides\n    markForReload(state) {\n        state.renderInfo = undefined;\n        this.setStatus(state, 'loading');\n    }\n    onFontLoaded(state, cssString) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        state.fontInfo.loaded = true;\n        this.updateState(state);\n    }\n    onFontLoadError(state, cssString, error) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        // Font didn't actually load, but we'll log the error and mark it as loaded\n        // because the browser can still render with a fallback font.\n        state.fontInfo.loaded = true;\n        console.error(`CanvasTextRenderer: Error loading font '${state.fontInfo.cssString}'`, error);\n        this.updateState(state);\n    }\n}\n//# sourceMappingURL=CanvasTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Scene } from './scene/Scene.js';\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { WebGlCoreRenderer } from './renderers/webgl/WebGlCoreRenderer.js';\nimport { assertTruthy } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { SdfTextRenderer } from './text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js';\nimport { CanvasTextRenderer } from './text-rendering/renderers/CanvasTextRenderer.js';\nimport { intersectRect } from './lib/utils.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    scene;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, rootId, debug, appWidth, appHeight } = options;\n        this.txManager = new CoreTextureManager();\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        if (debug?.monitorTextureCache) {\n            setInterval(() => {\n                assertTruthy(this.txManager);\n                const debugInfo = this.txManager.getDebugInfo();\n                console.log('Texture ID Cache Size: ', debugInfo.idCacheSize);\n                console.log('Texture Key Cache Size: ', debugInfo.keyCacheSize);\n            }, 1000);\n        }\n        this.renderer = new WebGlCoreRenderer({\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            shManager: this.shManager,\n        });\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        this.textRenderers = {\n            canvas: new CanvasTextRenderer(this),\n            sdf: new SdfTextRenderer(this),\n        };\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            id: rootId,\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scaleX: 1,\n            scaleY: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: null,\n            shader: null,\n            shaderProps: null,\n        });\n        this.scene = new Scene(rootNode);\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, scene, animationManager } = this;\n        if (!scene?.root) {\n            return;\n        }\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = getTimeStamp();\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : this.currentFrameTime - this.lastFrameTime;\n        // step animation\n        animationManager.update(this.deltaTime);\n        // reset and clear viewport\n        renderer?.reset();\n        // test if we need to update the scene\n        if (scene?.root?.hasUpdates) {\n            scene?.root?.update(this.deltaTime);\n        }\n        this.addQuads(scene.root);\n        renderer?.sortRenderables();\n        renderer?.render();\n    }\n    addQuads(node, parentClippingRect = null) {\n        assertTruthy(this.renderer && node.globalTransform);\n        const gt = node.globalTransform;\n        const isRotated = gt.tb !== 0 || gt.tc !== 0;\n        let clippingRect = node.clipping && !isRotated\n            ? {\n                x: gt.tx,\n                y: gt.ty,\n                width: node.width * gt.ta,\n                height: node.height * gt.td,\n            }\n            : null;\n        if (parentClippingRect && clippingRect) {\n            clippingRect = intersectRect(parentClippingRect, clippingRect);\n        }\n        else if (parentClippingRect) {\n            clippingRect = parentClippingRect;\n        }\n        node.renderQuads(this.renderer, clippingRect);\n        node.children.forEach((child) => {\n            if (child.worldAlpha === 0) {\n                return;\n            }\n            this.addQuads(child, clippingRect);\n        });\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will always return at least a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (trId === 'canvas') {\n                    // Canvas is always a fallback\n                    continue;\n                }\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    //#region Properties\n    get root() {\n        return this.scene?.root || null;\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    const loop = () => {\n        // emit('frameStart');\n        stage.drawFrame();\n        requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode } from './CoreNode.js';\nimport { assertTruthy } from '../utils.js';\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    updateScheduled;\n    _textRendererOverride = null;\n    constructor(stage, props) {\n        super(stage, props);\n        this.updateScheduled = false;\n        this._textRendererOverride = props.textRendererOverride;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scaleX: props.scaleX,\n            scaleY: props.scaleY,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n        }, undefined);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        const { contain } = this;\n        const setWidth = this.trState.props.width;\n        const setHeight = this.trState.props.height;\n        const calcWidth = this.trState.textW || 0;\n        const calcHeight = this.trState.textH || 0;\n        if (contain === 'both') {\n            this.props.width = setWidth;\n            this.props.height = setHeight;\n        }\n        else if (contain === 'width') {\n            this.props.width = setWidth;\n            this.props.height = calcHeight;\n        }\n        else if (contain === 'none') {\n            this.props.width = calcWidth;\n            this.props.height = calcHeight;\n        }\n        this.updateLocalTransform();\n        this.emit('loaded', {\n            type: 'text',\n            dimensions: {\n                width: this.trState.textW || 0,\n                height: this.trState.textH || 0,\n            },\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('failed', {\n            type: 'text',\n            error,\n        });\n    };\n    get width() {\n        return this.trState.props.width;\n    }\n    set width(value) {\n        this.textRenderer.set.width(this.trState, value);\n        this.updateText();\n    }\n    get height() {\n        return this.trState.props.height;\n    }\n    set height(value) {\n        this.textRenderer.set.height(this.trState, value);\n        this.updateText();\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n        this.updateText();\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n        this.updateText();\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState(this.trState.props, this.trState);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n        this.updateText();\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n        this.updateText();\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n        this.updateText();\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n        this.updateText();\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n        this.updateText();\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n        this.updateText();\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n        this.updateText();\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n        this.updateText();\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n        this.updateText();\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n        this.updateText();\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n        this.updateText();\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n        this.updateText();\n    }\n    update(delta) {\n        super.update(delta);\n        assertTruthy(this.globalTransform);\n        // globalTransform is updated in super.update(delta)\n        this.textRenderer.set.x(this.trState, this.globalTransform.tx);\n        this.textRenderer.set.y(this.trState, this.globalTransform.ty);\n        if (this.trState.status === 'loading') {\n            // Update the text state now\n            this.textRenderer.updateState(this.trState);\n        }\n    }\n    updateText() {\n        if (this.updateScheduled) {\n            return;\n        }\n        this.updateScheduled = true;\n        queueMicrotask(() => {\n            this.updateScheduled = false;\n            this.textRenderer.updateState(this.trState);\n        });\n    }\n    renderQuads(renderer, clippingRect) {\n        assertTruthy(this.globalTransform);\n        this.textRenderer.renderQuads(this.trState, this.globalTransform, clippingRect, this.worldAlpha);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    resolveTextRendererAndState(props, prevState) {\n        const resolvedTextRenderer = this.stage.resolveTextRenderer(props, this._textRendererOverride);\n        const textRendererState = resolvedTextRenderer.createState(props);\n        const stateEvents = ['loading', 'loaded', 'failed'];\n        if (prevState) {\n            // Remove the old event listeners from previous state obj there was one\n            stateEvents.forEach((eventName) => {\n                prevState.emitter.off(eventName);\n            });\n        }\n        // Forward basic status events from the text renderer state\n        textRendererState.emitter.on('loading', () => {\n            // This event will be fired only once between the `loading` and `loaded`\n            // event ONLY if the font is not already loaded\n            textRendererState.emitter.once('fontLoaded', () => {\n                // When it's fired we must run update to make sure the text renders\n                this.updateText();\n            });\n            textRendererState.emitter.once('loaded', () => {\n                // Make sure we stop listening for fontLoaded events\n                textRendererState.emitter.off('fontLoaded');\n            });\n        });\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        this.updateText();\n        // TODO: Handle text renderer errors\n        return {\n            resolvedTextRenderer,\n            textRendererState,\n        };\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * The Global object.\n *\n * @remarks\n * Use this instead of accessing `window` or `self` directly.\n *\n * In the future we may try to get ThreadX working with NodeJS, in that case\n * this can be changed to include NodeJS vs Browser detection logic.\n */\nexport const resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { assertTruthy } from './utils.js';\nclass SharedObject {\n    /**\n     * The ThreadX instance that this SharedObject should interact with\n     *\n     * @remarks\n     * It's unsafe to use `ThreadX.instance` in different, especially asyncronous,\n     * locations directly because it may change during the lifetime of a\n     * SharedObject. At least it can during tests. So this one should always\n     * be referenced when needed.\n     */\n    threadx;\n    sharedObjectStruct;\n    mutations;\n    waitPromise = null;\n    mutationsQueued = false;\n    static staticInitialized = false;\n    _id;\n    _typeId;\n    initialized = false;\n    destroying = false;\n    curProps;\n    /**\n     * Extract the buffer from a SharedObject\n     *\n     * @remarks\n     * For internal use by ThreadX only\n     *\n     * @param sharedObject\n     * @returns\n     */\n    static extractBuffer(sharedObject) {\n        if (sharedObject.destroying || !sharedObject.sharedObjectStruct) {\n            throw new Error('SharedObject.extractBuffer(): SharedObject is or was being destroyed.');\n        }\n        return sharedObject.sharedObjectStruct.buffer;\n    }\n    constructor(sharedObjectStruct, curProps) {\n        this.curProps = curProps;\n        this.threadx = ThreadX.instance;\n        this.sharedObjectStruct = sharedObjectStruct;\n        this._id = sharedObjectStruct.id;\n        this._typeId = sharedObjectStruct.typeId;\n        const constructor = this.constructor;\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.staticInitialized = true;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const prototype = Object.getPrototypeOf(this);\n            Object.keys(curProps).forEach((key) => {\n                Object.defineProperty(prototype, key, {\n                    get: function () {\n                        return this.curProps[key];\n                    },\n                    set: function (value) {\n                        this.curProps[key] =\n                            value;\n                        this.mutations[key] = true;\n                        this.queueMutations();\n                    },\n                });\n            });\n        }\n        this.mutations = {};\n        this._executeMutations();\n        this.initialized = true;\n    }\n    get typeId() {\n        return this._typeId;\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Assumes lock is acquired\n     */\n    processDirtyProperties() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        const { sharedObjectStruct, mutations, curProps } = this;\n        sharedObjectStruct.constructor.propDefs.forEach((propDef, index) => {\n            if (sharedObjectStruct.isDirty(index)) {\n                const propName = propDef.name;\n                // If this property has a pending mutation from this worker, then\n                // cancel it. The mutation from the other worker that has already\n                // been applied to the SharedArrayBuffer will take precedence.\n                delete mutations[propName];\n                const oldValue = curProps[propName];\n                // Apply the mutation from the other worker\n                curProps[propName] =\n                    sharedObjectStruct[propName];\n                // Don't call onPropertyChange during the initialization process\n                if (this.initialized) {\n                    this.onPropertyChange(propName, sharedObjectStruct[propName], oldValue);\n                }\n            }\n        });\n        sharedObjectStruct.resetDirty();\n    }\n    onPropertyChange(propName, newValue, oldValue) {\n        // console.log(`onPropertyChange: ${propName} = ${value} (${this.dirtyProcessCount}, ${ThreadX.workerName)`);\n    }\n    queueMutations() {\n        if (this.mutationsQueued) {\n            return;\n        }\n        this.mutationsQueued = true;\n        queueMicrotask(() => {\n            this.mutationsQueued = false;\n            // If the SharedObject has been destroyed, then forget about processing\n            // any mutations.\n            if (!this.sharedObjectStruct) {\n                return;\n            }\n            this.mutationMicrotask().catch(console.error);\n        });\n    }\n    async mutationMicrotask() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        await this.sharedObjectStruct.lockAsync(async () => {\n            this._executeMutations();\n        });\n        if (this.destroying) {\n            this.finishDestroy();\n        }\n    }\n    flush() {\n        if (this.destroying || !this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        this.sharedObjectStruct.lock(() => {\n            this._executeMutations();\n        });\n    }\n    /**\n     * Called when the SharedObject is being destroyed.\n     *\n     * @remarks\n     * This is an opportunity to clean up anything just prior to the SharedObject\n     * being completely destroyed. Shared mutations are allowed in this method.\n     *\n     * IMPORTANT:\n     * `super.onDestroy()` must be called at the END of any subclass override to\n     * ensure proper cleanup.\n     */\n    onDestroy() {\n        // Implement in subclass\n    }\n    /**\n     * Destroy the SharedObject on this worker only.\n     *\n     * @remarks\n     * This stops any internal mutation processing, releases the reference\n     * to the underlying BufferStruct/SharedArrayBuffer, and removes all\n     * event listeners so that the SharedObject can be garbage collected.\n     *\n     * This does not destroy the SharedObject on other worker. To do that,\n     * call `SharedObject.destroy()` on the other worker.\n     */\n    destroy() {\n        const struct = this.sharedObjectStruct;\n        if (this.destroying || !struct) {\n            return;\n        }\n        this.emit('beforeDestroy', {}, { localOnly: true });\n        this.destroying = true;\n        this.onDestroy();\n        // The remainter of the destroy process (this.finishDestroy) is called\n        // after the next set of mutations is processed. This is to ensure that\n        // any final mutations that are queued up are sent to the opposite thread\n        // before the SharedObject is destroyed on this worker.\n        this.queueMutations();\n    }\n    finishDestroy() {\n        const struct = this.sharedObjectStruct;\n        if (!this.destroying || !struct) {\n            return;\n        }\n        // Remove this object from ThreadX\n        // Silently because ThreadX may already have been removed if this object\n        // is being destroyed because the current worker was told to forget about it.\n        this.threadx.forgetObjects([this], { silent: true }).catch(console.error);\n        // Release the reference to the underlying BufferStruct/SharedArrayBuffer\n        this.sharedObjectStruct = null;\n        // Submit a notify in order to wake up self or other worker if waiting\n        // on the struct. Need to do this otherwise memory leaks.\n        struct.notify();\n        // Emit the afterDestroy event\n        this.emit('afterDestroy', {}, { localOnly: true });\n        // Remove all event listeners\n        this.eventListeners = {};\n    }\n    get isDestroyed() {\n        return this.sharedObjectStruct === null;\n    }\n    _executeMutations() {\n        if (!this.sharedObjectStruct) {\n            // SharedObject was destroyed so there's nothing to do\n            return;\n        }\n        // Only process properties if the SharedObject is dirty and the current\n        // worker is not the one that last modified it.\n        if (this.sharedObjectStruct.notifyValue !== this.threadx.workerId &&\n            this.sharedObjectStruct.isDirty()) {\n            this.processDirtyProperties();\n        }\n        const { mutations } = this;\n        this.mutations = {};\n        for (const key in mutations) {\n            if (Object.prototype.hasOwnProperty.call(mutations, key)) {\n                const value = this.curProps[key];\n                // Workaround TypeScript limitation re-assigning to dynamic keys of a class instance:\n                // https://github.com/microsoft/TypeScript/issues/53738\n                const oldValue = this.sharedObjectStruct[key];\n                // @ts-expect-error Ignore the read-only assignment errors\n                this.sharedObjectStruct[key] =\n                    value;\n            }\n        }\n        if (this.waitPromise) {\n            this.waitPromise = null;\n        }\n        let expectedNotifyValue = this.sharedObjectStruct.notifyValue;\n        if (this.sharedObjectStruct.isDirty()) {\n            this.sharedObjectStruct.notify(this.threadx.workerId);\n            expectedNotifyValue = this.threadx.workerId;\n        }\n        const waitPromise = this.sharedObjectStruct\n            .waitAsync(expectedNotifyValue)\n            .then(async (result) => {\n            // Only respond if this is the most recent wait promise\n            if (this.waitPromise === waitPromise && this.sharedObjectStruct) {\n                assertTruthy(result === 'ok');\n                this.waitPromise = null;\n                await this.mutationMicrotask();\n            }\n        });\n        this.waitPromise = waitPromise;\n    }\n    //#region EventEmitter\n    eventListeners = {};\n    on(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        listeners.push(listener);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data, options = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!options.localOnly) {\n            // Emit on opposite worker (if shared)\n            ThreadX.instance.__sharedObjectEmit(this, event, data);\n        }\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        [...listeners].forEach((listener) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            listener(this, data);\n        });\n    }\n}\nexport { SharedObject };\n//# sourceMappingURL=SharedObject.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction isValidTypeIdCharCode(charCode) {\n    // Allow uppercase letters and numbers\n    return ((charCode >= 65 && charCode <= 90) || (charCode >= 48 && charCode <= 57));\n}\nexport function genTypeId(tidString) {\n    let typeId = 0;\n    if (tidString.length === 0) {\n        throw new Error(`genTypeId: Type ID string must be at least 1 character`);\n    }\n    else if (tidString.length > 4) {\n        throw new Error(`genTypeId: Type ID string must be 4 characters or less`);\n    }\n    for (let i = 0; i < tidString.length; i++) {\n        let charCode = tidString.charCodeAt(i);\n        if (charCode !== charCode) {\n            // Use 0 for NaN\n            charCode = 0;\n        }\n        else if (!isValidTypeIdCharCode(charCode)) {\n            // Throw if the character is not a valid type ID character\n            throw new Error(`genTypeId: Invalid character '${tidString[i]}' (char code: ${charCode}) in type ID string. A-Z and 0-9 only.`);\n        }\n        typeId |= charCode << (i * 8);\n    }\n    return typeId;\n}\n/**\n * Returns true if the given type ID is valid.\n *\n * @param typeId\n * @returns\n */\nexport function isValidTypeId(typeId) {\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (!isValidTypeIdCharCode(charCode) && (charCode !== 0 || i === 0)) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return false;\n        }\n        typeId >>>= 8;\n    }\n    return true;\n}\n/**\n * Converts a type ID to its string form.\n *\n * @remarks\n * If the type ID is not a valid type ID, null is returned.\n *\n * @param typeId\n * @returns\n */\nexport function stringifyTypeId(typeId) {\n    const chars = [];\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (isValidTypeIdCharCode(charCode)) {\n            chars.push(String.fromCharCode(charCode));\n        }\n        else if (charCode !== 0 || i === 0) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return '????';\n        }\n        typeId >>>= 8;\n    }\n    return chars.join('');\n}\n//# sourceMappingURL=buffer-struct-utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { SharedObject } from './SharedObject.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nimport { assertTruthy, resolvedGlobal } from './utils.js';\nfunction isMessage(messageType, message) {\n    return (typeof message === 'object' &&\n        message !== null &&\n        'threadXMessageType' in message &&\n        message.threadXMessageType === messageType);\n}\nfunction isWebWorker(selfObj) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return typeof selfObj.DedicatedWorkerGlobalScope === 'function';\n}\nexport class ThreadX {\n    static init(options) {\n        if (resolvedGlobal.THREADX) {\n            throw new Error('ThreadX.init(): ThreadX already initialized.');\n        }\n        const threadX = new ThreadX(options);\n        resolvedGlobal.THREADX = threadX;\n        return threadX;\n    }\n    static destroy() {\n        if (!resolvedGlobal.THREADX) {\n            console.warn('ThreadX.destroy(): ThreadX is not initialized.');\n            return;\n        }\n        delete resolvedGlobal.THREADX;\n        return;\n    }\n    /**\n     * Get the Worker ID of the current worker\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerId() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerId;\n    }\n    /**\n     * Get the Worker Name of the current thread\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerName() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerName;\n    }\n    static get instance() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX;\n    }\n    workerId;\n    workerName;\n    sharedObjectFactory;\n    onSharedObjectCreated;\n    onBeforeObjectForgotten;\n    /**\n     * User-defined message handler\n     */\n    onUserMessage;\n    sharedObjects = new Map();\n    /**\n     * WeakMap of SharedObjects to additional metadata\n     */\n    sharedObjectData = new WeakMap();\n    workers = new Map();\n    workerReadyPromises = new Map();\n    pendingAsyncMsgs = new Map();\n    nextAsyncMsgId = 0;\n    nextUniqueId = 0;\n    /**\n     * Suppress emitting events from SharedObjects\n     *\n     * @remarks\n     * This is used to prevent infinite loops when emitting events from a SharedObject\n     * that is shared with another worker.\n     *\n     * We set this to true when we receive a SharedObjectEmitMessage from another worker\n     * and set it back to false after we have emitted the event on the SharedObject.\n     */\n    suppressSharedObjectEmit = false;\n    constructor(options) {\n        this.workerId = options.workerId;\n        this.workerName = options.workerName;\n        this.nextUniqueId = options.workerId * 10000000000000 + 1;\n        this.sharedObjectFactory = options.sharedObjectFactory;\n        this.onSharedObjectCreated = options.onObjectShared;\n        this.onBeforeObjectForgotten = options.onBeforeObjectForgotten;\n        this.onUserMessage = options.onMessage;\n        const mySelf = resolvedGlobal;\n        if (isWebWorker(mySelf)) {\n            this.registerWorker('parent', mySelf);\n            this.sendMessage('parent', {\n                threadXMessageType: 'ready',\n            });\n        }\n    }\n    registerWorker(workerName, worker) {\n        this.workers.set(workerName, worker);\n        // Set up a promise that will resolve when the worker sends the\n        // 'ready' message\n        let readyResolve;\n        let readyPromise;\n        if (workerName === 'parent') {\n            // parent worker is always ready\n            readyPromise = Promise.resolve();\n            readyResolve = () => {\n                // do nothing\n            };\n        }\n        else {\n            readyPromise = new Promise((resolve) => {\n                readyResolve = resolve;\n            });\n        }\n        this.workerReadyPromises.set(workerName, {\n            promise: readyPromise,\n            resolve: readyResolve,\n        });\n        this.listenForWorkerMessages(workerName, worker);\n    }\n    closeWorker(workerName) {\n        if (!this.workers.has(workerName)) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        this.closeWorkerAsync(workerName).catch(console.error);\n    }\n    async closeWorkerAsync(workerName, timeout = 5000) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        const result = await Promise.race([\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(false);\n                }, timeout);\n            }),\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'close',\n            }),\n        ]);\n        this.workers.delete(workerName);\n        this.workerReadyPromises.delete(workerName);\n        if (!result) {\n            console.warn(`threadX.closeWorkerAsync(): Worker \"${workerName}\" did not respond to \"close\" message within ${timeout}ms. Forcing termination.`);\n            worker.terminate?.();\n            return 'forced';\n        }\n        return 'graceful';\n    }\n    listenForWorkerMessages(workerName, worker) {\n        worker.addEventListener('message', (event) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const { data } = event;\n            // Process only if message is a ThreadX message\n            const asyncMsgId = data.__asyncMsgId;\n            this.onMessage(workerName, data)\n                .then((response) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: response,\n                    });\n                }\n            })\n                .catch((error) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        error: true,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: error,\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Share a SharedObject with a worker\n     *\n     * @param workerName Worker to share with\n     * @param sharedObject\n     */\n    async shareObjects(workerName, sharedObjects) {\n        for (const sharedObject of sharedObjects) {\n            if (this.sharedObjects.get(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                // TODO: Support sharing objects with multiple workers?\n                //   - Do we really need to do this?\n                console.warn(`ThreadX.shareObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is already shared.`);\n            }\n            else {\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: workerName,\n                    shareConfirmed: false,\n                    emitQueue: null,\n                });\n            }\n        }\n        await this.sendMessageAsync(workerName, {\n            threadXMessageType: 'shareObjects',\n            buffers: sharedObjects.map((so) => {\n                return SharedObject.extractBuffer(so);\n            }),\n        });\n        for (const sharedObject of sharedObjects) {\n            const soData = this.sharedObjectData.get(sharedObject);\n            if (soData) {\n                soData.shareConfirmed = true;\n                const { emitQueue } = soData;\n                if (emitQueue) {\n                    for (const event of emitQueue) {\n                        this.__sharedObjectEmit(sharedObject, event[0], event[1]);\n                    }\n                    soData.emitQueue = null;\n                }\n            }\n        }\n        // TODO: Handle case where worker fails to create shared object on its end\n        //  - We could issue you an error event back to the sharer\n    }\n    /**\n     * Tell ThreadX to forget about SharedObjects\n     *\n     * @remarks\n     * This causes ThreadX on the current worker and the worker that the object\n     * is shared with to forget about the object. It is up to the worker code to\n     * actually make sure that no other references to the SharedObjects exist so\n     * that they can be garbage collected.\n     *\n     * A worker can implement the onObjectForgotten() callback to be notified\n     * when a SharedObject is forgotten.\n     *\n     * @param sharedObject\n     * @param options Options\n     */\n    async forgetObjects(sharedObjects, options = {}) {\n        /**\n         * Map of worker name to array of SharedObjects\n         *\n         * @remarks\n         * We group the shared objects by worker so that we can send a single message\n         * to forget all of the objects shared with each worker.\n         */\n        const objectsByWorker = new Map();\n        for (const sharedObject of sharedObjects) {\n            if (!this.sharedObjects.has(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                if (!options.silent) {\n                    console.warn(`ThreadX.forgetObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is not shared.`);\n                }\n            }\n            else {\n                const soData = this.sharedObjectData.get(sharedObject);\n                assertTruthy(soData);\n                let objectsInWorker = objectsByWorker.get(soData.workerName);\n                if (!objectsInWorker) {\n                    objectsInWorker = [];\n                    objectsByWorker.set(soData.workerName, objectsInWorker);\n                }\n                objectsInWorker.push(sharedObject);\n                this.sharedObjects.delete(sharedObject.id);\n                this.sharedObjectData.delete(sharedObject);\n            }\n        }\n        const promises = [];\n        for (const [workerName, objectsInWorker] of objectsByWorker) {\n            promises.push(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'forgetObjects',\n                objectIds: objectsInWorker.map((so) => so.id),\n            }));\n        }\n        await Promise.all(promises);\n    }\n    sendMessage(workerName, message, transfer) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.sendMessage(): Worker '${workerName}' not registered.`);\n        }\n        this.sendMessageAsync(workerName, message, transfer, {\n            skipResponseWait: true,\n        }).catch(console.error);\n    }\n    async sendMessageAsync(workerName, message, transfer, options = {}) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.execMessage(): Worker '${workerName}' not registered.`);\n        }\n        // Wait for the worker to be ready (if it isn't already)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        await this.workerReadyPromises.get(workerName).promise;\n        if (options.skipResponseWait) {\n            worker.postMessage(message, transfer);\n            return;\n        }\n        const asyncMsgId = this.nextAsyncMsgId++;\n        const promise = new Promise((resolve, reject) => {\n            this.pendingAsyncMsgs.set(asyncMsgId, {\n                resolve,\n                reject,\n            });\n        });\n        message.__asyncMsgId = asyncMsgId;\n        worker.postMessage(message, transfer);\n        return promise;\n    }\n    async onMessage(srcWorkerName, message) {\n        if (isMessage('shareObjects', message)) {\n            message.buffers.forEach((buffer) => {\n                const sharedObject = this.sharedObjectFactory?.(buffer);\n                if (!sharedObject) {\n                    throw new Error('ThreadX.onMesasge(): Failed to create shared object.');\n                }\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: srcWorkerName,\n                    shareConfirmed: true,\n                    emitQueue: null,\n                });\n                this.onSharedObjectCreated?.(sharedObject);\n            });\n        }\n        else if (isMessage('forgetObjects', message)) {\n            message.objectIds.forEach((id) => {\n                const sharedObject = this.sharedObjects.get(id);\n                if (!sharedObject) {\n                    // If we can't find the SharedObject then it wasn't shared with this\n                    // worker. Just ignore the message.\n                    return;\n                }\n                this.onBeforeObjectForgotten?.(sharedObject);\n                this.sharedObjects.delete(id);\n                sharedObject.destroy();\n            });\n        }\n        else if (isMessage('sharedObjectEmit', message)) {\n            const sharedObject = this.sharedObjects.get(message.sharedObjectId);\n            if (!sharedObject) {\n                // If we can't find the SharedObject then it wasn't shared with this\n                // worker. Just ignore the message.\n                return;\n            }\n            // Prevent emitting the event back to the worker that sent it.\n            this.suppressSharedObjectEmit = true;\n            sharedObject.emit(message.eventName, message.data);\n            this.suppressSharedObjectEmit = false;\n        }\n        else if (isMessage('response', message)) {\n            const response = this.pendingAsyncMsgs.get(message.asyncMsgId);\n            if (!response) {\n                throw new Error(`ThreadX.onMessage(): Received response for unknown request (ID: ${message.asyncMsgId})`);\n            }\n            this.pendingAsyncMsgs.delete(message.asyncMsgId);\n            if (message.error) {\n                response.reject(message.data);\n            }\n            else {\n                response.resolve(message.data);\n            }\n        }\n        else if (isMessage('close', message)) {\n            resolvedGlobal.close();\n            return true;\n        }\n        else if (isMessage('ready', message)) {\n            // Resolve the worker ready promise\n            this.workerReadyPromises.get(srcWorkerName)?.resolve();\n            return true;\n        }\n        else if (this.onUserMessage) {\n            return await this.onUserMessage(message);\n        }\n    }\n    getSharedObjectById(id) {\n        return this.sharedObjects.get(id) || null;\n    }\n    /**\n     * Generates an ID that is unique across all ThreadX workers.\n     *\n     * @remarks\n     * The ID is based on the `workerId` set in the `ThreadXOptions` and an\n     * incrementing counter. For the ID to actually be unique the `workerId` must\n     * also be unique.\n     *\n     * @returns A unique ID\n     */\n    generateUniqueId() {\n        return this.nextUniqueId++;\n    }\n    /**\n     * Emit an event from a SharedObject to all other workers\n     *\n     * @internalRemarks\n     * For internal ThreadX use only.\n     *\n     * Since we aren't sure what workers are sharing a SharedObject we need to\n     * emit the event to all workers. (TODO: Possible optimization?)\n     *\n     * @param sharedObject\n     * @param eventName\n     * @param data\n     * @returns\n     */\n    __sharedObjectEmit(sharedObject, eventName, data) {\n        // If we are currently emitting an event from a SharedObject that originated\n        // from another worker then we don't want to emit the event again.\n        if (this.suppressSharedObjectEmit) {\n            return;\n        }\n        const soData = this.sharedObjectData.get(sharedObject);\n        if (!soData) {\n            // Object isn't shared with any workers yet. Not even in process to do so.\n            // Just ignore the emit.\n            return;\n        }\n        if (!soData.shareConfirmed) {\n            // Object is in the process of being shared with other workers. Queue the\n            // emit until the share is confirmed.\n            if (!soData.emitQueue) {\n                soData.emitQueue = [];\n            }\n            soData.emitQueue.push([eventName, data]);\n            return;\n        }\n        const worker = this.workers.get(soData.workerName);\n        assertTruthy(worker, 'Worker not found');\n        worker.postMessage({\n            threadXMessageType: 'sharedObjectEmit',\n            sharedObjectId: sharedObject.id,\n            eventName,\n            data,\n        });\n    }\n}\n//# sourceMappingURL=ThreadX.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nconst TYPEID_INT32_INDEX = 0;\nconst NOTIFY_INT32_INDEX = 1;\nconst LOCK_INT32_INDEX = 2;\nconst DIRTY_INT32_INDEX = 6;\nconst ID_FLOAT64_INDEX = 2;\nconst MAX_STRING_SIZE = 255;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction valueIsType(expectedType, type, value) {\n    return expectedType === type;\n}\nfunction valuesAreEqual(a, b) {\n    return a === b;\n}\nexport function structProp(type, options) {\n    return function (target, key, descriptor) {\n        const constructor = target.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        let byteOffset = constructor.size;\n        let offset = 0;\n        let byteSize = 0;\n        if (type === 'string') {\n            byteOffset += byteOffset % 2;\n            offset = byteOffset / 2;\n            byteSize = (MAX_STRING_SIZE + 1) * 2; // 16-bits for size then 255 16-bit characters\n        }\n        else if (type === 'int32' || type === 'boolean') {\n            byteOffset += byteOffset % 4;\n            offset = byteOffset / 4;\n            byteSize = 4;\n        }\n        else if (type === 'number') {\n            byteOffset += byteOffset % 8;\n            offset = byteOffset / 8;\n            byteSize = 8;\n        }\n        const propDefs = constructor.propDefs;\n        const propNum = propDefs.length;\n        const propDef = {\n            propNum,\n            name: key,\n            type,\n            byteOffset: byteOffset,\n            offset: offset,\n            byteSize: byteSize,\n        };\n        propDefs.push(propDef);\n        // console.log(constructor.size, byteOffset, byteSize, propDef);\n        constructor.size = byteOffset + byteSize;\n        // TODO: Move the descriptors to the prototype to avoid code duplication/closures\n        descriptor.get = function () {\n            let value;\n            if (type === 'string') {\n                const length = this.uint16array[offset];\n                if (!length)\n                    return '';\n                if (length > MAX_STRING_SIZE) {\n                    // This should never happen because we truncate the string when setting it\n                    throw new Error(`get SharedObject.${key}: Text length is too long. Length: ${length}`);\n                }\n                value = String.fromCharCode(...this.uint16array.slice(offset + 1, offset + 1 + length));\n            }\n            else if (type === 'int32') {\n                value = this.int32array[offset];\n            }\n            else if (type === 'boolean') {\n                value = !!this.int32array[offset];\n            }\n            else if (type === 'number') {\n                value = this.float64array[offset];\n            }\n            if (options?.bufferToProp) {\n                value = options.bufferToProp(value);\n            }\n            return value;\n        };\n        descriptor.set = function (value) {\n            if (options?.propToBuffer) {\n                value = options.propToBuffer(value);\n            }\n            if (valueIsType('string', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    // Copy string into shared memory in the most efficient way possible\n                    let length = value.length;\n                    if (length > MAX_STRING_SIZE) {\n                        console.error(`set SharedObject.${key}: Text length is too long. Truncating...`, length);\n                        length = MAX_STRING_SIZE;\n                    }\n                    this.uint16array[offset] = length;\n                    const startOffset = offset + 1;\n                    const endOffset = startOffset + length;\n                    let charIndex = 0;\n                    for (let i = startOffset; i < endOffset; i++) {\n                        this.uint16array[i] = value.charCodeAt(charIndex++);\n                    }\n                }\n            }\n            else if (valueIsType('int32', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value;\n                }\n            }\n            else if (valueIsType('boolean', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value ? 1 : 0;\n                }\n            }\n            else if (valueIsType('number', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.float64array[offset] = value;\n                }\n            }\n        };\n    };\n}\n/**\n * BufferStruct Header Structure:\n * Int32[0]\n *   Type ID: Type of object (32-bit identifier)\n * Int32[1]\n *    Notify / Last Mutator Worker ID\n * Int32[2]\n *    Lock\n * Int32[3]\n *    RESERVED (64-bit align)\n * Int32[4 - 5] / Float64[ID_FLOAT64_INDEX = 2]\n *    Shared Unique ID of the object\n * Int32[DIRTY_INT32_INDEX = 6]\n *    Dirty Bit Mask 1 (Property Indices 0-31)\n * Int32[DIRTY_INT32_INDEX + 1 = 7]\n *    Dirty Bit Mask 2 (Property Indices 32-63)\n *\n * HEADER SIZE MUST BE A MULTIPLE OF 8 BYTES (64-BIT ALIGNMENT)\n */\nclass BufferStruct {\n    buffer;\n    // Lock ID that is a valid 32-bit random integer\n    lockId = Math.floor(Math.random() * 0xffffffff);\n    uint16array;\n    int32array;\n    float64array;\n    static staticInitialized = false;\n    static typeId = 0;\n    static typeIdStr = '';\n    static size = 8 * 4; // Header size\n    static propDefs = [];\n    constructor(buffer) {\n        const constructor = this.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        const isNew = !buffer;\n        if (!buffer) {\n            // Round constructor.size to the nearest multiple of 8 bytes (64-bit alignment)\n            buffer = new SharedArrayBuffer(Math.ceil(constructor.size / 8) * 8);\n        }\n        this.buffer = buffer;\n        this.uint16array = new Uint16Array(buffer);\n        this.int32array = new Int32Array(buffer);\n        this.float64array = new Float64Array(buffer);\n        const typeId = constructor.typeId;\n        // If this is a new buffer, initialize the TypeID and ID\n        if (isNew) {\n            this.int32array[TYPEID_INT32_INDEX] = typeId;\n            this.float64array[ID_FLOAT64_INDEX] = ThreadX.instance.generateUniqueId();\n        }\n        else if (this.int32array[TYPEID_INT32_INDEX] !== typeId) {\n            // If this is an existing buffer, verify the TypeID is the same as expected\n            // by this class\n            throw new Error(`BufferStruct: TypeId mismatch. Expected '${constructor.typeIdStr}', got '${stringifyTypeId(this.int32array[TYPEID_INT32_INDEX])}'`);\n        }\n    }\n    /**\n     * Safely extract the TypeID from any SharedArrayBuffer (as if it is a BufferStruct)\n     *\n     * @remarks\n     * Does not check if the TypeID is valid however it does a basic sanity check to\n     * ensure the buffer is large enough to contain the TypeID at Int32[TYPEID_INT32_INDEX].\n     *\n     * If the buffer is found to be invalid, 0 is returned.\n     *\n     * @param buffer\n     * @returns\n     */\n    static extractTypeId(buffer) {\n        if (buffer.byteLength < BufferStruct.size || buffer.byteLength % 8 !== 0) {\n            return 0;\n        }\n        return new Int32Array(buffer)[TYPEID_INT32_INDEX] || 0;\n    }\n    /**\n     * Checks if typeId is valid and sets up static properties when the first\n     * structProp() decorator is set-up on the class.\n     *\n     * @remarks\n     * WARNING: This should not ever be called directly.\n     *\n     * @internal\n     */\n    static initStatic() {\n        const typeIdStr = stringifyTypeId(this.typeId);\n        if (typeIdStr === '????') {\n            throw new Error('BufferStruct.typeId must be set to a valid 32-bit integer');\n        }\n        this.typeIdStr = typeIdStr;\n        this.propDefs = [...this.propDefs];\n        this.staticInitialized = true;\n    }\n    setDirty(propIndex) {\n        const dirtyWordOffset = Math.floor(propIndex / 32);\n        const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n        this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] =\n            this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] |\n                (1 << dirtyBitOffset);\n    }\n    resetDirty() {\n        // TODO: Do we need to use atomics here?\n        this.int32array[NOTIFY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX + 1] = 0;\n    }\n    isDirty(propIndex) {\n        if (propIndex !== undefined) {\n            const dirtyWordOffset = Math.floor(propIndex / 32);\n            const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n            return !!(this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] &\n                (1 << dirtyBitOffset));\n        }\n        return !!(this.int32array[DIRTY_INT32_INDEX] ||\n            this.int32array[DIRTY_INT32_INDEX + 1]);\n    }\n    get typeId() {\n        // Atomic load not required here because typeId is constant\n        return this.int32array[TYPEID_INT32_INDEX];\n    }\n    get id() {\n        // Atomic load not required here because id is constant\n        return this.float64array[ID_FLOAT64_INDEX];\n    }\n    /**\n     * Returns the current notify value\n     */\n    get notifyValue() {\n        return Atomics.load(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    /**\n     * Returns true if the BufferStruct is currently locked\n     */\n    get isLocked() {\n        return Atomics.load(this.int32array, LOCK_INT32_INDEX) !== 0;\n    }\n    lock(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            try {\n                Atomics.wait(this.int32array, LOCK_INT32_INDEX, origLock);\n            }\n            catch (e) {\n                if (e instanceof TypeError &&\n                    e.message === 'Atomics.wait cannot be called in this context') {\n                    // Atomics.wait() not supported in this context (main worker), so just spin\n                    // TODO: Maybe we detect this earlier and avoid this exception? This works for now.\n                }\n                else {\n                    throw e;\n                }\n            }\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    async lockAsync(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            const result = Atomics.waitAsync(this.int32array, LOCK_INT32_INDEX, origLock);\n            await result.value;\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = await callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    notify(value) {\n        if (value !== undefined) {\n            Atomics.store(this.int32array, NOTIFY_INT32_INDEX, value);\n        }\n        return Atomics.notify(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    wait(expectedValue, timeout = Infinity) {\n        const result = Atomics.wait(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result;\n    }\n    async waitAsync(expectedValue, timeout = Infinity) {\n        const result = Atomics.waitAsync(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result.value;\n    }\n}\nexport { BufferStruct };\n//# sourceMappingURL=BufferStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BufferStruct, structProp, genTypeId } from '@lightningjs/threadx';\nexport class NodeStruct extends BufferStruct {\n    static typeId = genTypeId('NODE');\n    get x() {\n        return 0;\n    }\n    set x(value) {\n        // Decorator will handle this\n    }\n    get y() {\n        return 0;\n    }\n    set y(value) {\n        // Decorator will handle this\n    }\n    get width() {\n        return 0;\n    }\n    set width(value) {\n        // Decorator will handle this\n    }\n    get height() {\n        return 0;\n    }\n    set height(value) {\n        // Decorator will handle this\n    }\n    get alpha() {\n        return 1;\n    }\n    set alpha(value) {\n        // Decorator will handle this\n    }\n    get clipping() {\n        return false;\n    }\n    set clipping(value) {\n        // Decorator will handle this\n    }\n    get color() {\n        return 0;\n    }\n    set color(value) {\n        // Decorator will handle this\n    }\n    get colorTop() {\n        return 0;\n    }\n    set colorTop(value) {\n        // Decorator will handle this\n    }\n    get colorBottom() {\n        return 0;\n    }\n    set colorBottom(value) {\n        // Decorator will handle this\n    }\n    get colorLeft() {\n        return 0;\n    }\n    set colorLeft(value) {\n        // Decorator will handle this\n    }\n    get colorRight() {\n        return 0;\n    }\n    set colorRight(value) {\n        // Decorator will handle this\n    }\n    get colorTl() {\n        return 0;\n    }\n    set colorTl(value) {\n        // Decorator will handle this\n    }\n    get colorTr() {\n        return 0;\n    }\n    set colorTr(value) {\n        // Decorator will handle this\n    }\n    get colorBl() {\n        return 0;\n    }\n    set colorBl(value) {\n        // Decorator will handle this\n    }\n    get colorBr() {\n        return 0;\n    }\n    set colorBr(value) {\n        // Decorator will handle this\n    }\n    get scaleX() {\n        return 1;\n    }\n    set scaleX(value) {\n        // Decorator will handle this\n    }\n    get scaleY() {\n        return 1;\n    }\n    set scaleY(value) {\n        // Decorator will handle this\n    }\n    get mount() {\n        return 0;\n    }\n    set mount(value) {\n        // Decorator will handle this\n    }\n    get mountX() {\n        return 0;\n    }\n    set mountX(value) {\n        // Decorator will handle this\n    }\n    get mountY() {\n        return 0;\n    }\n    set mountY(value) {\n        // Decorator will handle this\n    }\n    get pivot() {\n        return 0.5;\n    }\n    set pivot(value) {\n        // Decorator will handle this\n    }\n    get pivotX() {\n        return 0.5;\n    }\n    set pivotX(value) {\n        // Decorator will handle this\n    }\n    get pivotY() {\n        return 0.5;\n    }\n    set pivotY(value) {\n        // Decorator will handle this\n    }\n    get rotation() {\n        return 0;\n    }\n    set rotation(value) {\n        // Decorator will handle this\n    }\n    get parentId() {\n        return 0;\n    }\n    set parentId(value) {\n        // Decorator will handle this\n    }\n    get zIndex() {\n        return 0;\n    }\n    set zIndex(value) {\n        // Decorator will handle this\n    }\n    get zIndexLocked() {\n        return 0;\n    }\n    set zIndexLocked(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"x\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"y\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"width\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"height\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"alpha\", null);\n__decorate([\n    structProp('boolean')\n], NodeStruct.prototype, \"clipping\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"color\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTop\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBottom\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorLeft\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorRight\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"scaleX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"scaleY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mount\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivot\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"rotation\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"parentId\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndex\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndexLocked\", null);\n//# sourceMappingURL=NodeStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SharedObject } from '@lightningjs/threadx';\nexport class SharedNode extends SharedObject {\n    /**\n     * Must have lock on sharedNode before calling constructor!\n     *\n     * @param sharedNodeStruct\n     */\n    constructor(sharedNodeStruct, extendedCurProps) {\n        super(sharedNodeStruct, {\n            ...extendedCurProps,\n            x: sharedNodeStruct.x,\n            y: sharedNodeStruct.y,\n            width: sharedNodeStruct.width,\n            height: sharedNodeStruct.height,\n            alpha: sharedNodeStruct.alpha,\n            clipping: sharedNodeStruct.clipping,\n            color: sharedNodeStruct.color,\n            colorTop: sharedNodeStruct.colorTop,\n            colorBottom: sharedNodeStruct.colorBottom,\n            colorLeft: sharedNodeStruct.colorLeft,\n            colorRight: sharedNodeStruct.colorRight,\n            colorTl: sharedNodeStruct.colorTl,\n            colorTr: sharedNodeStruct.colorTr,\n            colorBl: sharedNodeStruct.colorBl,\n            colorBr: sharedNodeStruct.colorBr,\n            parentId: sharedNodeStruct.parentId,\n            zIndex: sharedNodeStruct.zIndex,\n            zIndexLocked: sharedNodeStruct.zIndexLocked,\n            scaleX: sharedNodeStruct.scaleX,\n            scaleY: sharedNodeStruct.scaleY,\n            mount: sharedNodeStruct.mount,\n            mountX: sharedNodeStruct.mountX,\n            mountY: sharedNodeStruct.mountY,\n            pivot: sharedNodeStruct.pivot,\n            pivotX: sharedNodeStruct.pivotX,\n            pivotY: sharedNodeStruct.pivotY,\n            rotation: sharedNodeStruct.rotation,\n        });\n    }\n}\n//# sourceMappingURL=SharedNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { structProp, genTypeId } from '@lightningjs/threadx';\nimport { NodeStruct } from './NodeStruct.js';\nexport class TextNodeStruct extends NodeStruct {\n    static typeId = genTypeId('TEXT');\n    get text() {\n        return '';\n    }\n    set text(value) {\n        // Decorator will handle this\n    }\n    get textRendererOverride() {\n        return null;\n    }\n    set textRendererOverride(value) {\n        // Decorator will handle this\n    }\n    get fontSize() {\n        return 0;\n    }\n    set fontSize(value) {\n        // Decorator will handle this\n    }\n    get fontFamily() {\n        return '';\n    }\n    set fontFamily(value) {\n        // Decorator will handle this\n    }\n    get fontStretch() {\n        return 'normal';\n    }\n    set fontStretch(value) {\n        // Decorator will handle this\n    }\n    get fontStyle() {\n        return 'normal';\n    }\n    set fontStyle(value) {\n        // Decorator will handle this\n    }\n    get fontWeight() {\n        return 'normal';\n    }\n    set fontWeight(value) {\n        // Decorator will handle this\n    }\n    get textAlign() {\n        return 'left';\n    }\n    set textAlign(value) {\n        // Decorator will handle this\n    }\n    get contain() {\n        return 'none';\n    }\n    set contain(value) {\n        // Decorator will handle this\n    }\n    get scrollable() {\n        return false;\n    }\n    set scrollable(value) {\n        // Decorator will handle this\n    }\n    get scrollY() {\n        return 0;\n    }\n    set scrollY(value) {\n        // Decorator will handle this\n    }\n    get offsetY() {\n        return 0;\n    }\n    set offsetY(value) {\n        // Decorator will handle this\n    }\n    get letterSpacing() {\n        return 0;\n    }\n    set letterSpacing(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"text\", null);\n__decorate([\n    structProp('string', {\n        propToBuffer(value) {\n            // Property accepts `null` but the buffer only accepts a string.\n            // Encode `null` as a special string\n            return value ?? '$$null';\n        },\n        bufferToProp(value) {\n            return value === '$$null' ? null : value;\n        },\n    })\n], TextNodeStruct.prototype, \"textRendererOverride\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"fontSize\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontFamily\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStretch\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStyle\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontWeight\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"textAlign\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"contain\", null);\n__decorate([\n    structProp('boolean')\n], TextNodeStruct.prototype, \"scrollable\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"scrollY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"offsetY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"letterSpacing\", null);\n//# sourceMappingURL=TextNodeStruct.js.map"],"names":["async","coreExtensionModule","stage","module","console","log","__vitePreload","e","error","default","ExtensionClass","prototype","CoreExtension","coreExtension","run","exports","EventEmitter","node","props","settings","propStartValues","restoreValues","progress","timingFunction","constructor","super","this","Object","keys","forEach","propName","t","easing","getTimingFunction","reset","update","restore","reverse","startValue","endValue","loop","stopMethod","applyEasing","p","s","dt","duration","emit","propValue","indexOf","progressValue","colorValue","mergeColorProgress","manager","animation","stoppedPromise","stoppedResolve","state","start","makeStoppedPromise","once","finished","bind","activeAnimations","has","registerAnimation","stop","unregisterAnimation","pause","waitUntilStopped","promise","assertTruthy","Promise","resolve","Matrix3d","data","entries","Float32Array","temp","tempMatrix","multiply","a","b","out","e0","e1","e2","e3","e4","e5","e6","e7","e8","identity","translate","x","y","scale","sx","sy","rotate","angle","cos","Math","sin","copy","src","dst","transpose","PI","other","tx","ty","ta","tb","tc","td","transformPoint","CoreNode","children","recalculationType","hasUpdates","globalTransform","scaleRotateTransform","localTransform","isComplex","parent","updateScaleRotateTransform","loadTexture","textureType","options","texture","unloadTexture","txManager","textureOptions","queueMicrotask","onTextureLoaded","dimensions","onTextureFailed","on","off","target","type","loadShader","shaderType","shManager","renderer","getShaderManager","shader","shaderProps","setHasUpdates","alpha","setRecalculationType","rotation","scaleX","scaleY","updateLocalTransform","pivotTranslateX","pivotX","width","pivotTranslateY","pivotY","height","mountTranslateX","mountX","mountTranslateY","mountY","delta","parentGlobalTransform","length","child","renderQuads","clippingRect","colorTl","colorTr","colorBl","colorBr","zIndex","worldAlpha","gt","addRenderable","id","value","absX","absY","worldScaleX","worldScaleY","mount","pivot","clipping","color","colorTop","colorBottom","colorLeft","colorRight","zIndexLocked","z","newParent","oldParent","index","splice","push","Scene","root","getNodeByType","getNodeById","DefaultShader","WebGlCoreShader","attributes","uniforms","name","uniform","bindTextures","textures","gl","activeTexture","TEXTURE0","bindTexture","TEXTURE_2D","ctxTexture","static","vertex","fragment","DefaultShaderBatched","supportsIndexedTextures","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","Error","i","samplers","Array","from","setUniform","textureUnits","map","idx","join","ShaderEffect","priority","ref","passParameters","declaredUniforms","uniformInfo","getEffectKey","getMethodParameters","res","u","uni","define","size","unif","uniType","uniformName","method","resolveDefaults","makeEffectKey","RadiusEffect","radius","validator","r","isArray","fillMask","boxDist","BorderEffect","rgba","getNormalizedRgbaComponents","LinearGradientEffect","colors","stops","calc","rgbas","reduce","acc","val","concat","tmp","undefined","fromLinear","toLinear","calcPoint","amount","GrayscaleEffect","BorderRightEffect","rectDist","BorderTopEffect","BorderBottomEffect","BorderLeftEffect","GlitchEffect","amplitude","narrowness","blockiness","minimizer","time","Date","now","rand","noise","fbm","FadeOutEffect","fade","RadialGradientEffect","Effects","border","borderBottom","borderLeft","borderRight","borderTop","fadeOut","linearGradient","radialGradient","grayscale","glitch","DynamicShader","effects","effectContructors","createShader","shaderSources","bindProps","eff","effect","fxClass","uniInfo","fxProp","propInfo","effectNameCount","methods","declareUniforms","uFx","baseClass","key","nr","values","effectMethods","fx","fxProps","remap","m","cm","fxMethod","resolveMethodDuplicate","replace","onShaderMask","Function","onColorize","onEffectMask","reg","RegExp","methodParameters","pm","sharedMethods","currentMask","drawEffects","current","currentClass","next","effectMethod","methodCollection","increment","$dimensions","$alpha","makeCacheKey","RoundedRectangle","canBatchShaderProps","propsA","propsB","IDENTITY_MATRIX_3x3","SdfShader","resolvedProps","components","transform","scrollY","distanceRange","debug","CoreShaderManager","shCache","Map","shConstructors","attachedShader","effectConstructors","registerShaderType","registerEffectType","shType","shClass","effectType","effectClass","ShaderClass","loadDynamicShader","cacheKey","get","set","useShader","detach","attach","AnimationManager","Set","add","delete","ImageTexture","Texture","getTextureData","premultiplyAlpha","ImageData","response","fetch","blob","createImageBitmap","colorSpaceConversion","imageOrientation","NoiseTexture","pixelData8","Uint8ClampedArray","v","floor","random","cacheId","CoreTextureManager","usedMemory","txConstructors","textureKeyCache","textureIdCache","ctxTextureCache","WeakMap","textureRefCountMap","registerTextureType","ColorTexture","SubTexture","textureClass","TextureClass","descId","addTextureIdToCache","preload","getCtxTexture","load","textureDescId","count","removeTextureIdFromCache","refCountObj","getDebugInfo","keyCacheSize","idCacheSize","textureSource","createCtxTexture","TrFontManager","textRenderers","addFontFace","font","trId","tr","isFontFaceSupported","resolveFontFace","familyMapsByPriority","prev","fontFamiles","fontFaces","fontFamily","fontFacesCopy","fontFace","descriptors","stretch","fontStretch","style","fontStyle","weight","fontWeight","trPropSetterDefaults","fontSize","text","textAlign","contain","offsetY","scrollable","letterSpacing","TextRenderer","freeze","getPropertySetters","setStatus","status","emitter","PeekableIterator","iterator","peekBuffer","_lastIndex","indexBase","nextResult","pop","done","peek","result","lastIndex","getUnicodeCodepoints","codePoint","codePointAt","layoutText","curLineIndex","startX","startY","vertexBuffer","lineCache","renderWindow","trFontFace","forceFullLayoutCalc","loaded","shaper","vertexLineHeight","info","fontSizeRatio","vertexW","vertexLSpacing","startingLineCacheEntry","startingCodepointIndex","codepointIndex","maxX","maxY","curX","curY","bufferOffset","lastWord","xStart","shaperProps","glyphResult","glyphs","shapeText","curLineBufferStart","bufferLineInfos","vertexTruncateHeight","truncateSeqVertexWidth","glyph","mapped","xAdvance","measureText","moreLines","nextLineWillFit","lineVertexW","xStartLastWordBoundary","cluster","codepoint","charEndX","xOffset","quadX","quadY","yOffset","lineIsBelowWindowTop","y1","lineIsAboveWindowBottom","y2","atlasEntry","getAtlasEntry","glyphId","common","scaleW","scaleH","uvWidth","uvHeight","max","bufferStart","bufferEnd","vertexTextW","line","j","bufferNumFloats","bufferNumQuads","layoutNumCharacters","fullyProcessed","SdfTextRenderer","ssdfFontFamilies","msdfFontFamilies","sdfShader","invalidateCache","canRenderFont","SdfTrFontFace","familyName","warn","faceSet","createState","webGlBuffers","bufferUploaded","textH","textW","debugData","updateCount","layoutCount","lastLayoutNumCharacters","layoutSum","drawSum","drawCount","bufferSize","updateState","performance","msg","loadedHandler","sdfLineHeight","distanceField","neededLength","rendererBounds","x1","x2","appWidth","appHeight","visibleWindow","intersectBound","Infinity","visibleWindowHeight","lineHeight","numExtraLines","bufferMargin","isBoundPositive","makeRenderWindow","ceil","startLineIndex","min","lineIndex","getStartConditions","out2","byteLength","stride","BYTES_PER_ELEMENT","webGlBuffer","createBuffer","BufferCollection","buffer","a_position","FLOAT","normalized","offset","a_textureCoordinate","getBuffer","bindBuffer","ARRAY_BUFFER","bufferData","STATIC_DRAW","renderOp","WebGlCoreRenderOp","mergeColorAlpha","sdfShaderDebug","addTexture","numQuads","LightningTextTextureRenderer","_canvas","_context","_settings","renderInfo","canvas","context","mergeDefaults","getPrecision","precision","setFontProperties","_getFontSetting","textBaseline","ff","ffs","n","_load","document","fonts","fontSetting","check","catch","err","then","calculateRenderInfo","paddingLeft","paddingRight","w","h","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","textIndent","linesInfo","innerWidth","textOverflow","wordWrap","suffix","maxLinesSuffix","wrapWord","wrapText","l","split","lines","maxLines","usedLines","slice","otherLines","al","remainingText","moreTextLines","maxLineWidth","lineWidths","lineWidth","baselineOffset","draw","linesOverride","linePositionX","linePositionY","textRenderIssueMargin","globalAlpha","fillRect","drawLines","verticalAlign","highlight","highlightColor","hlHeight","highlightHeight","highlightOffset","hlPaddingLeft","highlightPaddingLeft","hlPaddingRight","highlightPaddingRight","fillStyle","getRgbaString","drawLine","prevShadowSettings","shadow","shadowColor","shadowOffsetX","shadowOffsetY","shadowBlur","textColor","fillText","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","substring","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","space","char","wordBreak","advancedRenderer","fontBaselineRatio","resolvedGlobal","self","globalThis","globalFontSet","CanvasTextRenderer","OffscreenCanvas","createElement","getContext","fontInfo","markForReload","WebTrFontFace","canvasPages","lightning2TextRenderer","fontFaceLoadedHandler","cssString","getFontCssString","onFontLoaded","onFontLoadError","renderInfoCalculateTime","maxLinesPerCanvasPage","renderWindowScreenX1","renderWindowScreenY1","renderWindowScreenX2","renderWindowScreenY2","shift","lineNumStart","lineNumEnd","valid","unshift","pageHeight","page1LineStart","page0LineStart","page2LineStart","scrollYNearestPage","pageDrawTime","pageInfo","getImageData","elementRect","intersectRect","pageSize","combinedAlpha","getNormalizedAlphaComponent","animationManager","fontManager","scene","deltaTime","lastFrameTime","currentFrameTime","clearColor","rootId","monitorTextureCache","setInterval","debugInfo","WebGlCoreRenderer","pixelRatio","devicePhysicalPixelRatio","deviceLogicalPixelRatio","bufferMemory","sdf","rootNode","drawFrame","requestAnimationFrame","startLoop","addQuads","sortRenderables","render","parentClippingRect","isRotated","resolveTextRenderer","trProps","textRendererOverride","rendererId","overrideFallback","possibleRenderer","String","resolvedTextRenderer","textRenderer","trState","updateScheduled","_textRendererOverride","textRendererState","resolveTextRendererAndState","onTextLoaded","setWidth","setHeight","calcWidth","calcHeight","onTextFailed","updateText","prevState","eventName","condition","message","SharedObject","threadx","sharedObjectStruct","mutations","waitPromise","mutationsQueued","_id","_typeId","initialized","destroying","curProps","extractBuffer","sharedObject","ThreadX","instance","typeId","hasOwnProperty","call","staticInitialized","getPrototypeOf","defineProperty","queueMutations","_executeMutations","processDirtyProperties","propDefs","propDef","isDirty","oldValue","onPropertyChange","resetDirty","newValue","mutationMicrotask","lockAsync","finishDestroy","flush","lock","onDestroy","destroy","struct","localOnly","forgetObjects","silent","notify","eventListeners","isDestroyed","notifyValue","workerId","expectedNotifyValue","waitAsync","event","listener","listeners","onceListener","__sharedObjectEmit","isValidTypeIdCharCode","charCode","genTypeId","tidString","charCodeAt","stringifyTypeId","chars","fromCharCode","isMessage","messageType","threadXMessageType","init","THREADX","threadX","workerName","sharedObjectFactory","onSharedObjectCreated","onBeforeObjectForgotten","onUserMessage","sharedObjects","sharedObjectData","workers","workerReadyPromises","pendingAsyncMsgs","nextAsyncMsgId","nextUniqueId","suppressSharedObjectEmit","onObjectShared","onMessage","mySelf","DedicatedWorkerGlobalScope","registerWorker","sendMessage","worker","readyResolve","readyPromise","listenForWorkerMessages","closeWorker","closeWorkerAsync","timeout","race","setTimeout","sendMessageAsync","terminate","addEventListener","asyncMsgId","__asyncMsgId","postMessage","shareObjects","shareConfirmed","emitQueue","buffers","so","soData","objectsByWorker","objectsInWorker","promises","objectIds","all","transfer","skipResponseWait","reject","srcWorkerName","sharedObjectId","close","getSharedObjectById","generateUniqueId","MAX_STRING_SIZE","valueIsType","expectedType","valuesAreEqual","structProp","descriptor","initStatic","byteOffset","byteSize","propNum","uint16array","int32array","float64array","bufferToProp","propToBuffer","setDirty","startOffset","endOffset","charIndex","BufferStruct","lockId","isNew","SharedArrayBuffer","Uint16Array","Int32Array","Float64Array","typeIdStr","extractTypeId","propIndex","dirtyWordOffset","dirtyBitOffset","DIRTY_INT32_INDEX","Atomics","isLocked","callback","origLock","compareExchange","wait","TypeError","store","expectedValue","__decorate","decorators","desc","d","c","arguments","getOwnPropertyDescriptor","Reflect","decorate","NodeStruct","parentId","sharedNodeStruct","extendedCurProps","TextNodeStruct"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50]}