{"version":3,"mappings":"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","names":["CoreAnimation","EventEmitter","node","props","settings","__publicField","propName","t","getTimingFunction","startValue","endValue","p","s","e","dt","duration","loop","easing","propValue","progressValue","colorValue","mergeColorProgress","CoreAnimationController","manager","animation","promise","assertTruthy","resolve","stopMethod","Matrix2DContext","CoreNode","stage","target","dimensions","error","_a","_b","_c","_d","_e","_f","textureType","options","txManager","texture","shaderType","shManager","shader","type","sineRotation","cosineRotation","a","b","c","d","pivotXMultiplier","pivotYMultiplier","px","py","delta","parentWorldContext","worldContext","child","renderer","clippingRect","width","height","colorTl","colorTr","colorBl","colorBr","textureOptions","shaderProps","scale","zIndex","alpha","worldScale","value","parent","z","newParent","oldParent","index","Scene","root","id","startLoop","getTimeStamp","DefaultShader","WebGlCoreShader","textures","gl","DefaultShaderBatched","i","samplers","textureUnits","idx","ShaderEffect","ref","uniformInfo","passParameters","declaredUniforms","uniforms","u","unif","uniType","uniformName","define","res","uni","RadiusEffect","r","BorderEffect","rgba","getNormalizedRgbaComponents","LinearGradientEffect","colors","stops","calc","rgbas","acc","val","tmp","amount","GrayscaleEffect","BorderRightEffect","BorderTopEffect","BorderBottomEffect","BorderLeftEffect","GlitchEffect","FadeOutEffect","RadialGradientEffect","Effects","_DynamicShader","effectContructors","eff","effect","fxClass","uniInfo","fxProp","propInfo","effectNameCount","methods","declareUniforms","uFx","effects","baseClass","key","nr","effectMethods","fx","fxProps","remap","m","cm","fxMethod","onShaderMask","onColorize","onEffectMask","reg","methodParameters","pm","sharedMethods","currentMask","drawEffects","current","currentClass","next","effectMethod","methodCollection","increment","DynamicShader","RoundedRectangle","propsA","propsB","_SdfShader","resolvedProps","components","SdfShader","CoreShaderManager","shType","shClass","effectType","effectClass","ShaderClass","cacheKey","AnimationManager","_ImageTexture","Texture","src","premultiplyAlpha","blob","ImageTexture","_NoiseTexture","size","pixelData8","v","NoiseTexture","CoreTextureManager","ColorTexture","SubTexture","textureClass","TextureClass","descId","textureDescId","textureIdCache","textureRefCountMap","refCountObj","textureSource","TrFontManager","textRenderers","font","trId","tr","familyMapsByPriority","closeFaces","prev","fontFamiles","fontFaces","fontFacesCopy","fontFace","trPropSetterDefaults","state","TextRenderer","status","FLOATS_PER_GLYPH","getStartConditions","fontSize","offsetY","fontSizeRatio","sdfLineHeight","renderWindow","lineCache","textH","startLineIndex","startX","startY","PeekableIterator","iterator","indexBase","nextResult","result","getUnicodeCodepoints","text","start","codePoint","measureText","shaperProps","shaper","glyphs","glyph","layoutText","curLineIndex","textAlign","letterSpacing","vertexBuffer","contain","trFontFace","forceFullLayoutCalc","scrollable","vertexLineHeight","vertexW","vertexLSpacing","startingLineCacheEntry","startingCodepointIndex","startingMaxX","startingMaxY","maxX","maxY","curX","curY","bufferOffset","lastWord","glyphResult","curLineBufferStart","bufferLineInfos","truncateSeq","vertexTruncateHeight","truncateSeqVertexWidth","moreLines","nextLineWillFit","lineVertexW","xStartLastWordBoundary","charEndX","quadX","quadY","lineIsBelowWindowTop","lineIsAboveWindowBottom","atlasEntry","uvWidth","uvHeight","vertexTextW","line","lineWidth","xOffset","j","makeRenderWindow","x","y","scrollY","lineHeight","numExtraLines","visibleWindow","bufferMargin","x1","y1","isBoundPositive","SdfTextRenderer","fontFamily","SdfTrFontFace","familyName","faceSet","debugData","msg","loadedHandler","neededLength","rendererBounds","elementBounds","intersectBound","visibleWindowHeight","maxLinesPerCanvasPage","out2","color","debug","textW","distanceRange","bufferNumFloats","bufferUploaded","webGlBuffers","stride","webGlBuffer","BufferCollection","buffer","renderOp","WebGlCoreRenderOp","mergeColorAlpha","ctxTexture","MAX_TEXTURE_DIMENSION","LightningTextTextureRenderer","canvas","context","ff","ffs","n","fontSetting","err","renderInfo","precision","paddingLeft","paddingRight","w","wordWrapWidth","cutSx","cutEx","cutSy","cutEy","textIndent","innerWidth","suffix","linesInfo","lines","usedLines","otherLines","al","maxLineWidth","lineWidths","baselineOffset","linesOverride","linePositionX","linePositionY","drawLines","hlHeight","offset","hlPaddingLeft","hlPaddingRight","getRgbaString","drawLine","prevShadowSettings","textSplit","word","suffixWidth","wordLen","wordWidth","cutoffIndex","truncWordWidth","indent","allLines","realNewlines","resultLines","spaceLeft","words","wordWidthWithSpace","space","char","resolvedGlobal","globalFontSet","getFontCssString","fontStyle","fontWeight","fontStretch","CanvasTextRenderer","WebTrFontFace","cssString","renderInfoCalculateTime","canvasPages","renderWindowScreenX1","renderWindowScreenY1","renderWindowScreenX2","renderWindowScreenY2","pageHeight","page1LineStart","page0LineStart","page2LineStart","scrollYNearestPage","pageDrawTime","pageInfo","elementRect","intersectRect","pageSize","_h","_g","_j","_i","_l","_k","bufferMemory","Stage","clearColor","rootId","appWidth","appHeight","debugInfo","WebGlCoreRenderer","rootNode","scene","animationManager","parentClippingRect","trProps","textRendererOverride","rendererId","overrideFallback","possibleRenderer","resolvedTextRenderer","CoreTextNode","textRendererState","prevState","eventName","classExtendsCoreExtension","Class","CoreExtension","loadCoreExtension","coreExtensionModule","module","__vitePreload","ExtensionClass","coreExtension","condition","message","SharedObject","sharedObjectStruct","curProps","ThreadX","constructor","prototype","sharedObject","mutations","propDef","oldValue","newValue","struct","expectedNotifyValue","waitPromise","event","listener","listeners","onceListener","data","isValidTypeIdCharCode","charCode","genTypeId","tidString","typeId","stringifyTypeId","chars","isMessage","messageType","isWebWorker","selfObj","mySelf","threadX","workerName","worker","readyResolve","readyPromise","timeout","asyncMsgId","response","sharedObjects","so","soData","emitQueue","objectsByWorker","objectsInWorker","promises","transfer","reject","srcWorkerName","TYPEID_INT32_INDEX","NOTIFY_INT32_INDEX","LOCK_INT32_INDEX","DIRTY_INT32_INDEX","ID_FLOAT64_INDEX","MAX_STRING_SIZE","valueIsType","expectedType","valuesAreEqual","structProp","descriptor","byteOffset","byteSize","propDefs","propNum","length","startOffset","endOffset","charIndex","_BufferStruct","isNew","typeIdStr","propIndex","dirtyWordOffset","dirtyBitOffset","callback","origLock","expectedValue","BufferStruct","__decorate","this","decorators","desc","NodeStruct","SharedNode","sharedNodeStruct","extendedCurProps","TextNodeStruct"],"sources":["../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimation.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/animations/CoreAnimationController.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/Matrix2DContext.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/CoreNode.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/scene/Scene.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/platform.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DefaultShaderBatched.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/ShaderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadiusEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/LinearGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GrayscaleEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderRightEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderTopEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderBottomEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/BorderLeftEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/GlitchEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/FadeOutEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/effects/RadialGradientEffect.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/DynamicShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/RoundedRectangle.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/shaders/SdfShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/CoreShaderManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/animations/AnimationManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/textures/ImageTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/textures/NoiseTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/CoreTextureManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/TrFontManager.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/TextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/constants.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getStartConditions.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/PeekableGenerator.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/getUnicodeCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/measureText.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/layoutText.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/makeRenderWindow.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/LightningTextTextureRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/CanvasTextRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/Stage.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/CoreTextNode.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/utils.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.3/node_modules/@lightningjs/threadx/dist/utils.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.3/node_modules/@lightningjs/threadx/dist/SharedObject.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.3/node_modules/@lightningjs/threadx/dist/buffer-struct-utils.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.3/node_modules/@lightningjs/threadx/dist/ThreadX.js","../../node_modules/.pnpm/@lightningjs+threadx@0.3.3/node_modules/@lightningjs/threadx/dist/BufferStruct.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/NodeStruct.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/SharedNode.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/render-drivers/threadx/TextNodeStruct.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getTimingFunction } from '../utils.js';\nimport { mergeColorProgress } from '../../utils.js';\nimport { EventEmitter } from '../../common/EventEmitter.js';\nexport class CoreAnimation extends EventEmitter {\n    node;\n    props;\n    settings;\n    propStartValues = {};\n    restoreValues = {};\n    progress = 0;\n    timingFunction;\n    constructor(node, props, settings) {\n        super();\n        this.node = node;\n        this.props = props;\n        this.settings = settings;\n        this.propStartValues = {};\n        Object.keys(props).forEach((propName) => {\n            this.propStartValues[propName] = node[propName];\n        });\n        this.timingFunction = (t) => t;\n        if (settings.easing && typeof settings.easing === 'string') {\n            this.timingFunction = getTimingFunction(settings.easing);\n        }\n    }\n    reset() {\n        this.progress = 0;\n        this.update(0);\n    }\n    restore() {\n        this.reset();\n        Object.keys(this.props).forEach((propName) => {\n            this.node[propName] = this.propStartValues[propName];\n        });\n    }\n    reverse() {\n        this.progress = 0;\n        Object.keys(this.props).forEach((propName) => {\n            // set the start value to the current value\n            const startValue = this.props[propName];\n            const endValue = this.propStartValues[propName];\n            // swap the start and end values\n            this.props[propName] = endValue;\n            this.propStartValues[propName] = startValue;\n        });\n        // restore stop method if we are not looping\n        if (!this.settings.loop) {\n            this.settings.stopMethod = false;\n        }\n    }\n    applyEasing(p, s, e) {\n        return (this.timingFunction(p) || p) * (e - s) + s;\n    }\n    update(dt) {\n        const { duration, loop, easing } = this.settings;\n        if (!duration) {\n            this.emit('finished', {});\n            return;\n        }\n        this.progress += dt / duration;\n        if (this.progress > 1) {\n            this.progress = loop ? 0 : 1;\n            this.emit('finished', {});\n        }\n        Object.keys(this.props).forEach((propName) => {\n            const propValue = this.props[propName];\n            const startValue = this.propStartValues[propName];\n            const endValue = propValue;\n            if (propName.indexOf('color') !== -1) {\n                const progressValue = easing\n                    ? this.timingFunction(this.progress) || this.progress\n                    : this.progress;\n                const colorValue = mergeColorProgress(startValue, endValue, progressValue);\n                this.node[propName] = easing\n                    ? colorValue\n                    : mergeColorProgress(startValue, endValue, this.progress);\n            }\n            else {\n                this.node[propName] = easing\n                    ? this.applyEasing(this.progress, startValue, endValue)\n                    : startValue + (endValue - startValue) * this.progress;\n            }\n        });\n    }\n}\n//# sourceMappingURL=CoreAnimation.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../utils.js';\nexport class CoreAnimationController {\n    manager;\n    animation;\n    stoppedPromise = null;\n    /**\n     * If this is null, then the animation is in a finished / stopped state.\n     */\n    stoppedResolve = null;\n    constructor(manager, animation) {\n        this.manager = manager;\n        this.animation = animation;\n        this.state = 'stopped';\n    }\n    state;\n    start() {\n        this.makeStoppedPromise();\n        this.animation.once('finished', this.finished.bind(this));\n        // prevent registering the same animation twice\n        if (!this.manager.activeAnimations.has(this.animation)) {\n            this.manager.registerAnimation(this.animation);\n        }\n        this.state = 'running';\n        return this;\n    }\n    stop() {\n        this.manager.unregisterAnimation(this.animation);\n        if (this.stoppedResolve !== null) {\n            this.stoppedResolve();\n            this.stoppedResolve = null;\n        }\n        this.animation.reset();\n        this.state = 'stopped';\n        return this;\n    }\n    pause() {\n        this.manager.unregisterAnimation(this.animation);\n        this.state = 'paused';\n        return this;\n    }\n    restore() {\n        this.stoppedResolve = null;\n        this.animation.restore();\n        return this;\n    }\n    waitUntilStopped() {\n        this.makeStoppedPromise();\n        const promise = this.stoppedPromise;\n        assertTruthy(promise);\n        return promise;\n    }\n    makeStoppedPromise() {\n        if (this.stoppedResolve === null) {\n            this.stoppedPromise = new Promise((resolve) => {\n                this.stoppedResolve = resolve;\n            });\n        }\n    }\n    finished() {\n        assertTruthy(this.stoppedResolve);\n        // If the animation is looping, then we need to restart it.\n        const { loop, stopMethod } = this.animation.settings;\n        if (stopMethod === 'reverse') {\n            this.animation.reverse();\n            this.start();\n            return;\n        }\n        // resolve promise\n        this.stoppedResolve();\n        this.stoppedResolve = null;\n        if (loop) {\n            return;\n        }\n        // unregister animation\n        this.manager.unregisterAnimation(this.animation);\n    }\n}\n//# sourceMappingURL=CoreAnimationController.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n *  Represents a 2D transformation context, providing a 2x2 matrix for transformations.\n */\nexport class Matrix2DContext {\n    // world alpha\n    alpha = 1;\n    // world position\n    px = 0;\n    py = 0;\n    ta = 1;\n    tb = 0;\n    tc = 0;\n    td = 1;\n    isIdentity() {\n        return (this.alpha === 1 &&\n            this.px === 0 &&\n            this.py === 0 &&\n            this.isIdentityMatrix());\n    }\n    isIdentityMatrix() {\n        return this.ta === 1 && this.tb === 0 && this.tc === 0 && this.td === 1;\n    }\n    isSquare() {\n        return this.tb === 0 && this.tc === 0;\n    }\n}\n//# sourceMappingURL=Matrix2DContext.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { Matrix2DContext } from './Matrix2DContext.js';\nimport { EventEmitter } from '../common/EventEmitter.js';\nexport class CoreNode extends EventEmitter {\n    stage;\n    children = [];\n    props;\n    /**\n     * Recalculation type\n     * 0 - no recalculation\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     */\n    recalculationType = 6;\n    hasUpdates = true;\n    worldContext = new Matrix2DContext();\n    // local translation / transform updates\n    // derived from x, y, w, h, scale, pivot, rotation\n    localPx = 0;\n    localPy = 0;\n    isComplex = false;\n    constructor(stage, props) {\n        super();\n        this.stage = stage;\n        this.props = {\n            ...props,\n            parent: null,\n            ta: props.ta ?? 1,\n            tb: props.tb ?? 0,\n            tc: props.tc ?? 0,\n            td: props.td ?? 1,\n            worldX: props.worldX ?? 0,\n            worldY: props.worldY ?? 0,\n        };\n        // Allow for parent to be processed appropriately\n        this.parent = props.parent;\n        this.updateLocalTransform();\n    }\n    //#region Textures\n    loadTexture(textureType, props, options = null) {\n        // First unload any existing texture\n        if (this.props.texture) {\n            this.unloadTexture();\n        }\n        const { txManager } = this.stage;\n        const texture = txManager.loadTexture(textureType, props, options);\n        this.props.texture = texture;\n        this.props.textureOptions = options;\n        // If texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            if (texture.state === 'loaded') {\n                this.onTextureLoaded(texture, texture.dimensions);\n            }\n            else if (texture.state === 'failed') {\n                this.onTextureFailed(texture, texture.error);\n            }\n            texture.on('loaded', this.onTextureLoaded);\n            texture.on('failed', this.onTextureFailed);\n        });\n    }\n    unloadTexture() {\n        if (this.props.texture) {\n            this.props.texture.off('loaded', this.onTextureLoaded);\n            this.props.texture.off('failed', this.onTextureFailed);\n        }\n        this.props.texture = null;\n        this.props.textureOptions = null;\n    }\n    onTextureLoaded = (target, dimensions) => {\n        this.emit('txLoaded', dimensions);\n    };\n    onTextureFailed = (target, error) => {\n        this.emit('txFailed', error);\n    };\n    //#endregion Textures\n    loadShader(shaderType, props) {\n        const shManager = this.stage.renderer.getShaderManager();\n        assertTruthy(shManager);\n        const { shader, props: p } = shManager.loadShader(shaderType, props);\n        this.props.shader = shader;\n        this.props.shaderProps = p;\n    }\n    setHasUpdates() {\n        if (!this.props.alpha) {\n            return;\n        }\n        this.hasUpdates = true;\n        let p = this?.props.parent;\n        while (p) {\n            p.hasUpdates = true;\n            p = p?.props.parent;\n        }\n    }\n    /**\n     * 1 - alpha recalculation\n     * 2 - translate recalculation\n     * 4 - transform recalculation\n     * @param type\n     */\n    setRecalculationType(type) {\n        this.recalculationType |= type;\n        this.setHasUpdates();\n    }\n    updateLocalTransform() {\n        // if rotation is equal to previous render pass, we only need\n        // to use sin and cosine of rotation to calculate new position\n        if (this.props.rotation !== 0 && this.props.rotation % (Math.PI * 2)) {\n            const sineRotation = Math.sin(this.props.rotation);\n            const cosineRotation = Math.cos(this.props.rotation);\n            this.setLocalTransform(cosineRotation * this.props.scale, -sineRotation * this.props.scale, sineRotation * this.props.scale, cosineRotation * this.props.scale);\n        }\n        else {\n            this.setLocalTransform(this.props.scale, 0, 0, this.props.scale);\n        }\n        // do transformations when matrix is implemented\n        this.updateLocalTranslate();\n    }\n    // update 2x2 matrix\n    setLocalTransform(a, b, c, d) {\n        this.setRecalculationType(4);\n        this.props.ta = a;\n        this.props.tb = b;\n        this.props.tc = c;\n        this.props.td = d;\n        // test if there is scaling or shearing in transformation ( b !== 0 || c !== 0 )\n        // test if there is flipping or reflection in transformation ( a < 0 || d < 0 )\n        this.isComplex = b !== 0 || c !== 0 || a < 0 || d < 0;\n    }\n    updateLocalTranslate() {\n        this.setRecalculationType(2);\n        const pivotXMultiplier = this.props.pivotX * this.props.width;\n        const pivotYMultiplier = this.props.pivotY * this.props.height;\n        let px = this.props.x -\n            (pivotXMultiplier * this.props.ta + pivotYMultiplier * this.props.tb) +\n            pivotXMultiplier;\n        let py = this.props.y -\n            (pivotXMultiplier * this.props.tc + pivotYMultiplier * this.props.td) +\n            pivotYMultiplier;\n        px -= this.props.mountX * this.props.width;\n        py -= this.props.mountY * this.props.height;\n        this.localPx = px;\n        this.localPy = py;\n    }\n    /**\n     * @todo: test for correct calculation flag\n     * @param delta\n     */\n    update(delta) {\n        const parentWorldContext = this.props.parent?.worldContext;\n        const worldContext = this.worldContext;\n        worldContext.px =\n            (parentWorldContext?.px || 0) +\n                this.localPx * (parentWorldContext?.ta || 1);\n        worldContext.py =\n            (parentWorldContext?.py || 0) +\n                this.localPy * (parentWorldContext?.td || 1);\n        if (parentWorldContext?.tb !== 0) {\n            worldContext.px += this.localPy * (parentWorldContext?.tb || 0);\n        }\n        if (parentWorldContext?.tc !== 0) {\n            worldContext.py += this.localPx * (parentWorldContext?.tc || 0);\n        }\n        worldContext.ta = this.props.ta * (parentWorldContext?.ta || 1);\n        worldContext.tb = this.props.td * (parentWorldContext?.tb || 0);\n        worldContext.tc = this.props.ta * (parentWorldContext?.tc || 0);\n        worldContext.td = this.props.td * (parentWorldContext?.td || 1);\n        if (this.isComplex) {\n            worldContext.ta += this.props.tc * (parentWorldContext?.tb || 0);\n            worldContext.tb += this.props.tb * (parentWorldContext?.ta || 1);\n            worldContext.tc += this.props.tc * (parentWorldContext?.td || 1);\n            worldContext.td += this.props.tb * (parentWorldContext?.tc || 0);\n        }\n        this.worldX = worldContext.px;\n        this.worldY = worldContext.py;\n        if (this.children.length) {\n            this.children.forEach((child) => {\n                child.update(delta);\n            });\n        }\n        // reset update flag\n        this.hasUpdates = false;\n        // reset recalculation type\n        this.recalculationType = 0;\n    }\n    renderQuads(renderer, clippingRect) {\n        const { width, height, colorTl, colorTr, colorBl, colorBr, texture, textureOptions, shader, shaderProps, scale, } = this.props;\n        const { zIndex, alpha, worldScale } = this;\n        // add to list of renderables to be sorted before rendering\n        renderer.addRenderable({\n            width,\n            height,\n            colorTl,\n            colorTr,\n            colorBl,\n            colorBr,\n            texture,\n            textureOptions,\n            zIndex,\n            shader,\n            shaderProps,\n            alpha,\n            scale,\n            clippingRect,\n            wpx: this.worldContext.px,\n            wpy: this.worldContext.py,\n            worldScale,\n            ta: this.worldContext.ta,\n            tb: this.worldContext.tb,\n            tc: this.worldContext.tc,\n            td: this.worldContext.td,\n        });\n        // Calculate absolute X and Y based on all ancestors\n        // renderer.addQuad(absX, absY, w, h, color, texture, textureOptions, zIndex);\n    }\n    //#region Properties\n    get id() {\n        return this.props.id;\n    }\n    get x() {\n        return this.props.x;\n    }\n    set x(value) {\n        if (this.props.x !== value) {\n            this.props.x = value;\n            this.updateLocalTranslate();\n        }\n    }\n    get worldX() {\n        return this.props.worldX || 0;\n    }\n    set worldX(value) {\n        this.props.worldX = value;\n    }\n    get worldY() {\n        return this.props.worldY || 0;\n    }\n    set worldY(value) {\n        this.props.worldY = value;\n    }\n    get absX() {\n        return (this.props.x +\n            (this.props.parent?.absX || this.props.parent?.worldContext.px || 0));\n    }\n    get absY() {\n        return this.props.y + (this.props.parent?.absY ?? 0);\n    }\n    get y() {\n        return this.props.y;\n    }\n    set y(value) {\n        if (this.props.y !== value) {\n            this.props.y = value;\n            this.updateLocalTranslate();\n        }\n    }\n    get width() {\n        return this.props.width;\n    }\n    set width(value) {\n        if (this.props.width !== value) {\n            this.props.width = value;\n            this.updateLocalTransform();\n        }\n    }\n    get height() {\n        return this.props.height;\n    }\n    set height(value) {\n        if (this.props.height !== value) {\n            this.props.height = value;\n            this.updateLocalTransform();\n        }\n    }\n    get scale() {\n        return this.props.scale;\n    }\n    // @todo: implement scaleX and scaleY\n    set scale(value) {\n        if (this.props.scale !== value) {\n            this.props.scale = value;\n            this.updateLocalTransform();\n        }\n    }\n    get worldScale() {\n        return (this.props.scale * (this.props.parent?.worldScale ?? 1) ||\n            this.props.scale);\n    }\n    get mount() {\n        return this.props.mount;\n    }\n    set mount(value) {\n        // if (this.props.mountX !== value || this.props.mountY !== value) {\n        this.props.mountX = value;\n        this.props.mountY = value;\n        this.props.mount = value;\n        this.updateLocalTranslate();\n        // }\n    }\n    get mountX() {\n        return this.props.mountX;\n    }\n    set mountX(value) {\n        this.props.mountX = value;\n        this.updateLocalTranslate();\n    }\n    get mountY() {\n        return this.props.mountY;\n    }\n    set mountY(value) {\n        this.props.mountY = value;\n        this.updateLocalTranslate();\n    }\n    get pivot() {\n        return this.props.pivot;\n    }\n    set pivot(value) {\n        if (this.props.pivotX !== value || this.props.pivotY !== value) {\n            this.props.pivotX = value;\n            this.props.pivotY = value;\n            this.updateLocalTranslate();\n        }\n    }\n    get pivotX() {\n        return this.props.pivotX;\n    }\n    set pivotX(value) {\n        this.props.pivotX = value;\n        this.updateLocalTranslate();\n    }\n    get pivotY() {\n        return this.props.pivotY;\n    }\n    set pivotY(value) {\n        this.props.pivotY = value;\n        this.updateLocalTranslate();\n    }\n    get rotation() {\n        return this.props.rotation;\n    }\n    set rotation(value) {\n        if (this.props.rotation !== value) {\n            this.props.rotation = value;\n            this.updateLocalTransform();\n        }\n    }\n    get alpha() {\n        const props = this.props;\n        const parent = props.parent;\n        // root always visible\n        if (!parent) {\n            return 1;\n        }\n        return props.alpha * parent.alpha;\n    }\n    set alpha(value) {\n        this.props.alpha = value;\n    }\n    get clipping() {\n        return this.props.clipping;\n    }\n    set clipping(value) {\n        this.props.clipping = value;\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(value) {\n        if (this.props.colorTl !== value ||\n            this.props.colorTr !== value ||\n            this.props.colorBl !== value ||\n            this.props.colorBr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.color = value;\n    }\n    get colorTop() {\n        return this.props.colorTop;\n    }\n    set colorTop(value) {\n        if (this.props.colorTl !== value || this.props.colorTr !== value) {\n            this.colorTl = value;\n            this.colorTr = value;\n        }\n        this.props.colorTop = value;\n    }\n    get colorBottom() {\n        return this.props.colorBottom;\n    }\n    set colorBottom(value) {\n        if (this.props.colorBl !== value || this.props.colorBr !== value) {\n            this.colorBl = value;\n            this.colorBr = value;\n        }\n        this.props.colorBottom = value;\n    }\n    get colorLeft() {\n        return this.props.colorLeft;\n    }\n    set colorLeft(value) {\n        if (this.props.colorTl !== value || this.props.colorBl !== value) {\n            this.colorTl = value;\n            this.colorBl = value;\n        }\n        this.props.colorLeft = value;\n    }\n    get colorRight() {\n        return this.props.colorRight;\n    }\n    set colorRight(value) {\n        if (this.props.colorTr !== value || this.props.colorBr !== value) {\n            this.colorTr = value;\n            this.colorBr = value;\n        }\n        this.props.colorRight = value;\n    }\n    get colorTl() {\n        return this.props.colorTl;\n    }\n    set colorTl(value) {\n        this.props.colorTl = value;\n    }\n    get colorTr() {\n        return this.props.colorTr;\n    }\n    set colorTr(value) {\n        this.props.colorTr = value;\n    }\n    get colorBl() {\n        return this.props.colorBl;\n    }\n    set colorBl(value) {\n        this.props.colorBl = value;\n    }\n    get colorBr() {\n        return this.props.colorBr;\n    }\n    set colorBr(value) {\n        this.props.colorBr = value;\n    }\n    // we're only interested in parent zIndex to test\n    // if we should use node zIndex is higher then parent zIndex\n    get zIndexLocked() {\n        return this.props.zIndexLocked || 0;\n    }\n    set zIndexLocked(value) {\n        this.props.zIndexLocked = value;\n    }\n    get zIndex() {\n        const props = this.props;\n        const z = props.zIndex || 0;\n        const p = props.parent?.zIndex || 0;\n        if (props.parent?.zIndexLocked) {\n            return z < p ? z : p;\n        }\n        return z;\n    }\n    set zIndex(value) {\n        this.props.zIndex = value;\n    }\n    get parent() {\n        return this.props.parent;\n    }\n    set parent(newParent) {\n        const oldParent = this.props.parent;\n        if (oldParent === newParent) {\n            return;\n        }\n        this.props.parent = newParent;\n        if (oldParent) {\n            const index = oldParent.children.indexOf(this);\n            assertTruthy(index !== -1, \"CoreNode.parent: Node not found in old parent's children!\");\n            oldParent.children.splice(index, 1);\n        }\n        if (newParent) {\n            newParent.children.push(this);\n        }\n        this.updateLocalTransform();\n    }\n}\n//# sourceMappingURL=CoreNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class Scene {\n    /**\n     * Root node of the scene\n     *\n     * @type {Node}\n     * @memberof Scene\n     */\n    root;\n    constructor(root) {\n        this.root = root;\n    }\n    /**\n     * Get all nodes of a specific type\n     * @param type\n     * @returns\n     */\n    getNodeByType(type) {\n        return [];\n    }\n    /**\n     * Find a node by id\n     * @param id\n     * @returns\n     */\n    getNodeById(id) {\n        return null;\n    }\n    /**\n     * Create a new node\n     * @param parent\n     * @returns\n     */\n    // public createNode(settings: Partial<INodeWritableProps> = {}): NodeTypes {\n    //   return createNode(settings);\n    // }\n    /**\n     * create a new RectangleNode\n     * @param w\n     * @param h\n     * @param parent\n     * @returns\n     */\n    // public rectangle(w: number, h: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new RectangleNode(w, h), parent);\n    // }\n    /**\n     * Create a new CircleNode\n     * @param r\n     * @param parent\n     * @returns\n     */\n    // public circle(r: number, parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new CircleNode(r), parent);\n    // }\n    /**\n     * Create a new TextNode\n     * @param text\n     * @param parent\n     * @returns\n     */\n    // public text(text = '', parent: NodeTypes | null = null) {\n    //   // TODO: Fix this\n    //   // return this.create(new TextNode(text), parent);\n    // }\n    /**\n     * Setup and attaching Node\n     * @param node\n     * @param parent\n     * @returns\n     */\n    // private create(node: NodeTypes, parent: NodeTypes | null = null): NodeTypes {\n    //   if (!parent) {\n    //     parent = this.root;\n    //   }\n    //   node.parent = parent;\n    //   return node;\n    // }\n    /**\n     * Update the scene\n     * @param delta\n     */\n    update(delta) {\n        this.root.update(delta);\n    }\n}\n//# sourceMappingURL=Scene.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Platform render loop initiator\n */\nexport const startLoop = (stage) => {\n    const loop = () => {\n        // emit('frameStart');\n        stage.drawFrame();\n        requestAnimationFrame(loop);\n    };\n    requestAnimationFrame(loop);\n};\n/**\n * Return unix timestamp\n * @return {number}\n */\nexport const getTimeStamp = () => {\n    return performance ? performance.now() : Date.now();\n};\n//# sourceMappingURL=platform.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\nexport class DefaultShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n          vec4 color = texture2D(u_texture, v_textureCoordinate);\n          gl_FragColor = vec4(v_color) * texture2D(u_texture, v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n// import type { Texture } from '../textures/Texture';\nexport class DefaultShaderBatched extends WebGlCoreShader {\n    supportsIndexedTextures = true;\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: [\n                'a_position',\n                'a_textureCoordinate',\n                'a_color',\n                'a_textureIndex',\n            ],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_textures[0]', uniform: 'uniform1iv' },\n            ],\n        });\n    }\n    bindTextures(texture) {\n        const { renderer, gl } = this;\n        if (texture.length > renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS) {\n            throw new Error(`DefaultShaderBatched: Cannot bind more than ${renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS} textures`);\n        }\n        texture.forEach((t, i) => {\n            gl.activeTexture(gl.TEXTURE0 + i);\n            gl.bindTexture(gl.TEXTURE_2D, t.ctxTexture);\n        });\n        const samplers = Array.from(Array(texture.length).keys());\n        this.setUniform('u_textures[0]', samplers);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_textureCoordinate;\n      attribute vec2 a_position;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      void main(){\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n        v_textureIndex = a_textureIndex;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: (textureUnits) => `\n      #define txUnits ${textureUnits}\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform sampler2D u_image;\n      uniform sampler2D u_textures[txUnits];\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n      varying float v_textureIndex;\n\n      vec4 sampleFromTexture(sampler2D textures[${textureUnits}], int idx, vec2 uv) {\n        ${Array.from(Array(textureUnits).keys())\n            .map((idx) => `\n          ${idx !== 0 ? 'else ' : ''}if (idx == ${idx}) {\n            return texture2D(textures[${idx}], uv);\n          }\n        `)\n            .join('')}\n        return texture2D(textures[0], uv);\n      }\n\n      void main(){\n        gl_FragColor = vec4(v_color) * sampleFromTexture(u_textures, int(v_textureIndex), v_textureCoordinate);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=DefaultShaderBatched.js.map","export class ShaderEffect {\n    priority = 1;\n    name = '';\n    ref;\n    target;\n    passParameters = '';\n    declaredUniforms = '';\n    uniformInfo = {};\n    static uniforms = {};\n    static methods;\n    static onShaderMask;\n    static onColorize;\n    static onEffectMask;\n    static getEffectKey(props) {\n        return '';\n    }\n    static getMethodParameters(uniforms, props) {\n        const res = [];\n        for (const u in uniforms) {\n            const uni = uniforms[u];\n            let define = '';\n            if (uni.size) {\n                define = `[${uni.size(props)}]`;\n            }\n            res.push(`${uni.type} ${u}${define}`);\n        }\n        return res.join(',');\n    }\n    constructor(options) {\n        const { ref, target, props = {} } = options;\n        this.ref = ref;\n        this.target = target;\n        const uniformInfo = {};\n        const passParameters = [];\n        let declaredUniforms = '';\n        const uniforms = this.constructor.uniforms || {};\n        for (const u in uniforms) {\n            const unif = uniforms[u];\n            const uniType = unif.type;\n            //make unique uniform name\n            const uniformName = `${ref}_${u}`;\n            let define = '';\n            if (unif.size) {\n                define = `[${unif.size(props)}]`;\n            }\n            passParameters.push(uniformName);\n            declaredUniforms += `uniform ${uniType} ${uniformName}${define};`;\n            uniformInfo[u] = { name: uniformName, uniform: uniforms[u].method };\n        }\n        this.passParameters = passParameters.join(',');\n        this.declaredUniforms = declaredUniforms;\n        this.uniformInfo = uniformInfo;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n    static makeEffectKey(props) {\n        return false;\n    }\n}\n//# sourceMappingURL=ShaderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Masks the current maskcolor with rounded corners similar to {@link RoundedRectangle}\n */\nexport class RadiusEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radius';\n    static getEffectKey() {\n        return `radius`;\n    }\n    static uniforms = {\n        radius: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        boxDist: `\n      float function(vec2 p, vec2 size, float radius) {\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n    `,\n    };\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius ?? 10,\n        };\n    }\n    static onShaderMask = `\n  vec2 halfDimensions = u_dimensions * 0.5;\n  float r = radius[0] * step(v_textureCoordinate.x, 0.5) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[1] * step(0.5, v_textureCoordinate.x) * step(v_textureCoordinate.y, 0.5);\n  r = r + radius[2] * step(0.5, v_textureCoordinate.x) * step(0.5, v_textureCoordinate.y);\n  r = r + radius[3] * step(v_textureCoordinate.x, 0.5) * step(0.5, v_textureCoordinate.y);\n  return $boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions, r);\n  `;\n    static onEffectMask = `\n  return mix(vec4(0.0), maskColor, $fillMask(shaderMask));\n  `;\n}\n//# sourceMappingURL=RadiusEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderEffect renders a border along all edges of an element\n */\nexport class BorderEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'border';\n    static getEffectKey() {\n        return `border`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static onEffectMask = `\n  float mask = clamp(shaderMask + width, 0.0, 1.0) - clamp(shaderMask, 0.0, 1.0);\n  return mix(shaderColor, maskColor, mask);\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Linear Gradient effect over a effect mask\n */\nexport class LinearGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'linearGradient';\n    static getEffectKey(props) {\n        return `linearGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            angle: props.angle ?? 0,\n        };\n    }\n    static uniforms = {\n        angle: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static methods = {\n        fromLinear: `\n      vec4 function(vec4 linearRGB) {\n        vec4 higher = vec4(1.055)*pow(linearRGB, vec4(1.0/2.4)) - vec4(0.055);\n        vec4 lower = linearRGB * vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        toLinear: `\n      vec4 function(vec4 sRGB) {\n        vec4 higher = pow((sRGB + vec4(0.055))/vec4(1.055), vec4(2.4));\n        vec4 lower = sRGB/vec4(12.92);\n        return mix(higher, lower, 1.0);\n      }\n    `,\n        calcPoint: `\n      vec2 function(float d, float angle) {\n        return d * vec2(cos(angle), sin(angle)) + (u_dimensions * 0.5);\n      }\n    `,\n    };\n    static ColorLoop = (amount) => {\n        let loop = '';\n        for (let i = 2; i < amount; i++) {\n            loop += `colorOut = mix(colorOut, colors[${i}], clamp((dist - stops[${i - 1}]) / (stops[${i}] - stops[${i - 1}]), 0.0, 1.0));`;\n        }\n        return loop;\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      float a = angle - (PI / 180.0 * 90.0);\n      float lineDist = abs(u_dimensions.x * cos(a)) + abs(u_dimensions.y * sin(a));\n      vec2 f = $calcPoint(lineDist * 0.5, a);\n      vec2 t = $calcPoint(lineDist * 0.5, a + PI);\n      vec2 gradVec = t - f;\n      float dist = dot(v_textureCoordinate.xy * u_dimensions - f, gradVec) / dot(gradVec, gradVec);\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = $fromLinear(mix($toLinear(colors[0]), $toLinear(colors[1]), stopCalc));\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=LinearGradientEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect } from './ShaderEffect.js';\n/**\n * Grayscale effect grayscales the color values of the current mask color\n */\nexport class GrayscaleEffect extends ShaderEffect {\n    name = 'grayscale';\n    static getEffectKey() {\n        return `grayscale`;\n    }\n    static onColorize = `\n    vec3 color = pow(maskColor.rgb, vec3(2.0));\n    float gray = dot(color, vec3(0.2126, 0.7152, 0.0722));\n    float gammaGray = sqrt(gray);\n    return vec4(gammaGray, gammaGray, gammaGray, 1.0);\n  `;\n}\n//# sourceMappingURL=GrayscaleEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the right side of an element\n */\nexport class BorderRightEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderRight';\n    static getEffectKey() {\n        return `borderRight`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(u_dimensions.x - width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderRightEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the top side of an element\n */\nexport class BorderTopEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderTop';\n    static getEffectKey() {\n        return `borderTop`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderTopEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the bottom side of an element\n */\nexport class BorderBottomEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderBottom';\n    static getEffectKey() {\n        return `borderBottom`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(0.0, u_dimensions.y - width * 0.5);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(u_dimensions.x, width*0.5));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderBottomEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\n/**\n * The BorderBottomEffect renders a border on the left of an element\n */\nexport class BorderLeftEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'borderLeft';\n    static getEffectKey() {\n        return `borderLeft`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 10,\n            color: props.color ?? 0xffffffff,\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        color: {\n            value: 0xffffffff,\n            validator: (rgba) => getNormalizedRgbaComponents(rgba),\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n    };\n    static methods = {\n        fillMask: `\n      float function(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n    `,\n        rectDist: `\n      float function(vec2 p, vec2 size) {\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n      }\n    `,\n    };\n    static onEffectMask = `\n  vec2 pos = vec2(width * 0.5, 0.0);\n  float mask = $rectDist(v_textureCoordinate.xy * u_dimensions - pos, vec2(width*0.5, u_dimensions.y));\n  return mix(shaderColor, maskColor, $fillMask(mask));\n  `;\n    static onColorize = `\n    return color;\n  `;\n}\n//# sourceMappingURL=BorderLeftEffect.js.map","import { ShaderEffect, } from './ShaderEffect.js';\n/**\n * Renders a Glitch effect using the incoming texture\n */\nexport class GlitchEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'glitch';\n    static getEffectKey(props) {\n        return `glitch`;\n    }\n    static resolveDefaults(props) {\n        return {\n            amplitude: props.amplitude ?? 0.2,\n            narrowness: props.narrowness ?? 4.0,\n            blockiness: props.blockiness ?? 2.0,\n            minimizer: props.minimizer ?? 8.0,\n            time: props.time ?? Date.now(),\n        };\n    }\n    static uniforms = {\n        amplitude: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        narrowness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        blockiness: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        minimizer: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        time: {\n            value: 0,\n            method: 'uniform1f',\n            validator: (value) => {\n                return (Date.now() - value) % 1000;\n            },\n            type: 'float',\n        },\n    };\n    static methods = {\n        rand: `\n      float function(vec2 p, float time) {\n        float t = floor(time * 20.) / 10.;\n        return fract(sin(dot(p, vec2(t * 12.9898, t * 78.233))) * 43758.5453);\n      }\n    `,\n        noise: `\n      float function(vec2 uv, float blockiness, float time) {\n        vec2 lv = fract(uv);\n        vec2 id = floor(uv);\n\n        float n1 = rand(id, time);\n        float n2 = rand(id+vec2(1,0), time);\n        float n3 = rand(id+vec2(0,1), time);\n        float n4 = rand(id+vec2(1,1), time);\n        vec2 u = smoothstep(0.0, 1.0 + blockiness, lv);\n        return mix(mix(n1, n2, u.x), mix(n3, n4, u.x), u.y);\n      }\n    `,\n        fbm: `\n      float function(vec2 uv, int count, float blockiness, float complexity, float time) {\n        float val = 0.0;\n        float amp = 0.5;\n        const int MAX_ITERATIONS = 10;\n\n        for(int i = 0; i < MAX_ITERATIONS; i++) {\n          if(i >= count) {break;}\n          val += amp * noise(uv, blockiness, time);\n          amp *= 0.5;\n          uv *= complexity;\n        }\n        return val;\n      }\n    `,\n    };\n    static onColorize = `\n    vec2 uv = v_textureCoordinate.xy;\n    float aspect = u_dimensions.x / u_dimensions.y;\n    vec2 a = vec2(uv.x * aspect , uv.y);\n    vec2 uv2 = vec2(a.x / u_dimensions.x, exp(a.y));\n\n    float shift = amplitude * pow($fbm(uv2, 4, blockiness, narrowness, time), minimizer);\n    float colR = texture2D(u_texture, vec2(uv.x + shift, uv.y)).r * (1. - shift);\n    float colG = texture2D(u_texture, vec2(uv.x - shift, uv.y)).g * (1. - shift);\n    float colB = texture2D(u_texture, vec2(uv.x - shift, uv.y)).b * (1. - shift);\n\n    vec3 f = vec3(colR, colG, colB);\n    return vec4(f, texture2D(u_texture, vec2(uv.x - shift, uv.y)).a);\n  `;\n}\n//# sourceMappingURL=GlitchEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class FadeOutEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'fadeOut';\n    static getEffectKey() {\n        return `fadeOut`;\n    }\n    static uniforms = {\n        fade: {\n            value: 0,\n            method: 'uniform4fv',\n            type: 'vec4',\n            validator: (value) => {\n                let r = value;\n                if (Array.isArray(r)) {\n                    if (r.length === 2) {\n                        r = [r[0], r[1], r[0], r[1]];\n                    }\n                    else if (r.length === 3) {\n                        r = [r[0], r[1], r[2], r[0]];\n                    }\n                    else if (r.length !== 4) {\n                        r = [r[0], r[0], r[0], r[0]];\n                    }\n                }\n                else if (typeof r === 'number') {\n                    r = [r, r, r, r];\n                }\n                return r;\n            },\n        },\n    };\n    static resolveDefaults(props) {\n        return {\n            fade: props.fade ?? 10,\n        };\n    }\n    static onColorize = `\n  vec2 point = v_textureCoordinate.xy * u_dimensions.xy;\n  vec2 pos1;\n  vec2 pos2;\n  vec2 d;\n  float c;\n  vec4 result = maskColor;\n\n\n  if(fade[0] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x, point.y + fade[0]);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[1] > 0.0) {\n    pos1 = vec2(point.x - u_dimensions.x - fade[1], v_textureCoordinate.y);\n    pos2 = vec2(point.x - u_dimensions.x, v_textureCoordinate.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[2] > 0.0) {\n    pos1 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y - fade[2]);\n    pos2 = vec2(v_textureCoordinate.x, point.y - u_dimensions.y);\n    d = pos1 - pos2;\n    c = dot(pos2, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  if(fade[3] > 0.0) {\n    pos1 = vec2(point.x, point.y);\n    pos2 = vec2(point.x + fade[3], point.y);\n    d = pos2 - pos1;\n    c = dot(pos1, d) / dot(d, d);\n    result = mix(vec4(0.0), result, smoothstep(0.0, 1.0, clamp(c, 0.0, 1.0)));\n  }\n\n  return result;\n  `;\n}\n//# sourceMappingURL=FadeOutEffect.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../../lib/utils.js';\nimport { ShaderEffect, } from './ShaderEffect.js';\nexport class RadialGradientEffect extends ShaderEffect {\n    static z$__type__Props;\n    name = 'radialGradient';\n    static getEffectKey(props) {\n        return `radialGradient${props.colors.length}`;\n    }\n    static resolveDefaults(props) {\n        const colors = props.colors ?? [0xff000000, 0xffffffff];\n        let stops = props.stops;\n        if (!stops) {\n            stops = [];\n            const calc = colors.length - 1;\n            for (let i = 0; i < colors.length; i++) {\n                stops.push(i * (1 / calc));\n            }\n        }\n        return {\n            colors,\n            stops,\n            width: props.width ?? 0,\n            height: props.height ?? props.width ?? 0,\n            pivot: props.pivot ?? [0.5, 0.5],\n        };\n    }\n    static uniforms = {\n        width: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        height: {\n            value: 0,\n            method: 'uniform1f',\n            type: 'float',\n        },\n        pivot: {\n            value: [0.5, 0.5],\n            method: 'uniform2fv',\n            type: 'vec2',\n        },\n        colors: {\n            value: 0xffffffff,\n            validator: (rgbas) => {\n                const cols = rgbas.map((rgbas) => getNormalizedRgbaComponents(rgbas));\n                return cols.reduce((acc, val) => acc.concat(val), []);\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform4fv',\n            type: 'vec4',\n        },\n        stops: {\n            value: [],\n            validator: (value, props) => {\n                const colors = props.colors ?? [];\n                let stops = value;\n                const tmp = value;\n                if (stops.length === 0 || (stops && stops.length !== colors.length)) {\n                    for (let i = 0; i < colors.length; i++) {\n                        if (stops[i]) {\n                            tmp[i] = stops[i];\n                            if (stops[i - 1] === undefined && tmp[i - 2] !== undefined) {\n                                tmp[i - 1] = tmp[i - 2] + (stops[i] - tmp[i - 2]) / 2;\n                            }\n                        }\n                        else {\n                            tmp[i] = i * (1 / (colors.length - 1));\n                        }\n                    }\n                    stops = tmp;\n                }\n                return tmp;\n            },\n            size: (props) => props.colors.length,\n            method: 'uniform1fv',\n            type: 'float',\n        },\n    };\n    static onColorize = (props) => {\n        const colors = props.colors.length || 1;\n        return `\n      vec2 point = v_textureCoordinate.xy * u_dimensions;\n      vec2 projection = vec2(pivot.x * u_dimensions.x, pivot.y * u_dimensions.y);\n\n      float dist = length((point - projection) / vec2(width, height));\n\n      float stopCalc = (dist - stops[0]) / (stops[1] - stops[0]);\n      vec4 colorOut = mix(colors[0], colors[1], stopCalc);\n      for(int i = 1; i < ${colors}-1; i++) {\n        stopCalc = (dist - stops[i]) / (stops[i + 1] - stops[i]);\n        colorOut = mix(colorOut, colors[i + 1], clamp(stopCalc, 0.0, 1.0));\n      }\n      return mix(maskColor, colorOut, clamp(colorOut.a, 0.0, 1.0));\n    `;\n    };\n}\n//# sourceMappingURL=RadialGradientEffect.js.map","import { WebGlCoreShader, } from '../WebGlCoreShader.js';\nimport { RadiusEffect } from './effects/RadiusEffect.js';\nimport { BorderEffect } from './effects/BorderEffect.js';\nimport { LinearGradientEffect } from './effects/LinearGradientEffect.js';\nimport { GrayscaleEffect } from './effects/GrayscaleEffect.js';\nimport { ShaderEffect } from './effects/ShaderEffect.js';\nimport { BorderRightEffect } from './effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './effects/BorderLeftEffect.js';\nimport { GlitchEffect } from './effects/GlitchEffect.js';\nimport { FadeOutEffect } from './effects/FadeOutEffect.js';\nimport { RadialGradientEffect } from './effects/RadialGradientEffect.js';\nconst Effects = {\n    radius: RadiusEffect,\n    border: BorderEffect,\n    borderBottom: BorderBottomEffect,\n    borderLeft: BorderLeftEffect,\n    borderRight: BorderRightEffect,\n    borderTop: BorderTopEffect,\n    fadeOut: FadeOutEffect,\n    linearGradient: LinearGradientEffect,\n    radialGradient: RadialGradientEffect,\n    grayscale: GrayscaleEffect,\n    glitch: GlitchEffect,\n};\nexport class DynamicShader extends WebGlCoreShader {\n    effects = [];\n    constructor(renderer, props, effectContructors) {\n        const shader = DynamicShader.createShader(props, effectContructors);\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2fv' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_alpha', uniform: 'uniform1f' },\n                ...shader.uniforms,\n            ],\n            shaderSources: {\n                vertex: shader.vertex,\n                fragment: shader.fragment,\n            },\n        });\n        this.effects = shader.effects;\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        props.effects?.forEach((eff, index) => {\n            const effect = this.effects[index];\n            const fxClass = Effects[effect.name];\n            const props = eff.props ?? {};\n            const uniInfo = effect.uniformInfo;\n            Object.keys(props).forEach((p) => {\n                const fxProp = fxClass.uniforms[p];\n                const propInfo = uniInfo[p];\n                let value = fxProp.validator\n                    ? fxProp.validator(props[p], props)\n                    : props[p];\n                if (Array.isArray(value)) {\n                    value = new Float32Array(value);\n                }\n                this.setUniform(propInfo.name, value);\n            });\n        });\n    }\n    static createShader(props, effectContructors) {\n        //counts duplicate effects\n        const effectNameCount = {};\n        const methods = {};\n        let declareUniforms = '';\n        const uniforms = [];\n        const uFx = [];\n        const effects = props.effects.map((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            effectNameCount[key] = effectNameCount[key] ? ++effectNameCount[key] : 1;\n            const nr = effectNameCount[key];\n            if (nr === 1) {\n                uFx.push({ key, type: effect.type, props: effect.props });\n            }\n            //initialize new effect class;\n            const fxClass = new baseClass({\n                ref: `${key}${nr === 1 ? '' : nr}`,\n                target: key,\n                props: effect.props,\n            });\n            declareUniforms += fxClass.declaredUniforms;\n            uniforms.push(...Object.values(fxClass.uniformInfo));\n            return fxClass;\n        });\n        //build source\n        let effectMethods = '';\n        uFx?.forEach((fx) => {\n            const fxClass = effectContructors[fx.type];\n            const fxProps = fxClass.resolveDefaults((fx.props ?? {}));\n            const remap = [];\n            for (const m in fxClass.methods) {\n                let cm = m;\n                const fxMethod = fxClass.methods[m];\n                if (methods[m] && methods[m] !== fxMethod) {\n                    cm = DynamicShader.resolveMethodDuplicate(m, fxMethod, methods);\n                }\n                methods[cm] = fxMethod.replace('function', cm);\n                remap.push({ m, cm });\n            }\n            let onShaderMask = fxClass.onShaderMask instanceof Function\n                ? fxClass.onShaderMask(fxProps)\n                : fxClass.onShaderMask;\n            let onColorize = fxClass.onColorize instanceof Function\n                ? fxClass.onColorize(fxProps)\n                : fxClass.onColorize;\n            let onEffectMask = fxClass.onEffectMask instanceof Function\n                ? fxClass.onEffectMask(fxProps)\n                : fxClass.onEffectMask;\n            remap.forEach((r) => {\n                const { m, cm } = r;\n                const reg = new RegExp(`\\\\$${m}`, 'g');\n                if (onShaderMask) {\n                    onShaderMask = onShaderMask.replace(reg, cm);\n                }\n                if (onColorize) {\n                    onColorize = onColorize.replace(reg, cm);\n                }\n                if (onEffectMask) {\n                    onEffectMask = onEffectMask.replace(reg, cm);\n                }\n            });\n            const methodParameters = fxClass.getMethodParameters(fxClass.uniforms, fxProps);\n            const pm = methodParameters.length > 0 ? `, ${methodParameters}` : '';\n            if (onShaderMask) {\n                effectMethods += `\n        float fx_${fx.key}_onShaderMask(float shaderMask ${pm}) {\n          ${onShaderMask}\n        }\n        `;\n            }\n            if (onColorize) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onColorize(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onColorize}\n          }\n        `;\n            }\n            if (onEffectMask) {\n                effectMethods += `\n          vec4 fx_${fx.key}_onEffectMask(float shaderMask, vec4 maskColor, vec4 shaderColor${pm}) {\n            ${onEffectMask}\n          }\n        `;\n            }\n        });\n        let sharedMethods = '';\n        for (const m in methods) {\n            sharedMethods += methods[m];\n        }\n        //fill main functions\n        let currentMask = `mix(shaderColor, maskColor, clamp(-(lng_DefaultMask), 0.0, 1.0))`;\n        let drawEffects = `\n\n    `;\n        for (let i = 0; i < effects.length; i++) {\n            const current = effects[i];\n            const pm = current.passParameters.length > 0 ? `, ${current.passParameters}` : '';\n            const currentClass = Effects[current.name];\n            if (currentClass.onShaderMask) {\n                drawEffects += `\n        shaderMask = fx_${current.target}_onShaderMask(shaderMask ${pm});\n        `;\n            }\n            if (currentClass.onColorize) {\n                drawEffects += `\n        maskColor = fx_${current.target}_onColorize(shaderMask, maskColor, shaderColor${pm});\n        `;\n            }\n            if (currentClass.onEffectMask) {\n                currentMask = `fx_${current.target}_onEffectMask(shaderMask, maskColor, shaderColor${pm})`;\n            }\n            const next = effects[i + 1];\n            if (next === undefined ||\n                Effects[next.name].onEffectMask) {\n                drawEffects += `\n          shaderColor = ${currentMask};\n        `;\n            }\n        }\n        return {\n            effects,\n            uniforms,\n            fragment: DynamicShader.fragment(declareUniforms, sharedMethods, effectMethods, drawEffects),\n            vertex: DynamicShader.vertex(),\n        };\n    }\n    static resolveMethodDuplicate(key, effectMethod, methodCollection, increment = 0) {\n        const m = key + (increment > 0 ? increment : '');\n        if (methodCollection[m] && methodCollection[m] !== effectMethod) {\n            return this.resolveMethodDuplicate(key, effectMethod, methodCollection, ++increment);\n        }\n        return m;\n    }\n    static resolveDefaults(props, effectContructors) {\n        return {\n            effects: (props.effects ?? []).map((effect) => ({\n                type: effect.type,\n                props: effectContructors[effect.type].resolveDefaults(effect.props || {}),\n            })),\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n            $alpha: 0,\n        };\n    }\n    static makeCacheKey(props, effectContructors) {\n        let fx = '';\n        props.effects?.forEach((effect) => {\n            const baseClass = effectContructors[effect.type];\n            const key = baseClass.getEffectKey(effect.props || {});\n            fx += `,${key}`;\n        });\n        return `DynamicShader${fx}`;\n    }\n    static z$__type__Props;\n    static vertex = () => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    attribute vec2 a_textureCoordinate;\n    attribute vec2 a_position;\n    attribute vec4 a_color;\n    attribute float a_textureIndex;\n\n    uniform vec2 u_resolution;\n    uniform float u_pixelRatio;\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n    varying float v_textureIndex;\n\n    void main(){\n      vec2 normalized = a_position * u_pixelRatio / u_resolution;\n      vec2 zero_two = normalized * 2.0;\n      vec2 clip_space = zero_two - 1.0;\n\n      // pass to fragment\n      v_color = a_color;\n      v_textureCoordinate = a_textureCoordinate;\n      v_textureIndex = a_textureIndex;\n\n      // flip y\n      gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n    }\n  `;\n    static fragment = (uniforms, methods, effectMethods, drawEffects) => `\n    # ifdef GL_FRAGMENT_PRESICISON_HIGH\n    precision highp float;\n    # else\n    precision mediump float;\n    # endif\n\n    #define PI 3.14159265359\n\n    uniform vec2 u_resolution;\n    uniform vec2 u_dimensions;\n    uniform float u_alpha;\n    uniform float u_radius;\n    uniform sampler2D u_texture;\n    uniform float u_pixelRatio;\n\n    ${uniforms}\n\n    varying vec4 v_color;\n    varying vec2 v_textureCoordinate;\n\n    ${methods}\n\n    ${effectMethods}\n\n    void main() {\n      vec2 p = v_textureCoordinate.xy * u_dimensions - u_dimensions * 0.5;\n      vec2 d = abs(p) - (u_dimensions) * 0.5;\n      float lng_DefaultMask = min(max(d.x, d.y), 0.0) + length(max(d, 0.0));\n\n      vec4 shaderColor = vec4(0.0);\n      float shaderMask = lng_DefaultMask;\n\n      vec4 maskColor = texture2D(u_texture, v_textureCoordinate) * v_color;\n\n      shaderColor = mix(shaderColor, maskColor, clamp(-(lng_DefaultMask + 0.5), 0.0, 1.0));\n\n      ${drawEffects}\n\n      gl_FragColor = shaderColor * u_alpha;\n    }\n  `;\n}\n//# sourceMappingURL=DynamicShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreShader, } from '../WebGlCoreShader.js';\n/**\n * Similar to the {@link DefaultShader} but cuts out 4 rounded rectangle corners\n * as defined by the specified corner {@link RoundedRectangleProps.radius}\n */\nexport class RoundedRectangle extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate', 'a_color'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_dimensions', uniform: 'uniform2fv' },\n                { name: 'u_radius', uniform: 'uniform1f' },\n            ],\n        });\n    }\n    static z$__type__Props;\n    static resolveDefaults(props) {\n        return {\n            radius: props.radius || 10,\n            $dimensions: {\n                width: 0,\n                height: 0,\n            },\n        };\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        this.setUniform('u_radius', props.radius);\n    }\n    canBatchShaderProps(propsA, propsB) {\n        return (propsA.radius === propsB.radius &&\n            propsA.$dimensions.width === propsB.$dimensions.width &&\n            propsA.$dimensions.height === propsB.$dimensions.height);\n    }\n    static shaderSources = {\n        vertex: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n      attribute vec4 a_color;\n      attribute float a_textureIndex;\n      attribute float a_depth;\n\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      void main() {\n        vec2 normalized = a_position * u_pixelRatio / u_resolution;\n        vec2 zero_two = normalized * 2.0;\n        vec2 clip_space = zero_two - 1.0;\n\n        // pass to fragment\n        v_color = a_color;\n        v_textureCoordinate = a_textureCoordinate;\n\n        // flip y\n        gl_Position = vec4(clip_space * vec2(1.0, -1.0), 0, 1);\n      }\n    `,\n        fragment: `\n      # ifdef GL_FRAGMENT_PRESICISON_HIGH\n      precision highp float;\n      # else\n      precision mediump float;\n      # endif\n\n      uniform vec2 u_resolution;\n      uniform vec2 u_dimensions;\n      uniform float u_radius;\n      uniform sampler2D u_texture;\n\n      varying vec4 v_color;\n      varying vec2 v_textureCoordinate;\n\n      float boxDist(vec2 p, vec2 size, float radius){\n        size -= vec2(radius);\n        vec2 d = abs(p) - size;\n        return min(max(d.x, d.y), 0.0) + length(max(d, 0.0)) - radius;\n      }\n\n      float fillMask(float dist) {\n        return clamp(-dist, 0.0, 1.0);\n      }\n\n      void main() {\n        vec4 color = texture2D(u_texture, v_textureCoordinate) * v_color;\n        vec2 halfDimensions = u_dimensions * 0.5;\n\n        float d = boxDist(v_textureCoordinate.xy * u_dimensions - halfDimensions, halfDimensions + 0.5, u_radius);\n        gl_FragColor = mix(vec4(0.0), color, fillMask(d));\n      }\n    `,\n    };\n}\n//# sourceMappingURL=RoundedRectangle.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { getNormalizedRgbaComponents } from '../../../lib/utils.js';\nimport { WebGlCoreShader } from '../WebGlCoreShader.js';\n/**\n * SdfShader supports multi-channel and single-channel signed distance field textures.\n *\n * @remarks\n * This Shader is used by the {@link SdfTextRenderer}. Do not use thie Shader\n * directly. Instead create a Text Node and assign a SDF font family to it.\n *\n * @internalRemarks\n * The only thing this shader does to support multi-channel SDFs is to\n * add a median function to the fragment shader. If this one function call\n * ends up being a performance bottleneck we can always look at ways to\n * remove it.\n */\nexport class SdfShader extends WebGlCoreShader {\n    constructor(renderer) {\n        super({\n            renderer,\n            attributes: ['a_position', 'a_textureCoordinate'],\n            uniforms: [\n                { name: 'u_resolution', uniform: 'uniform2fv' },\n                { name: 'u_pixelRatio', uniform: 'uniform1f' },\n                { name: 'u_texture', uniform: 'uniform2f' },\n                { name: 'u_offset', uniform: 'uniform2fv' },\n                { name: 'u_color', uniform: 'uniform4fv' },\n                { name: 'u_size', uniform: 'uniform1f' },\n                { name: 'u_distanceRange', uniform: 'uniform1f' },\n                { name: 'u_debug', uniform: 'uniform1i' },\n            ],\n        });\n    }\n    bindTextures(textures) {\n        const { gl } = this;\n        gl.activeTexture(gl.TEXTURE0);\n        gl.bindTexture(gl.TEXTURE_2D, textures[0].ctxTexture);\n    }\n    bindProps(props) {\n        const resolvedProps = SdfShader.resolveDefaults(props);\n        for (const key in resolvedProps) {\n            if (key === 'offset') {\n                this.setUniform('u_offset', resolvedProps[key]);\n            }\n            else if (key === 'color') {\n                const components = getNormalizedRgbaComponents(resolvedProps.color);\n                this.setUniform('u_color', components);\n            }\n            else if (key === 'size') {\n                this.setUniform('u_size', resolvedProps[key]);\n            }\n            else if (key === 'distanceRange') {\n                this.setUniform('u_distanceRange', resolvedProps[key]);\n            }\n            else if (key === 'debug') {\n                this.setUniform('u_debug', resolvedProps[key] ? 1.0 : 0.0);\n            }\n        }\n    }\n    static resolveDefaults(props = {}) {\n        return {\n            offset: props.offset ?? [0.0, 0.0],\n            color: props.color ?? 0xffffffff,\n            size: props.size ?? 16,\n            distanceRange: props.distanceRange ?? 1.0,\n            debug: props.debug ?? false,\n        };\n    }\n    static shaderSources = {\n        vertex: `\n      // an attribute is an input (in) to a vertex shader.\n      // It will receive data from a buffer\n      attribute vec2 a_position;\n      attribute vec2 a_textureCoordinate;\n\n      uniform vec2 u_offset;\n      uniform vec2 u_resolution;\n      uniform float u_pixelRatio;\n      uniform float u_size;\n\n      varying vec2 v_texcoord;\n\n      void main() {\n        gl_Position = vec4(((a_position * u_size + u_offset) * u_pixelRatio / u_resolution * 2.0 - 1.0) * vec2(1, -1), 0, 1);\n        v_texcoord = a_textureCoordinate;\n      }\n    `,\n        fragment: `\n      precision highp float;\n\n      uniform vec4 u_color;\n      uniform sampler2D u_texture;\n      uniform float u_distanceRange;\n      uniform float u_pixelRatio;\n      uniform int u_debug;\n\n      varying vec2 v_texcoord;\n\n      float median(float r, float g, float b) {\n          return max(min(r, g), min(max(r, g), b));\n      }\n\n      void main() {\n          vec3 sample = texture2D(u_texture, v_texcoord).rgb;\n          if (u_debug == 1) {\n            gl_FragColor = vec4(sample.r, sample.g, sample.b, 1.0);\n            return;\n          }\n          float scaledDistRange = u_distanceRange * u_pixelRatio;\n          float sigDist = scaledDistRange * (median(sample.r, sample.g, sample.b) - 0.5);\n          float opacity = clamp(sigDist + 0.5, 0.0, 1.0) * u_color.a;\n\n          // Build the final color.\n          // IMPORTANT: We must premultiply the color by the alpha value before returning it.\n          gl_FragColor = vec4(u_color.r * opacity, u_color.g * opacity, u_color.b * opacity, opacity);\n      }\n    `,\n    };\n}\n//# sourceMappingURL=SdfShader.js.map","import { DefaultShader } from './renderers/webgl/shaders/DefaultShader.js';\nimport { DefaultShaderBatched } from './renderers/webgl/shaders/DefaultShaderBatched.js';\nimport { DynamicShader, } from './renderers/webgl/shaders/DynamicShader.js';\nimport { RoundedRectangle } from './renderers/webgl/shaders/RoundedRectangle.js';\nimport { SdfShader } from './renderers/webgl/shaders/SdfShader.js';\nimport { RadiusEffect } from './renderers/webgl/shaders/effects/RadiusEffect.js';\nimport { BorderEffect } from './renderers/webgl/shaders/effects/BorderEffect.js';\nimport { LinearGradientEffect } from './renderers/webgl/shaders/effects/LinearGradientEffect.js';\nimport { GrayscaleEffect } from './renderers/webgl/shaders/effects/GrayscaleEffect.js';\nimport { BorderRightEffect } from './renderers/webgl/shaders/effects/BorderRightEffect.js';\nimport { BorderTopEffect } from './renderers/webgl/shaders/effects/BorderTopEffect.js';\nimport { BorderBottomEffect } from './renderers/webgl/shaders/effects/BorderBottomEffect.js';\nimport { BorderLeftEffect } from './renderers/webgl/shaders/effects/BorderLeftEffect.js';\nimport { GlitchEffect } from './renderers/webgl/shaders/effects/GlitchEffect.js';\nimport { FadeOutEffect } from './renderers/webgl/shaders/effects/FadeOutEffect.js';\nimport { RadialGradientEffect } from './renderers/webgl/shaders/effects/RadialGradientEffect.js';\nexport class CoreShaderManager {\n    shCache = new Map();\n    shConstructors = {};\n    attachedShader = null;\n    effectConstructors = {};\n    renderer;\n    constructor() {\n        this.registerShaderType('DefaultShader', DefaultShader);\n        this.registerShaderType('DefaultShaderBatched', DefaultShaderBatched);\n        this.registerShaderType('RoundedRectangle', RoundedRectangle);\n        this.registerShaderType('DynamicShader', DynamicShader);\n        this.registerShaderType('SdfShader', SdfShader);\n        this.registerEffectType('border', BorderEffect);\n        this.registerEffectType('borderBottom', BorderBottomEffect);\n        this.registerEffectType('borderLeft', BorderLeftEffect);\n        this.registerEffectType('borderRight', BorderRightEffect);\n        this.registerEffectType('borderTop', BorderTopEffect);\n        this.registerEffectType('fadeOut', FadeOutEffect);\n        this.registerEffectType('linearGradient', LinearGradientEffect);\n        this.registerEffectType('radialGradient', RadialGradientEffect);\n        this.registerEffectType('grayscale', GrayscaleEffect);\n        this.registerEffectType('glitch', GlitchEffect);\n        this.registerEffectType('radius', RadiusEffect);\n    }\n    registerShaderType(shType, shClass) {\n        this.shConstructors[shType] = shClass;\n    }\n    registerEffectType(effectType, effectClass) {\n        this.effectConstructors[effectType] = effectClass;\n    }\n    loadShader(shType, props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const ShaderClass = this.shConstructors[shType];\n        if (!ShaderClass) {\n            throw new Error(`Shader type \"${shType}\" is not registered`);\n        }\n        if (shType === 'DynamicShader') {\n            return this.loadDynamicShader(props);\n        }\n        const resolvedProps = ShaderClass.resolveDefaults(props);\n        const cacheKey = ShaderClass.makeCacheKey(resolvedProps) || ShaderClass.name;\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        // @ts-expect-error ShaderClass WILL accept a Renderer\n        const shader = new ShaderClass(this.renderer, props);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader,\n            props: resolvedProps,\n        };\n    }\n    loadDynamicShader(props) {\n        if (!this.renderer) {\n            throw new Error(`Renderer is not been defined`);\n        }\n        const resolvedProps = DynamicShader.resolveDefaults(props, this.effectConstructors);\n        const cacheKey = DynamicShader.makeCacheKey(resolvedProps, this.effectConstructors);\n        if (cacheKey && this.shCache.has(cacheKey)) {\n            return {\n                shader: this.shCache.get(cacheKey),\n                props: resolvedProps,\n            };\n        }\n        const shader = new DynamicShader(this.renderer, props, this.effectConstructors);\n        if (cacheKey) {\n            this.shCache.set(cacheKey, shader);\n        }\n        return {\n            shader: shader,\n            props: resolvedProps,\n        };\n    }\n    useShader(shader) {\n        if (this.attachedShader === shader) {\n            return;\n        }\n        if (this.attachedShader) {\n            this.attachedShader.detach();\n        }\n        shader.attach();\n        this.attachedShader = shader;\n    }\n}\n//# sourceMappingURL=CoreShaderManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreAnimation } from './CoreAnimation.js';\nexport class AnimationManager {\n    activeAnimations = new Set();\n    registerAnimation(animation) {\n        this.activeAnimations.add(animation);\n    }\n    unregisterAnimation(animation) {\n        this.activeAnimations.delete(animation);\n    }\n    update(dt) {\n        this.activeAnimations.forEach((animation) => {\n            animation.update(dt);\n        });\n    }\n}\n//# sourceMappingURL=AnimationManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of an image loaded from a URL\n *\n * @remarks\n * The ImageTexture's {@link ImageTextureProps.src} prop defines the image URL\n * to be downloaded.\n *\n * By default, the texture's alpha values will be premultiplied into its color\n * values which is generally the desired setting before they are sent to the\n * texture's associated {@link Shader}. However, in special cases you may want\n * the Shader to receive straight (non-premultiplied) values. In that case you\n * can disable the default behavior by setting the\n * {@link ImageTextureProps.premultiplyAlpha} prop to `false`.\n */\nexport class ImageTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ImageTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { src, premultiplyAlpha } = this.props;\n        if (!src) {\n            return {\n                data: null,\n            };\n        }\n        if (src instanceof ImageData) {\n            return {\n                data: src,\n                premultiplyAlpha,\n            };\n        }\n        const response = await fetch(src);\n        const blob = await response.blob();\n        return {\n            data: await createImageBitmap(blob, {\n                premultiplyAlpha: premultiplyAlpha ? 'premultiply' : 'none',\n                colorSpaceConversion: 'none',\n                imageOrientation: 'none',\n            }),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ImageTexture.resolveDefaults(props);\n        // ImageTextures sourced by ImageData are non-cacheable\n        if (resolvedProps.src instanceof ImageData) {\n            return false;\n        }\n        return `ImageTexture,${resolvedProps.src},${resolvedProps.premultiplyAlpha}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            src: props.src ?? '',\n            premultiplyAlpha: props.premultiplyAlpha ?? true,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ImageTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of a random grid of greyscale pixels\n *\n * @remarks\n * The width and height of the NoiseTexture are defined by it's\n * {@link NoiseTextureProps.width} and {@link NoiseTextureProps.height}\n * properties. The {@link NoiseTextureProps.cacheId} prop can be varied in order\n * to bypass cache and get newly randomized texture data.\n */\nexport class NoiseTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = NoiseTexture.resolveDefaults(props);\n    }\n    async getTextureData() {\n        const { width, height } = this.props;\n        const size = width * height * 4;\n        const pixelData8 = new Uint8ClampedArray(size);\n        for (let i = 0; i < size; i += 4) {\n            const v = Math.floor(Math.random() * 256);\n            pixelData8[i] = v;\n            pixelData8[i + 1] = v;\n            pixelData8[i + 2] = v;\n            pixelData8[i + 3] = 255;\n        }\n        return {\n            data: new ImageData(pixelData8, width, height),\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = NoiseTexture.resolveDefaults(props);\n        return `NoiseTexture,${resolvedProps.width},${resolvedProps.height},${resolvedProps.cacheId}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            width: props.width ?? 128,\n            height: props.height ?? 128,\n            cacheId: props.cacheId ?? 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=NoiseTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../utils.js';\nimport { ColorTexture } from './textures/ColorTexture.js';\nimport { ImageTexture } from './textures/ImageTexture.js';\nimport { NoiseTexture } from './textures/NoiseTexture.js';\nimport { SubTexture } from './textures/SubTexture.js';\nexport class CoreTextureManager {\n    /**\n     * Amount of used memory defined in pixels\n     */\n    usedMemory = 0;\n    txConstructors = {};\n    textureKeyCache = new Map();\n    textureIdCache = new Map();\n    ctxTextureCache = new WeakMap();\n    textureRefCountMap = new WeakMap();\n    /**\n     * Renderer that this texture manager is associated with\n     *\n     * @remarks\n     * This MUST be set before the texture manager is used. Otherwise errors\n     * will occur when using the texture manager.\n     */\n    renderer;\n    constructor() {\n        // Register default known texture types\n        this.registerTextureType('ImageTexture', ImageTexture);\n        this.registerTextureType('ColorTexture', ColorTexture);\n        this.registerTextureType('NoiseTexture', NoiseTexture);\n        this.registerTextureType('SubTexture', SubTexture);\n    }\n    registerTextureType(textureType, textureClass) {\n        this.txConstructors[textureType] = textureClass;\n    }\n    loadTexture(textureType, props, options = null) {\n        const TextureClass = this.txConstructors[textureType];\n        if (!TextureClass) {\n            throw new Error(`Texture type \"${textureType}\" is not registered`);\n        }\n        let texture;\n        // If an ID is specified, try to get the texture from the ID cache first\n        if (options?.id !== undefined && this.textureIdCache.has(options.id)) {\n            // console.log('Getting texture by texture desc ID', options.id);\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            texture = this.textureIdCache.get(options.id);\n        }\n        // If the texture is not found in the ID cache, try to get it from the key cache\n        if (!texture) {\n            const descId = options?.id;\n            const cacheKey = options?.cacheKey ?? TextureClass.makeCacheKey(props);\n            if (cacheKey && this.textureKeyCache.has(cacheKey)) {\n                // console.log('Getting texture by cache key', cacheKey);\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                texture = this.textureKeyCache.get(cacheKey);\n            }\n            else {\n                // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n                texture = new TextureClass(this, props);\n            }\n            if (descId) {\n                this.addTextureIdToCache(descId, cacheKey, texture);\n            }\n        }\n        if (options?.preload) {\n            const ctxTx = this.getCtxTexture(texture);\n            ctxTx.load();\n        }\n        return texture;\n    }\n    /**\n     * Add a `Texture` to the texture cache by its texture desc ID and cache key\n     *\n     * @remarks\n     * This is used internally by the `CoreTextureManager` to cache textures\n     * when they are created.\n     *\n     * It handles updating the texture ID cache, texture key cache, and texture\n     * reference count map.\n     *\n     * @param textureDescId\n     * @param cacheKey\n     * @param texture\n     */\n    addTextureIdToCache(textureDescId, cacheKey, texture) {\n        const { textureIdCache, textureRefCountMap } = this;\n        textureIdCache.set(textureDescId, texture);\n        if (textureRefCountMap.has(texture)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            textureRefCountMap.get(texture).count++;\n        }\n        else {\n            textureRefCountMap.set(texture, { cacheKey, count: 1 });\n            if (cacheKey) {\n                this.textureKeyCache.set(cacheKey, texture);\n            }\n        }\n    }\n    /**\n     * Remove a `Texture` from the texture cache by its texture desc ID\n     *\n     * @remarks\n     * This is called externally by when we know (at least reasonably well) that\n     * the `TextureRef` in the Main API space has been is no longer used. This\n     * allows us to remove the `Texture` from the Usage Cache so that it can be\n     * garbage collected as well.\n     *\n     * @param textureDescId\n     */\n    removeTextureIdFromCache(textureDescId) {\n        const { textureIdCache, textureRefCountMap } = this;\n        const texture = textureIdCache.get(textureDescId);\n        if (!texture) {\n            // Sometimes a texture is removed from the cache before it ever gets\n            // added to the cache. This is fine and not an error.\n            return;\n        }\n        textureIdCache.delete(textureDescId);\n        if (textureRefCountMap.has(texture)) {\n            const refCountObj = textureRefCountMap.get(texture);\n            assertTruthy(refCountObj);\n            refCountObj.count--;\n            if (refCountObj.count === 0) {\n                textureRefCountMap.delete(texture);\n                // If the texture is not referenced anywhere else, remove it from the key cache\n                // as well.\n                // This should allow the `Texture` instance to be garbage collected.\n                if (refCountObj.cacheKey) {\n                    this.textureKeyCache.delete(refCountObj.cacheKey);\n                }\n            }\n        }\n    }\n    /**\n     * Get an object containing debug information about the texture manager.\n     *\n     * @returns\n     */\n    getDebugInfo() {\n        // const textureSet = new Set<Texture>();\n        // for (const texture of this.textureIdCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // for (const texture of this.textureKeyCache.values()) {\n        //   textureSet.add(texture);\n        // }\n        // TODO: Output number of bytes used by textures\n        return {\n            keyCacheSize: this.textureKeyCache.size,\n            idCacheSize: this.textureIdCache.size,\n        };\n    }\n    /**\n     * Get a CoreContextTexture for the given Texture source.\n     *\n     * @remarks\n     * If the texture source already has an allocated CoreContextTexture, it will be\n     * returned from the cache. Otherwise, a new CoreContextTexture will be created\n     * and cached.\n     *\n     * ContextTextures are stored in a WeakMap, so they will be garbage collected\n     * when the Texture source is no longer referenced.\n     *\n     * @param textureSource\n     * @returns\n     */\n    getCtxTexture(textureSource) {\n        if (this.ctxTextureCache.has(textureSource)) {\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.ctxTextureCache.get(textureSource);\n        }\n        const texture = this.renderer.createCtxTexture(textureSource);\n        this.ctxTextureCache.set(textureSource, texture);\n        return texture;\n    }\n}\n//# sourceMappingURL=CoreTextureManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SdfTrFontFace } from './font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { WebTrFontFace } from './font-face-types/WebTrFontFace.js';\nexport class TrFontManager {\n    textRenderers;\n    constructor(textRenderers) {\n        this.textRenderers = textRenderers;\n        // Intentionally left blank\n    }\n    addFontFace(font) {\n        // All the font face to all of the text renderers that support it\n        for (const trId in this.textRenderers) {\n            const tr = this.textRenderers[trId];\n            if (tr && tr.isFontFaceSupported(font)) {\n                tr.addFontFace(font);\n            }\n        }\n    }\n    /**\n     * Utility method to resolve a single font face from a list of prioritized family maps based on\n     * a set of font properties.\n     *\n     * @remarks\n     * These are to be used by a text renderer to resolve a font face if needed.\n     *\n     * @param familyMapsByPriority\n     * @param props\n     * @returns\n     */\n    static resolveFontFace(familyMapsByPriority, props) {\n        const closeFaces = [];\n        const exactMatch = familyMapsByPriority.reduce((prev, fontFamiles) => {\n            if (prev) {\n                return prev;\n            }\n            const fontFaces = fontFamiles[props.fontFamily];\n            if (!fontFaces) {\n                return undefined;\n            }\n            const fontFacesCopy = new Set(fontFaces);\n            // Remove any font faces that don't match the style exactly\n            // TODO: In the future we may enhance this to find the best match\n            // based on font weight, style, etc.\n            // See https://www.w3.org/TR/2018/REC-css-fonts-3-20180920/#font-matching-algorithm\n            for (const fontFace of fontFacesCopy) {\n                if (fontFace.descriptors.stretch !== props.fontStretch ||\n                    fontFace.descriptors.style !== props.fontStyle ||\n                    fontFace.descriptors.weight !== props.fontWeight) {\n                    fontFacesCopy.delete(fontFace);\n                }\n            }\n            // Return the first font face that matches the style exactly\n            return fontFacesCopy.values().next().value;\n        }, undefined);\n        return exactMatch || closeFaces[0];\n    }\n}\n//# sourceMappingURL=TrFontManager.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nconst trPropSetterDefaults = {\n    x: (state, value) => {\n        state.props.x = value;\n    },\n    y: (state, value) => {\n        state.props.y = value;\n    },\n    width: (state, value) => {\n        state.props.width = value;\n    },\n    height: (state, value) => {\n        state.props.height = value;\n    },\n    color: (state, value) => {\n        state.props.color = value;\n    },\n    alpha: (state, value) => {\n        state.props.alpha = value;\n    },\n    zIndex: (state, value) => {\n        state.props.zIndex = value;\n    },\n    fontFamily: (state, value) => {\n        state.props.fontFamily = value;\n    },\n    fontWeight: (state, value) => {\n        state.props.fontWeight = value;\n    },\n    fontStyle: (state, value) => {\n        state.props.fontStyle = value;\n    },\n    fontStretch: (state, value) => {\n        state.props.fontStretch = value;\n    },\n    fontSize: (state, value) => {\n        state.props.fontSize = value;\n    },\n    text: (state, value) => {\n        state.props.text = value;\n    },\n    textAlign: (state, value) => {\n        state.props.textAlign = value;\n    },\n    contain: (state, value) => {\n        state.props.contain = value;\n    },\n    offsetY: (state, value) => {\n        state.props.offsetY = value;\n    },\n    scrollable: (state, value) => {\n        state.props.scrollable = value;\n    },\n    scrollY: (state, value) => {\n        state.props.scrollY = value;\n    },\n    letterSpacing: (state, value) => {\n        state.props.letterSpacing = value;\n    },\n    debug: (state, value) => {\n        state.props.debug = value;\n    },\n};\nexport class TextRenderer {\n    stage;\n    set;\n    constructor(stage) {\n        this.stage = stage;\n        this.set = Object.freeze({\n            ...trPropSetterDefaults,\n            ...this.getPropertySetters(),\n        });\n    }\n    setStatus(state, status, error) {\n        // Don't emit the same status twice\n        if (state.status === status) {\n            return;\n        }\n        state.status = status;\n        state.emitter.emit(status, error);\n    }\n}\n//# sourceMappingURL=TextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Number of floating point numbers that represent a single glyph in the SDF vertex buffer.\n *\n * @remarks\n * The vertex buffer contains:\n *  - 6 vertex positions\n *  - 6 texture coordinates\n *  - = 12 positions/coordinates per glyph\n *\n * Each vertex position and texture coordinate consist of 2 floating point numbers (x/y).\n * So there are 12 * 2 = 24 floating point numbers that make up a single glyph.\n */\nexport const FLOATS_PER_GLYPH = 24;\n//# sourceMappingURL=constants.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Gets the start conditions for the layout loop.\n *\n * @remarks\n * Returns `undefined` if the layout loop should not be run.\n *\n * @param fontSize\n * @param fontSizeRatio\n * @param sdfLineHeight\n * @param renderWindow\n * @param lineCache\n * @param textH\n * @returns\n */\nexport function getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH) {\n    // State variables\n    let startLineIndex = 0;\n    if (renderWindow) {\n        startLineIndex = Math.min(Math.max(Math.floor(renderWindow.y1 / fontSize), 0), lineCache.length);\n    }\n    // TODO: Possibly break out startX / startY into a separate function\n    // TODO: (fontSize / 6.4286 / fontSizeRatio) Adding this to the startY helps the text line up better with Canvas rendered text\n    const startX = 0;\n    const startY = offsetY / fontSizeRatio + startLineIndex * sdfLineHeight; // TODO: Figure out what determines the initial y offset of text.\n    // Don't attempt to render anything if we know we're starting past the established end of the text\n    if (textH && startY >= textH / fontSizeRatio) {\n        return;\n    }\n    return {\n        x: startX,\n        y: startY,\n        lineIndex: startLineIndex,\n    };\n}\n//# sourceMappingURL=getStartConditions.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * A wrapper Generator class that makes a generator peekable.\n */\n// eslint-disable-next-line @typescript-eslint/no-explicit-any\nexport class PeekableIterator {\n    iterator;\n    peekBuffer = [];\n    _lastIndex;\n    constructor(iterator, indexBase = 0) {\n        this.iterator = iterator;\n        this.iterator = iterator;\n        this._lastIndex = indexBase - 1;\n        this.peekBuffer = [];\n    }\n    next() {\n        const nextResult = this.peekBuffer.length > 0\n            ? // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                this.peekBuffer.pop()\n            : this.iterator.next();\n        if (nextResult.done) {\n            this._lastIndex = -1;\n        }\n        else {\n            this._lastIndex++;\n        }\n        return nextResult;\n    }\n    peek() {\n        if (this.peekBuffer.length > 0) {\n            // We know that the buffer is not empty, so we can safely use the\n            // non-null assertion operator\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            return this.peekBuffer[0];\n        }\n        const result = this.iterator.next();\n        this.peekBuffer.push(result);\n        return result;\n    }\n    get lastIndex() {\n        return this._lastIndex;\n    }\n}\n//# sourceMappingURL=PeekableGenerator.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// Reversible Generator Wrapper Class\n/**\n * Generator function that yields each Unicode code point in the given string.\n */\nexport function* getUnicodeCodepoints(text, start = 0) {\n    let i = start;\n    while (i < text.length) {\n        const codePoint = text.codePointAt(i);\n        if (codePoint === undefined) {\n            throw new Error('Invalid Unicode code point');\n        }\n        yield codePoint;\n        i += codePoint <= 0xffff ? 1 : 2;\n    }\n}\n//# sourceMappingURL=getUnicodeCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\n/**\n * Measures a single-line of text width ignoring any unmapped glyphs including line breaks\n *\n * @param text\n * @param shaperProps\n * @param shaper\n * @returns\n */\nexport function measureText(text, shaperProps, shaper) {\n    const glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, 0), 0));\n    let width = 0;\n    for (const glyph of glyphs) {\n        if (glyph.mapped) {\n            width += glyph.xAdvance;\n        }\n    }\n    return width;\n}\n//# sourceMappingURL=measureText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../../../utils.js';\nimport { PeekableIterator } from './PeekableGenerator.js';\nimport { FLOATS_PER_GLYPH } from './constants.js';\nimport { getUnicodeCodepoints } from './getUnicodeCodepoints.js';\nimport { measureText } from './measureText.js';\nexport function layoutText(curLineIndex, startX, startY, text, textAlign, width, height, fontSize, letterSpacing, \n/**\n * Mutated\n */\nvertexBuffer, contain, \n/**\n * Mutated\n */\nlineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable) {\n    assertTruthy(trFontFace, 'Font face must be loaded');\n    assertTruthy(trFontFace.loaded, 'Font face must be loaded');\n    assertTruthy(trFontFace.data, 'Font face must be loaded');\n    assertTruthy(trFontFace.shaper, 'Font face must be loaded');\n    // Regardless of fontSize (or other scaling properties), we layout the vertices of each glyph\n    // using the fixed coordinate space determined by font size used to produce the atlas.\n    // Scaling for display is handled by shader uniforms inexpensively.\n    // So we have:\n    //  - vertex space: the space in which the vertices of each glyph are laid out\n    //  - screen space: the screen pixel space\n    // Input properties such as x, y, w, fontSize, letterSpacing, etc. are all expressed in screen space.\n    // We convert these to the vertex space by dividing them the `fontSizeRatio` factor.\n    /**\n     * `lineHeight` in vertex coordinates\n     */\n    const vertexLineHeight = trFontFace.data.info.size;\n    /**\n     * See above\n     */\n    const fontSizeRatio = fontSize / vertexLineHeight;\n    /**\n     * `w` in vertex coordinates\n     */\n    const vertexW = width / fontSizeRatio;\n    /**\n     * `letterSpacing` in vertex coordinates\n     */\n    const vertexLSpacing = letterSpacing / fontSizeRatio;\n    const startingLineCacheEntry = lineCache[curLineIndex];\n    const startingCodepointIndex = startingLineCacheEntry?.codepointIndex || 0;\n    const startingMaxX = startingLineCacheEntry?.maxX || 0;\n    const startingMaxY = startingLineCacheEntry?.maxY || 0;\n    let maxX = startingMaxX;\n    let maxY = startingMaxY;\n    let curX = startX;\n    let curY = startY;\n    let bufferOffset = 0;\n    /**\n     * Buffer offset to last word boundry. This is -1 when we aren't in a word boundry.\n     */\n    const lastWord = {\n        codepointIndex: -1,\n        bufferOffset: -1,\n        xStart: -1,\n    };\n    // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n    const shaper = trFontFace.shaper;\n    const shaperProps = {\n        letterSpacing: vertexLSpacing,\n    };\n    // Get glyphs\n    let glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, startingCodepointIndex), startingCodepointIndex));\n    let glyphResult;\n    let curLineBufferStart = -1;\n    const bufferLineInfos = [];\n    const truncateSeq = '...';\n    const vertexTruncateHeight = height / fontSizeRatio;\n    const truncateSeqVertexWidth = measureText(truncateSeq, shaperProps, shaper);\n    // Line-by-line layout\n    let moreLines = true;\n    while (moreLines) {\n        const nextLineWillFit = contain !== 'both' ||\n            scrollable ||\n            curY + vertexLineHeight + vertexLineHeight <= vertexTruncateHeight;\n        const lineVertexW = nextLineWillFit\n            ? vertexW\n            : vertexW - truncateSeqVertexWidth;\n        /**\n         * Vertex X position to the beginning of the last word boundary. This becomes -1 when we start traversing a word.\n         */\n        let xStartLastWordBoundary = 0;\n        // Layout glyphs in this line\n        // Any break statements in this while loop will trigger a line break\n        while ((glyphResult = glyphs.next()) && !glyphResult.done) {\n            const glyph = glyphResult.value;\n            if (curLineIndex === lineCache.length) {\n                lineCache.push({\n                    codepointIndex: glyph.cluster,\n                    maxY,\n                    maxX,\n                });\n            }\n            else if (curLineIndex > lineCache.length) {\n                throw new Error('Unexpected lineCache length');\n            }\n            // If we encounter a word boundary (white space or newline) we invalidate\n            // the lastWord and set the xStartLastWordBoundary if we haven't already.\n            if (glyph.codepoint === 32 || glyph.codepoint === 10) {\n                if (lastWord.codepointIndex !== -1) {\n                    lastWord.codepointIndex = -1;\n                    xStartLastWordBoundary = curX;\n                }\n            }\n            else if (lastWord.codepointIndex === -1) {\n                lastWord.codepointIndex = glyph.cluster;\n                lastWord.bufferOffset = bufferOffset;\n                lastWord.xStart = xStartLastWordBoundary;\n            }\n            if (glyph.mapped) {\n                // Mapped glyph\n                const charEndX = curX + glyph.xOffset + glyph.width;\n                // Word wrap check\n                if (\n                // We are containing the text\n                contain !== 'none' &&\n                    // The current glyph reaches outside the contained width\n                    charEndX >= lineVertexW &&\n                    // There is a last word that we can break to the next line\n                    lastWord.codepointIndex !== -1 &&\n                    // We have advanced at least one character since the last word started\n                    lastWord.codepointIndex < glyph.cluster &&\n                    // Prevents infinite loop when a single word is longer than the width\n                    lastWord.xStart > 0) {\n                    // The current word is about to go off the edge of the container width\n                    // Reinitialize the iterator starting at the last word\n                    // and proceeding to the next line\n                    if (nextLineWillFit) {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(text, lastWord.codepointIndex), lastWord.codepointIndex));\n                        bufferOffset = lastWord.bufferOffset;\n                        break;\n                    }\n                    else {\n                        glyphs = shaper.shapeText(shaperProps, new PeekableIterator(getUnicodeCodepoints(truncateSeq, 0), 0));\n                        curX = lastWord.xStart;\n                        bufferOffset = lastWord.bufferOffset;\n                    }\n                }\n                else {\n                    // This glyph fits, so we can add it to the buffer\n                    const quadX = curX + glyph.xOffset;\n                    const quadY = curY + glyph.yOffset;\n                    const lineIsBelowWindowTop = renderWindow\n                        ? curY + vertexLineHeight >= renderWindow.y1 / fontSizeRatio\n                        : true;\n                    const lineIsAboveWindowBottom = renderWindow\n                        ? curY <= renderWindow.y2 / fontSizeRatio\n                        : true;\n                    // Only add to buffer for rendering if the line is within the render window\n                    if (lineIsBelowWindowTop && lineIsAboveWindowBottom) {\n                        if (curLineBufferStart === -1) {\n                            curLineBufferStart = bufferOffset;\n                        }\n                        const atlasEntry = trFontFace.getAtlasEntry(glyph.glyphId);\n                        // Add texture coordinates\n                        const u = atlasEntry.x / trFontFace.data.common.scaleW;\n                        const v = atlasEntry.y / trFontFace.data.common.scaleH;\n                        const uvWidth = atlasEntry.width / trFontFace.data.common.scaleW;\n                        const uvHeight = atlasEntry.height / trFontFace.data.common.scaleH;\n                        // TODO: (Performance) We can optimize this by using ELEMENT_ARRAY_BUFFER\n                        // eliminating the need to duplicate vertices\n                        // Top-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Top-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v;\n                        // Bottom-left\n                        vertexBuffer[bufferOffset++] = quadX;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                        // Bottom-right\n                        vertexBuffer[bufferOffset++] = quadX + glyph.width;\n                        vertexBuffer[bufferOffset++] = quadY + glyph.height;\n                        vertexBuffer[bufferOffset++] = u + uvWidth;\n                        vertexBuffer[bufferOffset++] = v + uvHeight;\n                    }\n                    maxY = Math.max(maxY, quadY + glyph.height);\n                    curX += glyph.xAdvance;\n                    maxX = Math.max(maxX, curX);\n                }\n            }\n            else {\n                // Unmapped character\n                // Handle newlines\n                if (glyph.codepoint === 10) {\n                    break;\n                }\n            }\n        }\n        // Prepare for the next line...\n        if (curLineBufferStart !== -1) {\n            bufferLineInfos.push({\n                bufferStart: curLineBufferStart,\n                bufferEnd: bufferOffset,\n            });\n            curLineBufferStart = -1;\n        }\n        curX = 0;\n        curY += vertexLineHeight;\n        curLineIndex++;\n        lastWord.codepointIndex = -1;\n        xStartLastWordBoundary = 0;\n        // Figure out if there are any more lines to render...\n        if (!forceFullLayoutCalc &&\n            contain === 'both' &&\n            renderWindow &&\n            curY > renderWindow.y2 / fontSizeRatio) {\n            // Stop layout calculation early (for performance purposes) if:\n            // - We're not forcing a full layout calculation (for width/height calculation)\n            // - ...and we're containing the text vertically+horizontally (contain === 'both')\n            // - ...and we have a render window\n            // - ...and the next line is below the bottom of the render window\n            moreLines = false;\n        }\n        else if (glyphResult && glyphResult.done) {\n            // If we've reached the end of the text, we know we're done\n            moreLines = false;\n        }\n        else if (contain === 'both' && !scrollable && !nextLineWillFit) {\n            // If we're contained vertically+horizontally (contain === 'both')\n            // but not scrollable and the next line won't fit, we're done.\n            moreLines = false;\n        }\n    }\n    // Use textAlign to determine if we need to adjust the x position of the text\n    // in the buffer line by line\n    if (textAlign === 'center') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            // - 4 = the x position of a rightmost vertex\n            const lineWidth = \n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = (vertexTextW - lineWidth) / 2;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    else if (textAlign === 'right') {\n        const vertexTextW = contain === 'none' ? maxX : vertexW;\n        for (let i = 0; i < bufferLineInfos.length; i++) {\n            const line = bufferLineInfos[i];\n            const lineWidth = line.bufferEnd === line.bufferStart\n                ? 0\n                : // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                    vertexBuffer[line.bufferEnd - 4] - vertexBuffer[line.bufferStart];\n            const xOffset = vertexTextW - lineWidth;\n            for (let j = line.bufferStart; j < line.bufferEnd; j += 4) {\n                vertexBuffer[j] += xOffset;\n            }\n        }\n    }\n    assertTruthy(glyphResult);\n    return {\n        bufferNumFloats: bufferOffset,\n        bufferNumQuads: bufferOffset / 16,\n        layoutNumCharacters: glyphResult.done\n            ? text.length - startingCodepointIndex\n            : glyphResult.value.cluster - startingCodepointIndex + 1,\n        fullyProcessed: !!glyphResult.done,\n        maxX,\n        maxY,\n    };\n}\n//# sourceMappingURL=layoutText.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { isBoundPositive } from '../../../../lib/utils.js';\n/**\n * Create a render window from the given parameters.\n *\n * @remarks\n * The render window is a rectangle that defines the area of the text that\n * should be rendered. It is used to skip rendering parts of the text that\n * are outside of the render window. The render window is relative to the\n * text's top left corner of the overrall text.\n *\n * @param x The x coordinate of the text element's top left corner relative to the screen.\n * @param y The y coordinate of the text element's top left corner relative to the screen.\n * @param scrollY The amount of pixels to scroll the text vertically.\n * @param lineHeight The height of a single line of text.\n * @param numExtraLines The number of extra lines to render above and below the visible window.\n * @param visibleWindow The visible window of the text element relative to the screen\n * @returns\n */\nexport function makeRenderWindow(x, y, scrollY, lineHeight, numExtraLines, visibleWindow) {\n    const bufferMargin = lineHeight * numExtraLines;\n    const x1 = visibleWindow.x1 - x;\n    const y1 = visibleWindow.y1 - y;\n    return isBoundPositive(visibleWindow)\n        ? {\n            x1: x1,\n            y1: y1 + scrollY - bufferMargin,\n            x2: x1 + (visibleWindow.x2 - visibleWindow.x1),\n            y2: y1 + scrollY + (visibleWindow.y2 - visibleWindow.y1) + bufferMargin,\n        }\n        : {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n        };\n}\n//# sourceMappingURL=makeRenderWindow.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import { Colors } from '../../../Colors.js';\n// import type { Renderer } from '../../../Renderer.js';\nimport { intersectBound } from '../../../lib/utils.js';\nimport { TextRenderer, } from '../TextRenderer.js';\nimport { SdfTrFontFace } from '../../font-face-types/SdfTrFontFace/SdfTrFontFace.js';\nimport { FLOATS_PER_GLYPH } from './internal/constants.js';\nimport { getStartConditions } from './internal/getStartConditions.js';\nimport { layoutText } from './internal/layoutText.js';\nimport { makeRenderWindow } from './internal/makeRenderWindow.js';\nimport { TrFontManager } from '../../TrFontManager.js';\nimport { assertTruthy, mergeColorAlpha } from '../../../../utils.js';\nimport { WebGlCoreRenderOp } from '../../../renderers/webgl/WebGlCoreRenderOp.js';\nimport { BufferCollection } from '../../../renderers/webgl/internal/BufferCollection.js';\nimport { EventEmitter } from '../../../../common/EventEmitter.js';\n/**\n * Singleton class for rendering text using signed distance fields.\n *\n * @remarks\n * SdfTextRenderer supports both single-channel and multi-channel signed distance fields.\n */\nexport class SdfTextRenderer extends TextRenderer {\n    /**\n     * Map of font family names to a set of font faces.\n     */\n    ssdfFontFamilies = {};\n    msdfFontFamilies = {};\n    sdfShader;\n    constructor(stage) {\n        super(stage);\n        this.sdfShader = this.stage.shManager.loadShader('SdfShader').shader;\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.trFontFace = undefined;\n                this.invalidateCache(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                this.invalidateCache(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.invalidateCache(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.invalidateCache(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n            },\n            alpha: (state, value) => {\n                state.props.alpha = value;\n            },\n            x: (state, value) => {\n                state.props.x = value;\n            },\n            y: (state, value) => {\n                state.props.y = value;\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.invalidateCache(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.invalidateCache(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.invalidateCache(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.invalidateCache(state);\n            },\n            scrollable: (state, value) => {\n                state.props.scrollable = value;\n                this.invalidateCache(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.invalidateCache(state);\n            },\n            debug: (state, value) => {\n                state.props.debug = value;\n            },\n        };\n    }\n    canRenderFont(props) {\n        // TODO: Support matching on font stretch, weight and style (if/when needed)\n        // For now we just match on the font family name\n        // '$$SDF_FAILURE_TEST$$' is used to test the 'failure' event coming from text\n        const { fontFamily } = props;\n        return (fontFamily in this.ssdfFontFamilies ||\n            fontFamily in this.msdfFontFamilies ||\n            fontFamily === '$$SDF_FAILURE_TEST$$');\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof SdfTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an SDF font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof SdfTrFontFace);\n        const familyName = fontFace.fontFamily;\n        const fontFamiles = fontFace.type === 'ssdf'\n            ? this.ssdfFontFamilies\n            : fontFace.type === 'msdf'\n                ? this.msdfFontFamilies\n                : undefined;\n        if (!fontFamiles) {\n            console.warn(`Invalid font face type: ${fontFace.type}`);\n            return;\n        }\n        let faceSet = fontFamiles[familyName];\n        if (!faceSet) {\n            faceSet = new Set();\n            fontFamiles[familyName] = faceSet;\n        }\n        faceSet.add(fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            emitter: new EventEmitter(),\n            lineCache: [],\n            forceFullLayoutCalc: false,\n            renderWindow: undefined,\n            bufferNumFloats: 0,\n            bufferNumQuads: 0,\n            vertexBuffer: undefined,\n            webGlBuffers: null,\n            bufferUploaded: false,\n            textH: undefined,\n            textW: undefined,\n            distanceRange: 0,\n            trFontFace: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                drawCount: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        const updateStartTime = performance.now();\n        let { trFontFace } = state;\n        const { textH, lineCache, debugData, forceFullLayoutCalc } = state;\n        debugData.updateCount++;\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        if (!trFontFace) {\n            trFontFace = this.resolveFontFace(state.props);\n            state.trFontFace = trFontFace;\n            if (!trFontFace) {\n                const msg = `SdfTextRenderer: Could not resolve font face for family: '${state.props.fontFamily}'`;\n                console.error(msg);\n                this.setStatus(state, 'failed', new Error(msg));\n                return;\n            }\n        }\n        // If the font hasn't been loaded yet, don't do anything\n        if (!trFontFace.loaded) {\n            trFontFace.on('loaded', function loadedHandler() {\n                state.emitter.emit('fontLoaded', {});\n                trFontFace?.off('fontLoaded', loadedHandler);\n            });\n            return;\n        }\n        // If the font is loaded then so should the data\n        assertTruthy(trFontFace.data, 'Font face data should be loaded');\n        const { text, fontSize, x, y, contain, width, height, scrollable } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        let { renderWindow } = state;\n        // Needed in renderWindow calculation\n        const sdfLineHeight = trFontFace.data.info.size;\n        /**\n         * Divide screen space points by this to get the SDF space points\n         * Mulitple SDF space points by this to get screen space points\n         */\n        const fontSizeRatio = fontSize / sdfLineHeight;\n        state.distanceRange =\n            fontSizeRatio * trFontFace.data.distanceField.distanceRange;\n        // Allocate buffers if needed\n        const neededLength = text.length * FLOATS_PER_GLYPH;\n        let vertexBuffer = state.vertexBuffer;\n        if (!vertexBuffer || vertexBuffer.length < neededLength) {\n            vertexBuffer = new Float32Array(neededLength * 2);\n        }\n        // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n        const rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n        const elementBounds = {\n            x1: x,\n            y1: y,\n            x2: contain !== 'none' ? x + width : Infinity,\n            y2: contain === 'both' ? y + height : Infinity,\n        };\n        /**\n         * Area that is visible on the screen.\n         */\n        const visibleWindow = intersectBound(rendererBounds, elementBounds);\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        // (Only if there's an established renderWindow and we're not suppressing early exit)\n        if (!forceFullLayoutCalc && renderWindow) {\n            if (x + renderWindow.x1 <= visibleWindow.x1 &&\n                x + renderWindow.x2 >= visibleWindow.x2 &&\n                y - scrollY + renderWindow.y1 <= visibleWindow.y1 &&\n                y - scrollY + renderWindow.y2 >= visibleWindow.y2)\n                return;\n            // Otherwise clear the renderWindow so it can be redone\n            state.renderWindow = renderWindow = undefined;\n        }\n        const { offsetY, textAlign } = state.props;\n        // Create a new renderWindow if needed\n        if (!renderWindow) {\n            const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n            const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / sdfLineHeight);\n            renderWindow = makeRenderWindow(x, y, scrollY, sdfLineHeight, maxLinesPerCanvasPage, visibleWindow);\n        }\n        const start = getStartConditions(fontSize, offsetY, fontSizeRatio, sdfLineHeight, renderWindow, lineCache, textH);\n        if (!start) {\n            // Nothing to render, return early, but still mark as loaded (since the text is just scrolled\n            // out of view)\n            this.setStatus(state, 'loaded');\n            return;\n        }\n        const { letterSpacing } = state.props;\n        const out2 = layoutText(start.lineIndex, start.x, start.y, text, textAlign, width, height, fontSize, letterSpacing, vertexBuffer, contain, lineCache, renderWindow, trFontFace, forceFullLayoutCalc, scrollable);\n        state.bufferUploaded = false;\n        state.bufferNumFloats = out2.bufferNumFloats;\n        state.bufferNumQuads = out2.bufferNumQuads;\n        state.vertexBuffer = vertexBuffer;\n        state.renderWindow = renderWindow;\n        debugData.lastLayoutNumCharacters = out2.layoutNumCharacters;\n        debugData.bufferSize = vertexBuffer.byteLength;\n        // If we didn't exit early, we know we have completely computed w/h\n        if (out2.fullyProcessed) {\n            state.textW = out2.maxX * fontSizeRatio;\n            state.textH = out2.maxY * fontSizeRatio;\n        }\n        // if (state.props.debug.printLayoutTime) {\n        //   debugData.layoutSum += performance.now() - updateStartTime;\n        //   debugData.layoutCount++;\n        // }\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, clippingRect) {\n        if (!state.vertexBuffer) {\n            // Nothing to draw\n            return;\n        }\n        const drawStartTime = performance.now();\n        const { sdfShader } = this;\n        const { renderer } = this.stage;\n        const { appWidth, appHeight } = this.stage.options;\n        const { fontSize, color, alpha, x, y, contain, width, height, scrollable, zIndex, debug, } = state.props;\n        // scrollY only has an effect when contain === 'both' and scrollable === true\n        const scrollY = contain === 'both' && scrollable ? state.props.scrollY : 0;\n        const { textW = 0, textH = 0, distanceRange, vertexBuffer, bufferNumFloats, bufferUploaded, renderWindow, debugData, trFontFace, } = state;\n        let { webGlBuffers } = state;\n        if (!webGlBuffers) {\n            const gl = renderer.gl;\n            const stride = 4 * Float32Array.BYTES_PER_ELEMENT;\n            const webGlBuffer = gl.createBuffer();\n            assertTruthy(webGlBuffer);\n            state.webGlBuffers = new BufferCollection([\n                {\n                    buffer: webGlBuffer,\n                    attributes: {\n                        a_position: {\n                            name: 'a_position',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 0, // start at the beginning of the buffer\n                        },\n                        a_textureCoordinate: {\n                            name: 'a_textureCoordinate',\n                            size: 2,\n                            type: gl.FLOAT,\n                            normalized: false,\n                            stride,\n                            offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                        },\n                    },\n                },\n            ]);\n            state.bufferUploaded = false;\n            assertTruthy(state.webGlBuffers);\n            webGlBuffers = state.webGlBuffers;\n        }\n        if (!bufferUploaded) {\n            const gl = renderer.gl;\n            const buffer = webGlBuffers?.getBuffer('a_textureCoordinate') ?? null;\n            gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n            gl.bufferData(gl.ARRAY_BUFFER, vertexBuffer, gl.STATIC_DRAW);\n            state.bufferUploaded = true;\n        }\n        assertTruthy(trFontFace);\n        const renderOp = new WebGlCoreRenderOp(renderer.gl, renderer.options, webGlBuffers, this.sdfShader, {\n            // IMPORTANT: The SDF Shader expects the color NOT to be premultiplied\n            // for the best blending results. Which is why we use `mergeColorAlpha`\n            // instead of `mergeColorAlphaPremultiplied` here.\n            color: mergeColorAlpha(color, alpha),\n            size: fontSize / (trFontFace.data?.info.size || 0),\n            offset: [x, y - scrollY],\n            distanceRange,\n            debug: debug.sdfShaderDebug,\n        }, alpha, clippingRect, { height: textH, width: textW }, 0, zIndex);\n        const texture = state.trFontFace?.texture;\n        assertTruthy(texture);\n        const ctxTexture = this.stage.txManager.getCtxTexture(texture);\n        renderOp.addTexture(ctxTexture);\n        renderOp.length = state.bufferNumFloats;\n        renderOp.numQuads = state.bufferNumQuads;\n        renderer.addRenderable(renderOp);\n        // const elementRect = {\n        //   x: x,\n        //   y: y,\n        //   w: contain !== 'none' ? width : textW,\n        //   h: contain === 'both' ? height : textH,\n        // };\n        // const visibleRect = intersectRect(\n        //   {\n        //     x: 0,\n        //     y: 0,\n        //     w: renderer.w,\n        //     h: renderer.h,\n        //   },\n        //   elementRect,\n        // );\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // Draw the arrays\n        // gl.drawArrays(\n        //   gl.TRIANGLES, // Primitive type\n        //   0,\n        //   bufferNumVertices, // Number of verticies\n        // );\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n        // if (debug.printLayoutTime) {\n        //   debugData.drawSum += performance.now() - drawStartTime;\n        //   debugData.drawCount++;\n        // }\n    }\n    //#endregion Overrides\n    resolveFontFace(props) {\n        return TrFontManager.resolveFontFace([this.msdfFontFamilies, this.ssdfFontFamilies], props);\n    }\n    /**\n     * Invalidate the cache stored in the state. This will cause the text to be\n     * re-layed out on the next update.\n     *\n     * @param state\n     */\n    invalidateCache(state) {\n        state.renderWindow = undefined;\n        state.textH = undefined;\n        state.textW = undefined;\n        state.lineCache = [];\n        this.setStatus(state, 'loading');\n    }\n}\n//# sourceMappingURL=SdfTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { getRgbaString } from '../../lib/utils.js';\nconst MAX_TEXTURE_DIMENSION = 2048;\nexport class LightningTextTextureRenderer {\n    _canvas;\n    _context;\n    _settings;\n    renderInfo;\n    constructor(canvas, context) {\n        this._canvas = canvas;\n        this._context = context;\n        this._settings = this.mergeDefaults({});\n    }\n    set settings(v) {\n        this._settings = this.mergeDefaults(v);\n    }\n    get settings() {\n        return this._settings;\n    }\n    getPrecision() {\n        return this._settings.precision;\n    }\n    setFontProperties() {\n        this._context.font = this._getFontSetting();\n        this._context.textBaseline = this._settings.textBaseline;\n    }\n    _getFontSetting() {\n        const ff = [this._settings.fontFace];\n        const ffs = [];\n        for (let i = 0, n = ff.length; i < n; i++) {\n            if (ff[i] === 'serif' || ff[i] === 'sans-serif') {\n                ffs.push(ff[i]);\n            }\n            else {\n                ffs.push(`\"${ff[i]}\"`);\n            }\n        }\n        return `${this._settings.fontStyle} ${this._settings.fontSize * this.getPrecision()}px ${ffs.join(',')}`;\n    }\n    _load() {\n        if (true && document.fonts) {\n            const fontSetting = this._getFontSetting();\n            try {\n                if (!document.fonts.check(fontSetting, this._settings.text)) {\n                    // Use a promise that waits for loading.\n                    return document.fonts\n                        .load(fontSetting, this._settings.text)\n                        .catch((err) => {\n                        // Just load the fallback font.\n                        console.warn('[Lightning] Font load error', err, fontSetting);\n                    })\n                        .then(() => {\n                        if (!document.fonts.check(fontSetting, this._settings.text)) {\n                            console.warn('[Lightning] Font not found', fontSetting);\n                        }\n                    });\n                }\n            }\n            catch (e) {\n                console.warn(\"[Lightning] Can't check font loading for \" + fontSetting);\n            }\n        }\n    }\n    calculateRenderInfo() {\n        const renderInfo = {};\n        const precision = this.getPrecision();\n        const paddingLeft = this._settings.paddingLeft * precision;\n        const paddingRight = this._settings.paddingRight * precision;\n        const fontSize = this._settings.fontSize * precision;\n        let offsetY = this._settings.offsetY === null\n            ? null\n            : this._settings.offsetY * precision;\n        let lineHeight = (this._settings.lineHeight || fontSize) * precision;\n        const w = this._settings.w * precision;\n        const h = this._settings.h * precision;\n        let wordWrapWidth = this._settings.wordWrapWidth * precision;\n        const cutSx = this._settings.cutSx * precision;\n        const cutEx = this._settings.cutEx * precision;\n        const cutSy = this._settings.cutSy * precision;\n        const cutEy = this._settings.cutEy * precision;\n        const letterSpacing = (this._settings.letterSpacing || 0) * precision;\n        const textIndent = this._settings.textIndent * precision;\n        // Set font properties.\n        this.setFontProperties();\n        // Total width.\n        let width = w || 2048 / this.getPrecision();\n        // Inner width.\n        let innerWidth = width - paddingLeft;\n        if (innerWidth < 10) {\n            width += 10 - innerWidth;\n            innerWidth = 10;\n        }\n        if (!wordWrapWidth) {\n            wordWrapWidth = innerWidth;\n        }\n        // Text overflow\n        if (this._settings.textOverflow && !this._settings.wordWrap) {\n            let suffix;\n            switch (this._settings.textOverflow) {\n                case 'clip':\n                    suffix = '';\n                    break;\n                case 'ellipsis':\n                    suffix = this._settings.maxLinesSuffix;\n                    break;\n                default:\n                    suffix = this._settings.textOverflow;\n            }\n            this._settings.text = this.wrapWord(this._settings.text, wordWrapWidth - textIndent, suffix);\n        }\n        // word wrap\n        // preserve original text\n        let linesInfo;\n        if (this._settings.wordWrap) {\n            linesInfo = this.wrapText(this._settings.text, wordWrapWidth, letterSpacing, textIndent);\n        }\n        else {\n            linesInfo = { l: this._settings.text.split(/(?:\\r\\n|\\r|\\n)/), n: [] };\n            const n = linesInfo.l.length;\n            for (let i = 0; i < n - 1; i++) {\n                linesInfo.n.push(i);\n            }\n        }\n        let lines = linesInfo.l;\n        if (this._settings.maxLines && lines.length > this._settings.maxLines) {\n            const usedLines = lines.slice(0, this._settings.maxLines);\n            let otherLines = null;\n            if (this._settings.maxLinesSuffix) {\n                // Wrap again with max lines suffix enabled.\n                const w = this._settings.maxLinesSuffix\n                    ? this.measureText(this._settings.maxLinesSuffix)\n                    : 0;\n                const al = this.wrapText(usedLines[usedLines.length - 1], wordWrapWidth - w, letterSpacing, textIndent);\n                usedLines[usedLines.length - 1] = `${al.l[0]}${this._settings.maxLinesSuffix}`;\n                otherLines = [al.l.length > 1 ? al.l[1] : ''];\n            }\n            else {\n                otherLines = [''];\n            }\n            // Re-assemble the remaining text.\n            let i;\n            const n = lines.length;\n            let j = 0;\n            const m = linesInfo.n.length;\n            for (i = this._settings.maxLines; i < n; i++) {\n                otherLines[j] += `${otherLines[j] ? ' ' : ''}${lines[i]}`;\n                if (i + 1 < m && linesInfo.n[i + 1]) {\n                    j++;\n                }\n            }\n            renderInfo.remainingText = otherLines.join('\\n');\n            renderInfo.moreTextLines = true;\n            lines = usedLines;\n        }\n        else {\n            renderInfo.moreTextLines = false;\n            renderInfo.remainingText = '';\n        }\n        // calculate text width\n        let maxLineWidth = 0;\n        const lineWidths = [];\n        for (let i = 0; i < lines.length; i++) {\n            const lineWidth = this.measureText(lines[i], letterSpacing) + (i === 0 ? textIndent : 0);\n            lineWidths.push(lineWidth);\n            maxLineWidth = Math.max(maxLineWidth, lineWidth);\n        }\n        renderInfo.lineWidths = lineWidths;\n        if (!w) {\n            // Auto-set width to max text length.\n            width = maxLineWidth + paddingLeft + paddingRight;\n            innerWidth = maxLineWidth;\n        }\n        // calculate text height\n        lineHeight = lineHeight || fontSize;\n        let height;\n        if (h) {\n            height = h;\n        }\n        else {\n            const baselineOffset = this._settings.textBaseline != 'bottom' ? 0.5 * fontSize : 0;\n            height =\n                lineHeight * (lines.length - 1) +\n                    baselineOffset +\n                    Math.max(lineHeight, fontSize) +\n                    (offsetY || 0);\n        }\n        if (offsetY === null) {\n            offsetY = fontSize;\n        }\n        renderInfo.w = width;\n        renderInfo.h = height;\n        renderInfo.lines = lines;\n        renderInfo.precision = precision;\n        if (!width) {\n            // To prevent canvas errors.\n            width = 1;\n        }\n        if (!height) {\n            // To prevent canvas errors.\n            height = 1;\n        }\n        if (cutSx || cutEx) {\n            width = Math.min(width, cutEx - cutSx);\n        }\n        if (cutSy || cutEy) {\n            height = Math.min(height, cutEy - cutSy);\n        }\n        renderInfo.width = width;\n        renderInfo.innerWidth = innerWidth;\n        renderInfo.height = height;\n        renderInfo.fontSize = fontSize;\n        renderInfo.cutSx = cutSx;\n        renderInfo.cutSy = cutSy;\n        renderInfo.cutEx = cutEx;\n        renderInfo.cutEy = cutEy;\n        renderInfo.lineHeight = lineHeight;\n        renderInfo.lineWidths = lineWidths;\n        renderInfo.offsetY = offsetY;\n        renderInfo.paddingLeft = paddingLeft;\n        renderInfo.paddingRight = paddingRight;\n        renderInfo.letterSpacing = letterSpacing;\n        renderInfo.textIndent = textIndent;\n        return renderInfo;\n    }\n    draw(renderInfo, linesOverride) {\n        const precision = this.getPrecision();\n        // Allow lines to be overriden for partial rendering.\n        const lines = linesOverride?.lines || renderInfo.lines;\n        const lineWidths = linesOverride?.lineWidths || renderInfo.lineWidths;\n        const height = linesOverride\n            ? linesOverride.lines.length * renderInfo.lineHeight\n            : renderInfo.height;\n        // Add extra margin to prevent issue with clipped text when scaling.\n        this._canvas.width = Math.min(Math.ceil(renderInfo.width + this._settings.textRenderIssueMargin), MAX_TEXTURE_DIMENSION);\n        this._canvas.height = Math.min(Math.ceil(height), MAX_TEXTURE_DIMENSION);\n        // Canvas context has been reset.\n        this.setFontProperties();\n        if (renderInfo.fontSize >= 128) {\n            // WpeWebKit bug: must force compositing because cairo-traps-compositor will not work with text first.\n            this._context.globalAlpha = 0.01;\n            this._context.fillRect(0, 0, 0.01, 0.01);\n            this._context.globalAlpha = 1.0;\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(-renderInfo.cutSx, -renderInfo.cutSy);\n        }\n        let linePositionX;\n        let linePositionY;\n        const drawLines = [];\n        // Draw lines line by line.\n        for (let i = 0, n = lines.length; i < n; i++) {\n            linePositionX = i === 0 ? renderInfo.textIndent : 0;\n            // By default, text is aligned to top\n            linePositionY = i * renderInfo.lineHeight + renderInfo.offsetY;\n            if (this._settings.verticalAlign == 'middle') {\n                linePositionY += (renderInfo.lineHeight - renderInfo.fontSize) / 2;\n            }\n            else if (this._settings.verticalAlign == 'bottom') {\n                linePositionY += renderInfo.lineHeight - renderInfo.fontSize;\n            }\n            if (this._settings.textAlign === 'right') {\n                linePositionX += renderInfo.innerWidth - lineWidths[i];\n            }\n            else if (this._settings.textAlign === 'center') {\n                linePositionX += (renderInfo.innerWidth - lineWidths[i]) / 2;\n            }\n            linePositionX += renderInfo.paddingLeft;\n            drawLines.push({\n                text: lines[i],\n                x: linePositionX,\n                y: linePositionY,\n                w: lineWidths[i],\n            });\n        }\n        // Highlight.\n        if (this._settings.highlight) {\n            const color = this._settings.highlightColor;\n            const hlHeight = this._settings.highlightHeight * precision || renderInfo.fontSize * 1.5;\n            const offset = this._settings.highlightOffset * precision;\n            const hlPaddingLeft = this._settings.highlightPaddingLeft !== null\n                ? this._settings.highlightPaddingLeft * precision\n                : renderInfo.paddingLeft;\n            const hlPaddingRight = this._settings.highlightPaddingRight !== null\n                ? this._settings.highlightPaddingRight * precision\n                : renderInfo.paddingRight;\n            this._context.fillStyle = getRgbaString(color);\n            for (let i = 0; i < drawLines.length; i++) {\n                const drawLine = drawLines[i];\n                this._context.fillRect(drawLine.x - hlPaddingLeft, drawLine.y - renderInfo.offsetY + offset, drawLine.w + hlPaddingRight + hlPaddingLeft, hlHeight);\n            }\n        }\n        // Text shadow.\n        let prevShadowSettings = null;\n        if (this._settings.shadow) {\n            prevShadowSettings = [\n                this._context.shadowColor,\n                this._context.shadowOffsetX,\n                this._context.shadowOffsetY,\n                this._context.shadowBlur,\n            ];\n            this._context.shadowColor = getRgbaString(this._settings.shadowColor);\n            this._context.shadowOffsetX = this._settings.shadowOffsetX * precision;\n            this._context.shadowOffsetY = this._settings.shadowOffsetY * precision;\n            this._context.shadowBlur = this._settings.shadowBlur * precision;\n        }\n        this._context.fillStyle = getRgbaString(this._settings.textColor);\n        for (let i = 0, n = drawLines.length; i < n; i++) {\n            const drawLine = drawLines[i];\n            if (renderInfo.letterSpacing === 0) {\n                this._context.fillText(drawLine.text, drawLine.x, drawLine.y);\n            }\n            else {\n                const textSplit = drawLine.text.split('');\n                let x = drawLine.x;\n                for (let i = 0, j = textSplit.length; i < j; i++) {\n                    this._context.fillText(textSplit[i], x, drawLine.y);\n                    x += this.measureText(textSplit[i], renderInfo.letterSpacing);\n                }\n            }\n        }\n        if (prevShadowSettings) {\n            this._context.shadowColor = prevShadowSettings[0];\n            this._context.shadowOffsetX = prevShadowSettings[1];\n            this._context.shadowOffsetY = prevShadowSettings[2];\n            this._context.shadowBlur = prevShadowSettings[3];\n        }\n        if (renderInfo.cutSx || renderInfo.cutSy) {\n            this._context.translate(renderInfo.cutSx, renderInfo.cutSy);\n        }\n        this.renderInfo = renderInfo;\n    }\n    wrapWord(word, wordWrapWidth, suffix) {\n        const suffixWidth = this._context.measureText(suffix).width;\n        const wordLen = word.length;\n        const wordWidth = this._context.measureText(word).width;\n        /* If word fits wrapWidth, do nothing */\n        if (wordWidth <= wordWrapWidth) {\n            return word;\n        }\n        /* Make initial guess for text cuttoff */\n        let cutoffIndex = Math.floor((wordWrapWidth * wordLen) / wordWidth);\n        let truncWordWidth = this._context.measureText(word.substring(0, cutoffIndex)).width +\n            suffixWidth;\n        /* In case guess was overestimated, shrink it letter by letter. */\n        if (truncWordWidth > wordWrapWidth) {\n            while (cutoffIndex > 0) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth > wordWrapWidth) {\n                    cutoffIndex -= 1;\n                }\n                else {\n                    break;\n                }\n            }\n            /* In case guess was underestimated, extend it letter by letter. */\n        }\n        else {\n            while (cutoffIndex < wordLen) {\n                truncWordWidth =\n                    this._context.measureText(word.substring(0, cutoffIndex)).width +\n                        suffixWidth;\n                if (truncWordWidth < wordWrapWidth) {\n                    cutoffIndex += 1;\n                }\n                else {\n                    // Finally, when bound is crossed, retract last letter.\n                    cutoffIndex -= 1;\n                    break;\n                }\n            }\n        }\n        /* If wrapWidth is too short to even contain suffix alone, return empty string */\n        return (word.substring(0, cutoffIndex) +\n            (wordWrapWidth >= suffixWidth ? suffix : ''));\n    }\n    /**\n     * Applies newlines to a string to have it optimally fit into the horizontal\n     * bounds set by the Text object's wordWrapWidth property.\n     */\n    wrapText(text, wordWrapWidth, letterSpacing, indent = 0) {\n        // Greedy wrapping algorithm that will wrap words as the line grows longer.\n        // than its horizontal bounds.\n        const lines = text.split(/\\r?\\n/g);\n        let allLines = [];\n        const realNewlines = [];\n        for (let i = 0; i < lines.length; i++) {\n            const resultLines = [];\n            let result = '';\n            let spaceLeft = wordWrapWidth - indent;\n            const words = lines[i].split(' ');\n            for (let j = 0; j < words.length; j++) {\n                const wordWidth = this.measureText(words[j], letterSpacing);\n                const wordWidthWithSpace = wordWidth + this.measureText(' ', letterSpacing);\n                if (j === 0 || wordWidthWithSpace > spaceLeft) {\n                    // Skip printing the newline if it's the first word of the line that is.\n                    // greater than the word wrap width.\n                    if (j > 0) {\n                        resultLines.push(result);\n                        result = '';\n                    }\n                    result += words[j];\n                    spaceLeft = wordWrapWidth - wordWidth - (j === 0 ? indent : 0);\n                }\n                else {\n                    spaceLeft -= wordWidthWithSpace;\n                    result += ` ${words[j]}`;\n                }\n            }\n            resultLines.push(result);\n            result = '';\n            allLines = allLines.concat(resultLines);\n            if (i < lines.length - 1) {\n                realNewlines.push(allLines.length);\n            }\n        }\n        return { l: allLines, n: realNewlines };\n    }\n    measureText(word, space = 0) {\n        if (!space) {\n            return this._context.measureText(word).width;\n        }\n        return word.split('').reduce((acc, char) => {\n            return acc + this._context.measureText(char).width + space;\n        }, 0);\n    }\n    mergeDefaults(settings) {\n        return {\n            text: '',\n            w: 0,\n            h: 0,\n            fontStyle: 'normal',\n            fontSize: 40,\n            fontFace: null,\n            wordWrap: true,\n            wordWrapWidth: 0,\n            wordBreak: false,\n            textOverflow: '',\n            lineHeight: null,\n            textBaseline: 'alphabetic',\n            textAlign: 'left',\n            verticalAlign: 'top',\n            offsetY: null,\n            maxLines: 0,\n            maxLinesSuffix: '..',\n            textColor: [1.0, 1.0, 1.0, 1.0],\n            paddingLeft: 0,\n            paddingRight: 0,\n            shadow: false,\n            shadowColor: [0.0, 0.0, 0.0, 1.0],\n            shadowOffsetX: 0,\n            shadowOffsetY: 0,\n            shadowBlur: 5,\n            highlight: false,\n            highlightHeight: 0,\n            highlightColor: [0.0, 0.0, 0.0, 1.0],\n            highlightOffset: 0,\n            highlightPaddingLeft: 0,\n            highlightPaddingRight: 0,\n            letterSpacing: 0,\n            textIndent: 0,\n            cutSx: 0,\n            cutEx: 0,\n            cutSy: 0,\n            cutEy: 0,\n            advancedRenderer: false,\n            fontBaselineRatio: 0,\n            precision: 1,\n            textRenderIssueMargin: 0,\n            ...settings,\n        };\n    }\n}\n//# sourceMappingURL=LightningTextTextureRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nimport { assertTruthy } from '../../../utils.js';\nimport { intersectRect, intersectBound, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebTrFontFace } from '../font-face-types/WebTrFontFace.js';\nimport { LightningTextTextureRenderer, } from './LightningTextTextureRenderer.js';\nimport { TextRenderer, } from './TextRenderer.js';\nconst resolvedGlobal = typeof self === 'undefined' ? globalThis : self;\n/**\n * Global font set regardless of if run in the main thread or a web worker\n */\nconst globalFontSet = (resolvedGlobal.document?.fonts ||\n    resolvedGlobal.fonts);\nfunction getFontCssString(props) {\n    const { fontFamily, fontStyle, fontWeight, fontStretch, fontSize } = props;\n    return [fontStyle, fontWeight, fontStretch, `${fontSize}px`, fontFamily].join(' ');\n}\nexport class CanvasTextRenderer extends TextRenderer {\n    canvas;\n    context;\n    constructor(stage) {\n        super(stage);\n        if (typeof OffscreenCanvas !== 'undefined') {\n            this.canvas = new OffscreenCanvas(0, 0);\n        }\n        else {\n            this.canvas = document.createElement('canvas');\n        }\n        let context = this.canvas.getContext('2d');\n        if (!context) {\n            // A browser may appear to support OffscreenCanvas but not actually support the Canvas '2d' context\n            // Here we try getting the context again after falling back to an HTMLCanvasElement.\n            // See: https://github.com/lightning-js/renderer/issues/26#issuecomment-1750438486\n            this.canvas = document.createElement('canvas');\n            context = this.canvas.getContext('2d');\n        }\n        assertTruthy(context);\n        this.context = context;\n    }\n    //#region Overrides\n    getPropertySetters() {\n        return {\n            fontFamily: (state, value) => {\n                state.props.fontFamily = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontWeight: (state, value) => {\n                state.props.fontWeight = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontStyle: (state, value) => {\n                state.props.fontStyle = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontStretch: (state, value) => {\n                state.props.fontStretch = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            fontSize: (state, value) => {\n                state.props.fontSize = value;\n                state.fontInfo = undefined;\n                this.markForReload(state);\n            },\n            text: (state, value) => {\n                state.props.text = value;\n                this.markForReload(state);\n            },\n            textAlign: (state, value) => {\n                state.props.textAlign = value;\n                this.markForReload(state);\n            },\n            color: (state, value) => {\n                state.props.color = value;\n                this.markForReload(state);\n            },\n            x: (state, value) => {\n                state.props.x = value;\n            },\n            y: (state, value) => {\n                state.props.y = value;\n            },\n            contain: (state, value) => {\n                state.props.contain = value;\n                this.markForReload(state);\n            },\n            width: (state, value) => {\n                state.props.width = value;\n                this.markForReload(state);\n            },\n            height: (state, value) => {\n                state.props.height = value;\n                this.markForReload(state);\n            },\n            offsetY: (state, value) => {\n                state.props.offsetY = value;\n                this.markForReload(state);\n            },\n            scrollY: (state, value) => {\n                state.props.scrollY = value;\n            },\n            letterSpacing: (state, value) => {\n                state.props.letterSpacing = value;\n                this.markForReload(state);\n            },\n            // debug: (state, value) => {\n            //   state.props.debug = value;\n            // },\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    canRenderFont(props) {\n        // The canvas renderer can render any font because it automatically\n        // falls back to system fonts. The CanvasTextRenderer should be\n        // checked last if other renderers are preferred.\n        return true;\n    }\n    isFontFaceSupported(fontFace) {\n        return fontFace instanceof WebTrFontFace;\n    }\n    addFontFace(fontFace) {\n        // Make sure the font face is an Canvas font face (it should have already passed\n        // the `isFontFaceSupported` check)\n        assertTruthy(fontFace instanceof WebTrFontFace);\n        // We simply add the font face to the document\n        // @ts-expect-error `add()` method should be available from a FontFaceSet\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n        globalFontSet.add(fontFace.fontFace);\n    }\n    createState(props) {\n        return {\n            props,\n            status: 'initialState',\n            emitter: new EventEmitter(),\n            canvasPages: undefined,\n            lightning2TextRenderer: new LightningTextTextureRenderer(this.canvas, this.context),\n            renderWindow: undefined,\n            renderInfo: undefined,\n            forceFullLayoutCalc: false,\n            textW: 0,\n            textH: 0,\n            fontInfo: undefined,\n            fontFaceLoadedHandler: undefined,\n            debugData: {\n                updateCount: 0,\n                layoutCount: 0,\n                drawCount: 0,\n                lastLayoutNumCharacters: 0,\n                layoutSum: 0,\n                drawSum: 0,\n                bufferSize: 0,\n            },\n        };\n    }\n    updateState(state) {\n        // On the first update call we need to set the status to loading\n        if (state.status === 'initialState') {\n            this.setStatus(state, 'loading');\n        }\n        // If fontInfo is invalid, we need to establish it\n        if (!state.fontInfo) {\n            const cssString = getFontCssString(state.props);\n            state.fontInfo = {\n                cssString: cssString,\n                // TODO: For efficiency we would use this here but it's not reliable on WPE -> document.fonts.check(cssString),\n                loaded: false,\n            };\n            // If font is not loaded, set up a handler to update the font info when the font loads\n            if (!state.fontInfo.loaded) {\n                globalFontSet\n                    .load(cssString)\n                    .then(this.onFontLoaded.bind(this, state, cssString))\n                    .catch(this.onFontLoadError.bind(this, state, cssString));\n                return;\n            }\n        }\n        // If we're waiting for a font face to load, don't render anything\n        if (!state.fontInfo.loaded) {\n            return;\n        }\n        if (!state.renderInfo) {\n            state.lightning2TextRenderer.settings = {\n                text: state.props.text,\n                textAlign: state.props.textAlign,\n                fontFace: state.props.fontFamily,\n                fontSize: state.props.fontSize,\n                fontStyle: [\n                    state.props.fontStretch,\n                    state.props.fontStyle,\n                    state.props.fontWeight,\n                ].join(' '),\n                textColor: getNormalizedRgbaComponents(state.props.color),\n                offsetY: state.props.fontSize + state.props.offsetY,\n                wordWrap: state.props.contain !== 'none',\n                wordWrapWidth: state.props.contain === 'none' ? undefined : state.props.width,\n                letterSpacing: state.props.letterSpacing,\n            };\n            const renderInfoCalculateTime = performance.now();\n            state.renderInfo = state.lightning2TextRenderer.calculateRenderInfo();\n            console.log('Render info calculated in', performance.now() - renderInfoCalculateTime, 'ms');\n            state.textH = state.renderInfo.lineHeight * state.renderInfo.lines.length;\n            state.textW = state.renderInfo.width;\n            // Invalidate renderWindow because the renderInfo changed\n            state.renderWindow = undefined;\n        }\n        const { x, y, width, height, scrollY, contain } = state.props;\n        let { renderWindow, canvasPages } = state;\n        // Figure out whats actually in the bounds of the renderer/canvas (visibleWindow)\n        const rendererBounds = {\n            x1: 0,\n            y1: 0,\n            x2: this.stage.options.appWidth,\n            y2: this.stage.options.appHeight,\n        };\n        const elementBounds = {\n            x1: x,\n            y1: y,\n            x2: contain !== 'none' ? x + width : Infinity,\n            y2: contain === 'both' ? y + height : Infinity,\n        };\n        /**\n         * Area that is visible on the screen.\n         */\n        const visibleWindow = intersectBound(rendererBounds, elementBounds);\n        const visibleWindowHeight = visibleWindow.y2 - visibleWindow.y1;\n        const maxLinesPerCanvasPage = Math.ceil(visibleWindowHeight / state.renderInfo.lineHeight);\n        // Return early if we're still viewing inside the established render window\n        // No need to re-render what we've already rendered\n        if (renderWindow && canvasPages) {\n            const renderWindowScreenX1 = x + renderWindow.x1;\n            const renderWindowScreenY1 = y - scrollY + renderWindow.y1;\n            const renderWindowScreenX2 = x + renderWindow.x2;\n            const renderWindowScreenY2 = y - scrollY + renderWindow.y2;\n            if (renderWindowScreenX1 <= visibleWindow.x1 &&\n                renderWindowScreenX2 >= visibleWindow.x2 &&\n                renderWindowScreenY1 <= visibleWindow.y1 &&\n                renderWindowScreenY2 >= visibleWindow.y2)\n                return;\n            if (renderWindowScreenY2 < visibleWindow.y2) {\n                // We've scrolled up, so we need to render the next page\n                renderWindow.y1 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 += maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.push(canvasPages.shift());\n                canvasPages[2].lineNumStart =\n                    canvasPages[1].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].lineNumEnd =\n                    canvasPages[2].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[2].valid = false;\n            }\n            else if (renderWindowScreenY1 > visibleWindow.y1) {\n                // We've scrolled down, so we need to render the previous page\n                renderWindow.y1 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                renderWindow.y2 -= maxLinesPerCanvasPage * state.renderInfo.lineHeight;\n                // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n                canvasPages.unshift(canvasPages.pop());\n                canvasPages[0].lineNumStart =\n                    canvasPages[1].lineNumStart - maxLinesPerCanvasPage;\n                canvasPages[0].lineNumEnd =\n                    canvasPages[0].lineNumStart + maxLinesPerCanvasPage;\n                canvasPages[0].valid = false;\n            }\n        }\n        else {\n            const pageHeight = state.renderInfo.lineHeight * maxLinesPerCanvasPage;\n            const page1Block = Math.ceil(scrollY / pageHeight);\n            const page1LineStart = page1Block * maxLinesPerCanvasPage;\n            const page0LineStart = page1LineStart - maxLinesPerCanvasPage;\n            const page2LineStart = page1LineStart + maxLinesPerCanvasPage;\n            // We haven't rendered anything yet, so we need to render the first page\n            // If canvasPages already exist, let's re-use the textures\n            canvasPages = [\n                {\n                    texture: canvasPages?.[0].texture,\n                    lineNumStart: page0LineStart,\n                    lineNumEnd: page0LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[1].texture,\n                    lineNumStart: page1LineStart,\n                    lineNumEnd: page1LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n                {\n                    texture: canvasPages?.[2].texture,\n                    lineNumStart: page2LineStart,\n                    lineNumEnd: page2LineStart + maxLinesPerCanvasPage,\n                    valid: false,\n                },\n            ];\n            state.canvasPages = canvasPages;\n            const scrollYNearestPage = Math.ceil(scrollY / pageHeight) * pageHeight;\n            renderWindow = {\n                x1: 0,\n                y1: scrollYNearestPage - pageHeight,\n                x2: width,\n                y2: scrollYNearestPage + pageHeight * 2,\n            };\n        }\n        state.renderWindow = renderWindow;\n        const pageDrawTime = performance.now();\n        for (const pageInfo of canvasPages) {\n            if (pageInfo.valid)\n                continue;\n            if (pageInfo.lineNumStart < 0) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: '',\n                });\n                pageInfo.valid = true;\n                continue;\n            }\n            state.lightning2TextRenderer.draw(state.renderInfo, {\n                lines: state.renderInfo.lines.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n                lineWidths: state.renderInfo.lineWidths.slice(pageInfo.lineNumStart, pageInfo.lineNumEnd),\n            });\n            if (!(this.canvas.width === 0 || this.canvas.height === 0)) {\n                pageInfo.texture = this.stage.txManager.loadTexture('ImageTexture', {\n                    src: this.context.getImageData(0, 0, this.canvas.width, this.canvas.height),\n                }, {\n                    preload: true,\n                });\n            }\n            pageInfo.valid = true;\n        }\n        console.log('pageDrawTime', performance.now() - pageDrawTime, 'ms');\n        // Report final status\n        this.setStatus(state, 'loaded');\n    }\n    renderQuads(state, clippingRect) {\n        const { stage } = this;\n        const { canvasPages, textW = 0, textH = 0, renderWindow } = state;\n        if (!canvasPages || !renderWindow)\n            return;\n        const { x, y, scrollY, contain, width, height /*, debug*/ } = state.props;\n        const elementRect = {\n            x: x,\n            y: y,\n            width: contain !== 'none' ? width : textW,\n            height: contain === 'both' ? height : textH,\n        };\n        const visibleRect = intersectRect({\n            x: 0,\n            y: 0,\n            width: stage.options.appWidth,\n            height: stage.options.appHeight,\n        }, elementRect);\n        // if (!debug.disableScissor) {\n        //   renderer.enableScissor(\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        assertTruthy(canvasPages, 'canvasPages is not defined');\n        assertTruthy(renderWindow, 'renderWindow is not defined');\n        const renderWindowHeight = renderWindow.y2 - renderWindow.y1;\n        const pageSize = renderWindowHeight / 3.0;\n        const { zIndex, alpha } = state.props;\n        if (canvasPages[0].valid) {\n            this.stage.renderer.addRenderable({\n                alpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[0].texture?.dimensions?.width || 0,\n                height: canvasPages[0].texture?.dimensions?.height || 0,\n                texture: canvasPages[0].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                worldScale: 1,\n                scale: 1,\n                wpx: x,\n                wpy: y - scrollY + renderWindow.y1,\n                ta: 1,\n                tb: 0,\n                tc: 0,\n                td: 1,\n            });\n        }\n        if (canvasPages[1].valid) {\n            this.stage.renderer.addRenderable({\n                alpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[1].texture?.dimensions?.width || 0,\n                height: canvasPages[1].texture?.dimensions?.height || 0,\n                texture: canvasPages[1].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                worldScale: 1,\n                scale: 1,\n                wpx: x,\n                wpy: y - scrollY + renderWindow.y1 + pageSize,\n                ta: 1,\n                tb: 0,\n                tc: 0,\n                td: 1,\n            });\n        }\n        if (canvasPages[2].valid) {\n            this.stage.renderer.addRenderable({\n                alpha,\n                clippingRect,\n                colorBl: 0xffffffff,\n                colorBr: 0xffffffff,\n                colorTl: 0xffffffff,\n                colorTr: 0xffffffff,\n                width: canvasPages[2].texture?.dimensions?.width || 0,\n                height: canvasPages[2].texture?.dimensions?.height || 0,\n                texture: canvasPages[2].texture,\n                textureOptions: {},\n                shader: null,\n                shaderProps: null,\n                zIndex,\n                worldScale: 1,\n                scale: 1,\n                wpx: x,\n                wpy: y - scrollY + renderWindow.y1 + pageSize + pageSize,\n                ta: 1,\n                tb: 0,\n                tc: 0,\n                td: 1,\n            });\n        }\n        // renderer.disableScissor();\n        // if (debug.showElementRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Blue,\n        //     elementRect.x,\n        //     elementRect.y,\n        //     elementRect.w,\n        //     elementRect.h,\n        //   );\n        // }\n        // if (debug.showVisibleRect) {\n        //   this.renderer.drawBorder(\n        //     Colors.Green,\n        //     visibleRect.x,\n        //     visibleRect.y,\n        //     visibleRect.w,\n        //     visibleRect.h,\n        //   );\n        // }\n        // if (debug.showRenderWindow && renderWindow) {\n        //   this.renderer.drawBorder(\n        //     Colors.Red,\n        //     x + renderWindow.x1,\n        //     y + renderWindow.y1 - scrollY,\n        //     x + renderWindow.x2 - (x + renderWindow.x1),\n        //     y + renderWindow.y2 - scrollY - (y + renderWindow.y1 - scrollY),\n        //   );\n        // }\n    }\n    //#endregion Overrides\n    markForReload(state) {\n        state.renderInfo = undefined;\n        this.setStatus(state, 'loading');\n    }\n    onFontLoaded(state, cssString) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        state.fontInfo.loaded = true;\n        this.updateState(state);\n    }\n    onFontLoadError(state, cssString, error) {\n        if (cssString !== state.fontInfo?.cssString || !state.fontInfo) {\n            return;\n        }\n        // Font didn't actually load, but we'll log the error and mark it as loaded\n        // because the browser can still render with a fallback font.\n        state.fontInfo.loaded = true;\n        console.error(`CanvasTextRenderer: Error loading font '${state.fontInfo.cssString}'`, error);\n        this.updateState(state);\n    }\n}\n//# sourceMappingURL=CanvasTextRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Scene } from './scene/Scene.js';\nimport { startLoop, getTimeStamp } from './platform.js';\nimport { WebGlCoreRenderer } from './renderers/webgl/WebGlCoreRenderer.js';\nimport { assertTruthy } from '../utils.js';\nimport { AnimationManager } from './animations/AnimationManager.js';\nimport { CoreNode } from './CoreNode.js';\nimport { CoreTextureManager } from './CoreTextureManager.js';\nimport { TrFontManager } from './text-rendering/TrFontManager.js';\nimport { CoreShaderManager } from './CoreShaderManager.js';\nimport { SdfTextRenderer } from './text-rendering/renderers/SdfTextRenderer/SdfTextRenderer.js';\nimport { CanvasTextRenderer } from './text-rendering/renderers/CanvasTextRenderer.js';\nimport { intersectRect } from './lib/utils.js';\nconst bufferMemory = 2e6;\nconst autoStart = true;\nexport class Stage {\n    options;\n    /// Module Instances\n    animationManager;\n    txManager;\n    fontManager;\n    textRenderers;\n    shManager;\n    renderer;\n    scene;\n    /// State\n    deltaTime = 0;\n    lastFrameTime = 0;\n    currentFrameTime = 0;\n    /**\n     * Stage constructor\n     */\n    constructor(options) {\n        this.options = options;\n        const { canvas, clearColor, rootId, debug, appWidth, appHeight } = options;\n        this.txManager = new CoreTextureManager();\n        this.shManager = new CoreShaderManager();\n        this.animationManager = new AnimationManager();\n        if (debug?.monitorTextureCache) {\n            setInterval(() => {\n                assertTruthy(this.txManager);\n                const debugInfo = this.txManager.getDebugInfo();\n                console.log('Texture ID Cache Size: ', debugInfo.idCacheSize);\n                console.log('Texture Key Cache Size: ', debugInfo.keyCacheSize);\n            }, 1000);\n        }\n        this.renderer = new WebGlCoreRenderer({\n            stage: this,\n            canvas,\n            pixelRatio: options.devicePhysicalPixelRatio * options.deviceLogicalPixelRatio,\n            clearColor: clearColor ?? 0xff000000,\n            bufferMemory,\n            txManager: this.txManager,\n            shManager: this.shManager,\n        });\n        // Must do this after renderer is created\n        this.txManager.renderer = this.renderer;\n        this.textRenderers = {\n            canvas: new CanvasTextRenderer(this),\n            sdf: new SdfTextRenderer(this),\n        };\n        this.fontManager = new TrFontManager(this.textRenderers);\n        // create root node\n        const rootNode = new CoreNode(this, {\n            id: rootId,\n            x: 0,\n            y: 0,\n            width: appWidth,\n            height: appHeight,\n            alpha: 1,\n            clipping: false,\n            color: 0x00000000,\n            colorTop: 0x00000000,\n            colorBottom: 0x00000000,\n            colorLeft: 0x00000000,\n            colorRight: 0x00000000,\n            colorTl: 0x00000000,\n            colorTr: 0x00000000,\n            colorBl: 0x00000000,\n            colorBr: 0x00000000,\n            zIndex: 0,\n            zIndexLocked: 0,\n            scale: 1,\n            mountX: 0,\n            mountY: 0,\n            mount: 0,\n            pivot: 0.5,\n            pivotX: 0.5,\n            pivotY: 0.5,\n            rotation: 0,\n            parent: null,\n            texture: null,\n            textureOptions: null,\n            shader: null,\n            shaderProps: null,\n        });\n        this.scene = new Scene(rootNode);\n        // execute platform start loop\n        if (autoStart) {\n            startLoop(this);\n        }\n    }\n    /**\n     * Start a new frame draw\n     */\n    drawFrame() {\n        const { renderer, scene, animationManager } = this;\n        if (!scene?.root) {\n            return;\n        }\n        this.lastFrameTime = this.currentFrameTime;\n        this.currentFrameTime = getTimeStamp();\n        this.deltaTime = !this.lastFrameTime\n            ? 100 / 6\n            : this.currentFrameTime - this.lastFrameTime;\n        // step animation\n        animationManager.update(this.deltaTime);\n        // reset and clear viewport\n        renderer?.reset();\n        // test if we need to update the scene\n        if (scene?.root?.hasUpdates) {\n            scene?.root?.update(this.deltaTime);\n        }\n        this.addQuads(scene.root);\n        renderer?.sortRenderables();\n        renderer?.render();\n    }\n    addQuads(node, parentClippingRect = null) {\n        assertTruthy(this.renderer);\n        let clippingRect = node.clipping\n            ? {\n                x: node.worldContext.px,\n                y: node.worldContext.py,\n                width: node.width,\n                height: node.height,\n            }\n            : null;\n        if (parentClippingRect && clippingRect) {\n            clippingRect = intersectRect(parentClippingRect, clippingRect);\n        }\n        else if (parentClippingRect) {\n            clippingRect = parentClippingRect;\n        }\n        node.renderQuads(this.renderer, clippingRect);\n        node.children.forEach((child) => {\n            if (child.alpha === 0) {\n                return;\n            }\n            this.addQuads(child, clippingRect);\n        });\n    }\n    /**\n     * Given a font name, and possible renderer override, return the best compatible text renderer.\n     *\n     * @remarks\n     * Will always return at least a canvas renderer if no other suitable renderer can be resolved.\n     *\n     * @param fontFamily\n     * @param textRendererOverride\n     * @returns\n     */\n    resolveTextRenderer(trProps, textRendererOverride = null) {\n        let rendererId = textRendererOverride;\n        let overrideFallback = false;\n        // Check if the override is valid (if one is provided)\n        if (rendererId) {\n            const possibleRenderer = this.textRenderers[rendererId];\n            if (!possibleRenderer) {\n                console.warn(`Text renderer override '${rendererId}' not found.`);\n                rendererId = null;\n                overrideFallback = true;\n            }\n            else if (!possibleRenderer.canRenderFont(trProps)) {\n                console.warn(`Cannot use override text renderer '${rendererId}' for font`, trProps);\n                rendererId = null;\n                overrideFallback = true;\n            }\n        }\n        if (!rendererId) {\n            // Iterate through the text renderers and find the first one that can render the font\n            for (const [trId, tr] of Object.entries(this.textRenderers)) {\n                if (trId === 'canvas') {\n                    // Canvas is always a fallback\n                    continue;\n                }\n                if (tr.canRenderFont(trProps)) {\n                    rendererId = trId;\n                    break;\n                }\n            }\n            if (!rendererId) {\n                // If no renderer can be found, use the canvas renderer\n                rendererId = 'canvas';\n            }\n        }\n        if (overrideFallback) {\n            console.warn(`Falling back to text renderer ${String(rendererId)}`);\n        }\n        // By now we are guaranteed to have a valid rendererId (at least Canvas);\n        const resolvedTextRenderer = this.textRenderers[rendererId];\n        assertTruthy(resolvedTextRenderer, 'resolvedTextRenderer undefined');\n        // Need to explicitly cast to TextRenderer because TS doesn't like\n        // the covariant state argument in the setter method map\n        return resolvedTextRenderer;\n    }\n    //#region Properties\n    get root() {\n        return this.scene?.root || null;\n    }\n}\n//# sourceMappingURL=Stage.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreNode } from './CoreNode.js';\nexport class CoreTextNode extends CoreNode {\n    textRenderer;\n    trState;\n    updateScheduled;\n    _textRendererOverride = null;\n    constructor(stage, props) {\n        super(stage, props);\n        this.updateScheduled = false;\n        // console.log('fontfamily', props.fontFamily)\n        this._textRendererOverride = props.textRendererOverride;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState({\n            x: this.absX,\n            y: this.absY,\n            width: props.width,\n            height: props.height,\n            textAlign: props.textAlign,\n            color: props.color,\n            alpha: props.alpha,\n            zIndex: props.zIndex,\n            contain: props.contain,\n            scrollable: props.scrollable,\n            scrollY: props.scrollY,\n            offsetY: props.offsetY,\n            letterSpacing: props.letterSpacing,\n            debug: props.debug,\n            fontFamily: props.fontFamily,\n            fontSize: props.fontSize,\n            fontStretch: props.fontStretch,\n            fontStyle: props.fontStyle,\n            fontWeight: props.fontWeight,\n            text: props.text,\n        }, undefined);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    onTextLoaded = () => {\n        this.emit('textLoaded', {\n            width: this.trState.textW,\n            height: this.trState.textH,\n        });\n    };\n    onTextFailed = (target, error) => {\n        this.emit('textFailed', error);\n    };\n    get width() {\n        return this.trState.props.width;\n    }\n    set width(value) {\n        this.textRenderer.set.width(this.trState, value);\n        this.updateText();\n    }\n    get height() {\n        return this.trState.props.height;\n    }\n    set height(value) {\n        this.textRenderer.set.height(this.trState, value);\n        this.updateText();\n    }\n    get alpha() {\n        return this.trState.props.alpha;\n    }\n    set alpha(value) {\n        this.textRenderer.set.alpha(this.trState, value);\n        this.updateText();\n    }\n    get color() {\n        return this.trState.props.color;\n    }\n    set color(value) {\n        this.textRenderer.set.color(this.trState, value);\n        this.updateText();\n    }\n    get text() {\n        return this.trState.props.text;\n    }\n    set text(value) {\n        this.textRenderer.set.text(this.trState, value);\n        this.updateText();\n    }\n    get textRendererOverride() {\n        return this._textRendererOverride;\n    }\n    set textRendererOverride(value) {\n        this._textRendererOverride = value;\n        const { resolvedTextRenderer, textRendererState } = this.resolveTextRendererAndState(this.trState.props, this.trState);\n        this.textRenderer = resolvedTextRenderer;\n        this.trState = textRendererState;\n    }\n    get fontSize() {\n        return this.trState.props.fontSize;\n    }\n    set fontSize(value) {\n        this.textRenderer.set.fontSize(this.trState, value);\n        this.updateText();\n    }\n    get fontFamily() {\n        return this.trState.props.fontFamily;\n    }\n    set fontFamily(value) {\n        this.textRenderer.set.fontFamily(this.trState, value);\n        this.updateText();\n    }\n    get fontStretch() {\n        return this.trState.props.fontStretch;\n    }\n    set fontStretch(value) {\n        this.textRenderer.set.fontStretch(this.trState, value);\n        this.updateText();\n    }\n    get fontStyle() {\n        return this.trState.props.fontStyle;\n    }\n    set fontStyle(value) {\n        this.textRenderer.set.fontStyle(this.trState, value);\n        this.updateText();\n    }\n    get fontWeight() {\n        return this.trState.props.fontWeight;\n    }\n    set fontWeight(value) {\n        this.textRenderer.set.fontWeight(this.trState, value);\n        this.updateText();\n    }\n    get textAlign() {\n        return this.trState.props.textAlign;\n    }\n    set textAlign(value) {\n        this.textRenderer.set.textAlign(this.trState, value);\n        this.updateText();\n    }\n    get contain() {\n        return this.trState.props.contain;\n    }\n    set contain(value) {\n        this.textRenderer.set.contain(this.trState, value);\n        this.updateText();\n    }\n    get scrollable() {\n        return this.trState.props.scrollable;\n    }\n    set scrollable(value) {\n        this.textRenderer.set.scrollable(this.trState, value);\n        this.updateText();\n    }\n    get scrollY() {\n        return this.trState.props.scrollY;\n    }\n    set scrollY(value) {\n        this.textRenderer.set.scrollY(this.trState, value);\n        this.updateText();\n    }\n    get offsetY() {\n        return this.trState.props.offsetY;\n    }\n    set offsetY(value) {\n        this.textRenderer.set.offsetY(this.trState, value);\n        this.updateText();\n    }\n    get letterSpacing() {\n        return this.trState.props.letterSpacing;\n    }\n    set letterSpacing(value) {\n        this.textRenderer.set.letterSpacing(this.trState, value);\n        this.updateText();\n    }\n    get debug() {\n        return this.trState.props.debug;\n    }\n    set debug(value) {\n        this.textRenderer.set.debug(this.trState, value);\n        this.updateText();\n    }\n    update(delta) {\n        super.update(delta);\n        this.textRenderer.set.x(this.trState, this.worldContext.px);\n        this.textRenderer.set.y(this.trState, this.worldContext.py);\n        if (this.trState.status === 'loading') {\n            this.updateText();\n        }\n    }\n    updateText() {\n        if (this.updateScheduled) {\n            return;\n        }\n        this.updateScheduled = true;\n        queueMicrotask(() => {\n            this.updateScheduled = false;\n            this.textRenderer.updateState(this.trState);\n        });\n    }\n    renderQuads(renderer, clippingRect) {\n        this.textRenderer.renderQuads(this.trState, clippingRect);\n    }\n    /**\n     * Resolve a text renderer and a new state based on the current text renderer props provided\n     * @param props\n     * @returns\n     */\n    resolveTextRendererAndState(props, prevState) {\n        const resolvedTextRenderer = this.stage.resolveTextRenderer(props, this._textRendererOverride);\n        const textRendererState = resolvedTextRenderer.createState(props);\n        const stateEvents = ['loading', 'loaded', 'failed'];\n        if (prevState) {\n            // Remove the old event listeners from previous state obj there was one\n            stateEvents.forEach((eventName) => {\n                prevState.emitter.off(eventName);\n            });\n        }\n        // Forward basic status events from the text renderer state\n        textRendererState.emitter.on('loading', () => {\n            // This event will be fired only once between the `loading` and `loaded`\n            // event ONLY if the font is not already loaded\n            textRendererState.emitter.once('fontLoaded', () => {\n                // When it's fired we must run update to make sure the text renders\n                this.updateText();\n            });\n            textRendererState.emitter.once('loaded', () => {\n                // Make sure we stop listening for fontLoaded events\n                textRendererState.emitter.off('fontLoaded');\n            });\n        });\n        textRendererState.emitter.on('loaded', this.onTextLoaded);\n        textRendererState.emitter.on('failed', this.onTextFailed);\n        this.updateText();\n        // TODO: Handle text renderer errors\n        return {\n            resolvedTextRenderer,\n            textRendererState,\n        };\n    }\n}\n//# sourceMappingURL=CoreTextNode.js.map","import { CoreExtension } from '../../exports/core-api.js';\n/**\n * Type guard that checks if a Class extends CoreExtension.\n *\n * @param Class\n * @returns\n */\nexport function classExtendsCoreExtension(Class) {\n    return Class.prototype instanceof CoreExtension;\n}\nexport async function loadCoreExtension(coreExtensionModule, stage) {\n    let module;\n    try {\n        console.log('Loading core extension', coreExtensionModule);\n        module = (await import(coreExtensionModule /* @vite-ignore */));\n    }\n    catch (e) {\n        console.error(`The core extension module at '${coreExtensionModule}' could not be loaded.`);\n        console.error(e);\n        return;\n    }\n    if (!module.default) {\n        console.error(`The core extension module at '${coreExtensionModule}' does not have a default export.`);\n        return;\n    }\n    const ExtensionClass = module.default;\n    if (classExtendsCoreExtension(ExtensionClass)) {\n        const coreExtension = new ExtensionClass();\n        try {\n            await coreExtension.run(stage);\n        }\n        catch (e) {\n            console.error(`The core extension at '${coreExtensionModule}' threw an error.`);\n            console.error(e);\n        }\n    }\n    else {\n        console.error(`The core extension at '${coreExtensionModule}' does not extend CoreExtension.`);\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\n/**\n * The Global object.\n *\n * @remarks\n * Use this instead of accessing `window` or `self` directly.\n *\n * In the future we may try to get ThreadX working with NodeJS, in that case\n * this can be changed to include NodeJS vs Browser detection logic.\n */\nexport const resolvedGlobal = self;\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n//# sourceMappingURL=utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { assertTruthy } from './utils.js';\nclass SharedObject {\n    /**\n     * The ThreadX instance that this SharedObject should interact with\n     *\n     * @remarks\n     * It's unsafe to use `ThreadX.instance` in different, especially asyncronous,\n     * locations directly because it may change during the lifetime of a\n     * SharedObject. At least it can during tests. So this one should always\n     * be referenced when needed.\n     */\n    threadx;\n    sharedObjectStruct;\n    mutations;\n    waitPromise = null;\n    mutationsQueued = false;\n    static staticInitialized = false;\n    _id;\n    _typeId;\n    initialized = false;\n    destroying = false;\n    curProps;\n    /**\n     * Extract the buffer from a SharedObject\n     *\n     * @remarks\n     * For internal use by ThreadX only\n     *\n     * @param sharedObject\n     * @returns\n     */\n    static extractBuffer(sharedObject) {\n        if (sharedObject.destroying || !sharedObject.sharedObjectStruct) {\n            throw new Error('SharedObject.extractBuffer(): SharedObject is or was being destroyed.');\n        }\n        return sharedObject.sharedObjectStruct.buffer;\n    }\n    constructor(sharedObjectStruct, curProps) {\n        this.curProps = curProps;\n        this.threadx = ThreadX.instance;\n        this.sharedObjectStruct = sharedObjectStruct;\n        this._id = sharedObjectStruct.id;\n        this._typeId = sharedObjectStruct.typeId;\n        const constructor = this.constructor;\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.staticInitialized = true;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const prototype = Object.getPrototypeOf(this);\n            Object.keys(curProps).forEach((key) => {\n                Object.defineProperty(prototype, key, {\n                    get: function () {\n                        return this.curProps[key];\n                    },\n                    set: function (value) {\n                        this.curProps[key] =\n                            value;\n                        this.mutations[key] = true;\n                        this.queueMutations();\n                    },\n                });\n            });\n        }\n        this.mutations = {};\n        this._executeMutations();\n        this.initialized = true;\n    }\n    get typeId() {\n        return this._typeId;\n    }\n    get id() {\n        return this._id;\n    }\n    /**\n     * Assumes lock is acquired\n     */\n    processDirtyProperties() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        const { sharedObjectStruct, mutations, curProps } = this;\n        sharedObjectStruct.constructor.propDefs.forEach((propDef, index) => {\n            if (sharedObjectStruct.isDirty(index)) {\n                const propName = propDef.name;\n                // If this property has a pending mutation from this worker, then\n                // cancel it. The mutation from the other worker that has already\n                // been applied to the SharedArrayBuffer will take precedence.\n                delete mutations[propName];\n                const oldValue = curProps[propName];\n                // Apply the mutation from the other worker\n                curProps[propName] =\n                    sharedObjectStruct[propName];\n                // Don't call onPropertyChange during the initialization process\n                if (this.initialized) {\n                    this.onPropertyChange(propName, sharedObjectStruct[propName], oldValue);\n                }\n            }\n        });\n        sharedObjectStruct.resetDirty();\n    }\n    onPropertyChange(propName, newValue, oldValue) {\n        // console.log(`onPropertyChange: ${propName} = ${value} (${this.dirtyProcessCount}, ${ThreadX.workerName)`);\n    }\n    queueMutations() {\n        if (this.mutationsQueued) {\n            return;\n        }\n        this.mutationsQueued = true;\n        queueMicrotask(() => {\n            this.mutationsQueued = false;\n            // If the SharedObject has been destroyed, then forget about processing\n            // any mutations.\n            if (!this.sharedObjectStruct) {\n                return;\n            }\n            this.mutationMicrotask().catch(console.error);\n        });\n    }\n    async mutationMicrotask() {\n        if (!this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        await this.sharedObjectStruct.lockAsync(async () => {\n            this._executeMutations();\n        });\n        if (this.destroying) {\n            this.finishDestroy();\n        }\n    }\n    flush() {\n        if (this.destroying || !this.sharedObjectStruct) {\n            throw new Error('SharedObject was destroyed');\n        }\n        this.sharedObjectStruct.lock(() => {\n            this._executeMutations();\n        });\n    }\n    /**\n     * Called when the SharedObject is being destroyed.\n     *\n     * @remarks\n     * This is an opportunity to clean up anything just prior to the SharedObject\n     * being completely destroyed. Shared mutations are allowed in this method.\n     *\n     * IMPORTANT:\n     * `super.onDestroy()` must be called at the END of any subclass override to\n     * ensure proper cleanup.\n     */\n    onDestroy() {\n        // Implement in subclass\n    }\n    /**\n     * Destroy the SharedObject on this worker only.\n     *\n     * @remarks\n     * This stops any internal mutation processing, releases the reference\n     * to the underlying BufferStruct/SharedArrayBuffer, and removes all\n     * event listeners so that the SharedObject can be garbage collected.\n     *\n     * This does not destroy the SharedObject on other worker. To do that,\n     * call `SharedObject.destroy()` on the other worker.\n     */\n    destroy() {\n        const struct = this.sharedObjectStruct;\n        if (this.destroying || !struct) {\n            return;\n        }\n        this.emit('beforeDestroy', {}, { localOnly: true });\n        this.destroying = true;\n        this.onDestroy();\n        // The remainter of the destroy process (this.finishDestroy) is called\n        // after the next set of mutations is processed. This is to ensure that\n        // any final mutations that are queued up are sent to the opposite thread\n        // before the SharedObject is destroyed on this worker.\n        this.queueMutations();\n    }\n    finishDestroy() {\n        const struct = this.sharedObjectStruct;\n        if (!this.destroying || !struct) {\n            return;\n        }\n        // Remove this object from ThreadX\n        // Silently because ThreadX may already have been removed if this object\n        // is being destroyed because the current worker was told to forget about it.\n        this.threadx.forgetObjects([this], { silent: true }).catch(console.error);\n        // Release the reference to the underlying BufferStruct/SharedArrayBuffer\n        this.sharedObjectStruct = null;\n        // Submit a notify in order to wake up self or other worker if waiting\n        // on the struct. Need to do this otherwise memory leaks.\n        struct.notify();\n        // Emit the afterDestroy event\n        this.emit('afterDestroy', {}, { localOnly: true });\n        // Remove all event listeners\n        this.eventListeners = {};\n    }\n    get isDestroyed() {\n        return this.sharedObjectStruct === null;\n    }\n    _executeMutations() {\n        if (!this.sharedObjectStruct) {\n            // SharedObject was destroyed so there's nothing to do\n            return;\n        }\n        // Only process properties if the SharedObject is dirty and the current\n        // worker is not the one that last modified it.\n        if (this.sharedObjectStruct.notifyValue !== this.threadx.workerId &&\n            this.sharedObjectStruct.isDirty()) {\n            this.processDirtyProperties();\n        }\n        const { mutations } = this;\n        this.mutations = {};\n        for (const key in mutations) {\n            if (Object.prototype.hasOwnProperty.call(mutations, key)) {\n                const value = this.curProps[key];\n                // Workaround TypeScript limitation re-assigning to dynamic keys of a class instance:\n                // https://github.com/microsoft/TypeScript/issues/53738\n                const oldValue = this.sharedObjectStruct[key];\n                // @ts-expect-error Ignore the read-only assignment errors\n                this.sharedObjectStruct[key] =\n                    value;\n            }\n        }\n        if (this.waitPromise) {\n            this.waitPromise = null;\n        }\n        let expectedNotifyValue = this.sharedObjectStruct.notifyValue;\n        if (this.sharedObjectStruct.isDirty()) {\n            this.sharedObjectStruct.notify(this.threadx.workerId);\n            expectedNotifyValue = this.threadx.workerId;\n        }\n        const waitPromise = this.sharedObjectStruct\n            .waitAsync(expectedNotifyValue)\n            .then(async (result) => {\n            // Only respond if this is the most recent wait promise\n            if (this.waitPromise === waitPromise && this.sharedObjectStruct) {\n                assertTruthy(result === 'ok');\n                this.waitPromise = null;\n                await this.mutationMicrotask();\n            }\n        });\n        this.waitPromise = waitPromise;\n    }\n    //#region EventEmitter\n    eventListeners = {};\n    on(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        listeners.push(listener);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access, @typescript-eslint/no-unsafe-call\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data, options = {}) {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        const listeners = this.eventListeners[event];\n        if (!options.localOnly) {\n            // Emit on opposite worker (if shared)\n            ThreadX.instance.__sharedObjectEmit(this, event, data);\n        }\n        if (!listeners) {\n            return;\n        }\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        [...listeners].forEach((listener) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-call\n            listener(this, data);\n        });\n    }\n}\nexport { SharedObject };\n//# sourceMappingURL=SharedObject.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nfunction isValidTypeIdCharCode(charCode) {\n    // Allow uppercase letters and numbers\n    return ((charCode >= 65 && charCode <= 90) || (charCode >= 48 && charCode <= 57));\n}\nexport function genTypeId(tidString) {\n    let typeId = 0;\n    if (tidString.length === 0) {\n        throw new Error(`genTypeId: Type ID string must be at least 1 character`);\n    }\n    else if (tidString.length > 4) {\n        throw new Error(`genTypeId: Type ID string must be 4 characters or less`);\n    }\n    for (let i = 0; i < tidString.length; i++) {\n        let charCode = tidString.charCodeAt(i);\n        if (charCode !== charCode) {\n            // Use 0 for NaN\n            charCode = 0;\n        }\n        else if (!isValidTypeIdCharCode(charCode)) {\n            // Throw if the character is not a valid type ID character\n            throw new Error(`genTypeId: Invalid character '${tidString[i]}' (char code: ${charCode}) in type ID string. A-Z and 0-9 only.`);\n        }\n        typeId |= charCode << (i * 8);\n    }\n    return typeId;\n}\n/**\n * Returns true if the given type ID is valid.\n *\n * @param typeId\n * @returns\n */\nexport function isValidTypeId(typeId) {\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (!isValidTypeIdCharCode(charCode) && (charCode !== 0 || i === 0)) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return false;\n        }\n        typeId >>>= 8;\n    }\n    return true;\n}\n/**\n * Converts a type ID to its string form.\n *\n * @remarks\n * If the type ID is not a valid type ID, null is returned.\n *\n * @param typeId\n * @returns\n */\nexport function stringifyTypeId(typeId) {\n    const chars = [];\n    for (let i = 0; i < 4; i++) {\n        const charCode = typeId & 0xff;\n        if (isValidTypeIdCharCode(charCode)) {\n            chars.push(String.fromCharCode(charCode));\n        }\n        else if (charCode !== 0 || i === 0) {\n            // Bail as soon as we encounter an invalid character\n            // Except if charCodes other than the first one are 0\n            return '????';\n        }\n        typeId >>>= 8;\n    }\n    return chars.join('');\n}\n//# sourceMappingURL=buffer-struct-utils.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { SharedObject } from './SharedObject.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nimport { assertTruthy, resolvedGlobal } from './utils.js';\nfunction isMessage(messageType, message) {\n    return (typeof message === 'object' &&\n        message !== null &&\n        'threadXMessageType' in message &&\n        message.threadXMessageType === messageType);\n}\nfunction isWebWorker(selfObj) {\n    // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n    return typeof selfObj.DedicatedWorkerGlobalScope === 'function';\n}\nexport class ThreadX {\n    static init(options) {\n        if (resolvedGlobal.THREADX) {\n            throw new Error('ThreadX.init(): ThreadX already initialized.');\n        }\n        const threadX = new ThreadX(options);\n        resolvedGlobal.THREADX = threadX;\n        return threadX;\n    }\n    static destroy() {\n        if (!resolvedGlobal.THREADX) {\n            console.warn('ThreadX.destroy(): ThreadX is not initialized.');\n            return;\n        }\n        delete resolvedGlobal.THREADX;\n        return;\n    }\n    /**\n     * Get the Worker ID of the current worker\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerId() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerId;\n    }\n    /**\n     * Get the Worker Name of the current thread\n     *\n     * @remarks\n     * This is only valid after ThreadX.init() has been called.\n     */\n    static get workerName() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX.workerName;\n    }\n    static get instance() {\n        if (!resolvedGlobal.THREADX) {\n            throw new Error('ThreadX not initialized');\n        }\n        return resolvedGlobal.THREADX;\n    }\n    workerId;\n    workerName;\n    sharedObjectFactory;\n    onSharedObjectCreated;\n    onBeforeObjectForgotten;\n    /**\n     * User-defined message handler\n     */\n    onUserMessage;\n    sharedObjects = new Map();\n    /**\n     * WeakMap of SharedObjects to additional metadata\n     */\n    sharedObjectData = new WeakMap();\n    workers = new Map();\n    workerReadyPromises = new Map();\n    pendingAsyncMsgs = new Map();\n    nextAsyncMsgId = 0;\n    nextUniqueId = 0;\n    /**\n     * Suppress emitting events from SharedObjects\n     *\n     * @remarks\n     * This is used to prevent infinite loops when emitting events from a SharedObject\n     * that is shared with another worker.\n     *\n     * We set this to true when we receive a SharedObjectEmitMessage from another worker\n     * and set it back to false after we have emitted the event on the SharedObject.\n     */\n    suppressSharedObjectEmit = false;\n    constructor(options) {\n        this.workerId = options.workerId;\n        this.workerName = options.workerName;\n        this.nextUniqueId = options.workerId * 10000000000000 + 1;\n        this.sharedObjectFactory = options.sharedObjectFactory;\n        this.onSharedObjectCreated = options.onObjectShared;\n        this.onBeforeObjectForgotten = options.onBeforeObjectForgotten;\n        this.onUserMessage = options.onMessage;\n        const mySelf = resolvedGlobal;\n        if (isWebWorker(mySelf)) {\n            this.registerWorker('parent', mySelf);\n            this.sendMessage('parent', {\n                threadXMessageType: 'ready',\n            });\n        }\n    }\n    registerWorker(workerName, worker) {\n        this.workers.set(workerName, worker);\n        // Set up a promise that will resolve when the worker sends the\n        // 'ready' message\n        let readyResolve;\n        let readyPromise;\n        if (workerName === 'parent') {\n            // parent worker is always ready\n            readyPromise = Promise.resolve();\n            readyResolve = () => {\n                // do nothing\n            };\n        }\n        else {\n            readyPromise = new Promise((resolve) => {\n                readyResolve = resolve;\n            });\n        }\n        this.workerReadyPromises.set(workerName, {\n            promise: readyPromise,\n            resolve: readyResolve,\n        });\n        this.listenForWorkerMessages(workerName, worker);\n    }\n    closeWorker(workerName) {\n        if (!this.workers.has(workerName)) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        this.closeWorkerAsync(workerName).catch(console.error);\n    }\n    async closeWorkerAsync(workerName, timeout = 5000) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`Worker ${workerName} not registered.`);\n        }\n        const result = await Promise.race([\n            new Promise((resolve) => {\n                setTimeout(() => {\n                    resolve(false);\n                }, timeout);\n            }),\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'close',\n            }),\n        ]);\n        this.workers.delete(workerName);\n        this.workerReadyPromises.delete(workerName);\n        if (!result) {\n            console.warn(`threadX.closeWorkerAsync(): Worker \"${workerName}\" did not respond to \"close\" message within ${timeout}ms. Forcing termination.`);\n            worker.terminate?.();\n            return 'forced';\n        }\n        return 'graceful';\n    }\n    listenForWorkerMessages(workerName, worker) {\n        worker.addEventListener('message', (event) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            const { data } = event;\n            // Process only if message is a ThreadX message\n            const asyncMsgId = data.__asyncMsgId;\n            this.onMessage(workerName, data)\n                .then((response) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: response,\n                    });\n                }\n            })\n                .catch((error) => {\n                if (asyncMsgId !== undefined) {\n                    worker.postMessage({\n                        threadXMessageType: 'response',\n                        asyncMsgId: asyncMsgId,\n                        error: true,\n                        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n                        data: error,\n                    });\n                }\n            });\n        });\n    }\n    /**\n     * Share a SharedObject with a worker\n     *\n     * @param workerName Worker to share with\n     * @param sharedObject\n     */\n    async shareObjects(workerName, sharedObjects) {\n        for (const sharedObject of sharedObjects) {\n            if (this.sharedObjects.get(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                // TODO: Support sharing objects with multiple workers?\n                //   - Do we really need to do this?\n                console.warn(`ThreadX.shareObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is already shared.`);\n            }\n            else {\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: workerName,\n                    shareConfirmed: false,\n                    emitQueue: null,\n                });\n            }\n        }\n        await this.sendMessageAsync(workerName, {\n            threadXMessageType: 'shareObjects',\n            buffers: sharedObjects.map((so) => {\n                return SharedObject.extractBuffer(so);\n            }),\n        });\n        for (const sharedObject of sharedObjects) {\n            const soData = this.sharedObjectData.get(sharedObject);\n            if (soData) {\n                soData.shareConfirmed = true;\n                const { emitQueue } = soData;\n                if (emitQueue) {\n                    for (const event of emitQueue) {\n                        this.__sharedObjectEmit(sharedObject, event[0], event[1]);\n                    }\n                    soData.emitQueue = null;\n                }\n            }\n        }\n        // TODO: Handle case where worker fails to create shared object on its end\n        //  - We could issue you an error event back to the sharer\n    }\n    /**\n     * Tell ThreadX to forget about SharedObjects\n     *\n     * @remarks\n     * This causes ThreadX on the current worker and the worker that the object\n     * is shared with to forget about the object. It is up to the worker code to\n     * actually make sure that no other references to the SharedObjects exist so\n     * that they can be garbage collected.\n     *\n     * A worker can implement the onObjectForgotten() callback to be notified\n     * when a SharedObject is forgotten.\n     *\n     * @param sharedObject\n     * @param options Options\n     */\n    async forgetObjects(sharedObjects, options = {}) {\n        /**\n         * Map of worker name to array of SharedObjects\n         *\n         * @remarks\n         * We group the shared objects by worker so that we can send a single message\n         * to forget all of the objects shared with each worker.\n         */\n        const objectsByWorker = new Map();\n        for (const sharedObject of sharedObjects) {\n            if (!this.sharedObjects.has(sharedObject.id)) {\n                // Currently we only support sharing objects with only a single worker\n                if (!options.silent) {\n                    console.warn(`ThreadX.forgetObject(): SharedObject ${sharedObject.id} (TypeID: ${stringifyTypeId(sharedObject.typeId)}) is not shared.`);\n                }\n            }\n            else {\n                const soData = this.sharedObjectData.get(sharedObject);\n                assertTruthy(soData);\n                let objectsInWorker = objectsByWorker.get(soData.workerName);\n                if (!objectsInWorker) {\n                    objectsInWorker = [];\n                    objectsByWorker.set(soData.workerName, objectsInWorker);\n                }\n                objectsInWorker.push(sharedObject);\n                this.sharedObjects.delete(sharedObject.id);\n                this.sharedObjectData.delete(sharedObject);\n            }\n        }\n        const promises = [];\n        for (const [workerName, objectsInWorker] of objectsByWorker) {\n            promises.push(\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.sendMessageAsync(workerName, {\n                threadXMessageType: 'forgetObjects',\n                objectIds: objectsInWorker.map((so) => so.id),\n            }));\n        }\n        await Promise.all(promises);\n    }\n    sendMessage(workerName, message, transfer) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.sendMessage(): Worker '${workerName}' not registered.`);\n        }\n        this.sendMessageAsync(workerName, message, transfer, {\n            skipResponseWait: true,\n        }).catch(console.error);\n    }\n    async sendMessageAsync(workerName, message, transfer, options = {}) {\n        const worker = this.workers.get(workerName);\n        if (!worker) {\n            throw new Error(`ThreadX.execMessage(): Worker '${workerName}' not registered.`);\n        }\n        // Wait for the worker to be ready (if it isn't already)\n        // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n        await this.workerReadyPromises.get(workerName).promise;\n        if (options.skipResponseWait) {\n            worker.postMessage(message, transfer);\n            return;\n        }\n        const asyncMsgId = this.nextAsyncMsgId++;\n        const promise = new Promise((resolve, reject) => {\n            this.pendingAsyncMsgs.set(asyncMsgId, {\n                resolve,\n                reject,\n            });\n        });\n        message.__asyncMsgId = asyncMsgId;\n        worker.postMessage(message, transfer);\n        return promise;\n    }\n    async onMessage(srcWorkerName, message) {\n        if (isMessage('shareObjects', message)) {\n            message.buffers.forEach((buffer) => {\n                const sharedObject = this.sharedObjectFactory?.(buffer);\n                if (!sharedObject) {\n                    throw new Error('ThreadX.onMesasge(): Failed to create shared object.');\n                }\n                this.sharedObjects.set(sharedObject.id, sharedObject);\n                this.sharedObjectData.set(sharedObject, {\n                    workerName: srcWorkerName,\n                    shareConfirmed: true,\n                    emitQueue: null,\n                });\n                this.onSharedObjectCreated?.(sharedObject);\n            });\n        }\n        else if (isMessage('forgetObjects', message)) {\n            message.objectIds.forEach((id) => {\n                const sharedObject = this.sharedObjects.get(id);\n                if (!sharedObject) {\n                    // If we can't find the SharedObject then it wasn't shared with this\n                    // worker. Just ignore the message.\n                    return;\n                }\n                this.onBeforeObjectForgotten?.(sharedObject);\n                this.sharedObjects.delete(id);\n                sharedObject.destroy();\n            });\n        }\n        else if (isMessage('sharedObjectEmit', message)) {\n            const sharedObject = this.sharedObjects.get(message.sharedObjectId);\n            if (!sharedObject) {\n                // If we can't find the SharedObject then it wasn't shared with this\n                // worker. Just ignore the message.\n                return;\n            }\n            // Prevent emitting the event back to the worker that sent it.\n            this.suppressSharedObjectEmit = true;\n            sharedObject.emit(message.eventName, message.data);\n            this.suppressSharedObjectEmit = false;\n        }\n        else if (isMessage('response', message)) {\n            const response = this.pendingAsyncMsgs.get(message.asyncMsgId);\n            if (!response) {\n                throw new Error(`ThreadX.onMessage(): Received response for unknown request (ID: ${message.asyncMsgId})`);\n            }\n            this.pendingAsyncMsgs.delete(message.asyncMsgId);\n            if (message.error) {\n                response.reject(message.data);\n            }\n            else {\n                response.resolve(message.data);\n            }\n        }\n        else if (isMessage('close', message)) {\n            resolvedGlobal.close();\n            return true;\n        }\n        else if (isMessage('ready', message)) {\n            // Resolve the worker ready promise\n            this.workerReadyPromises.get(srcWorkerName)?.resolve();\n            return true;\n        }\n        else if (this.onUserMessage) {\n            return await this.onUserMessage(message);\n        }\n    }\n    getSharedObjectById(id) {\n        return this.sharedObjects.get(id) || null;\n    }\n    /**\n     * Generates an ID that is unique across all ThreadX workers.\n     *\n     * @remarks\n     * The ID is based on the `workerId` set in the `ThreadXOptions` and an\n     * incrementing counter. For the ID to actually be unique the `workerId` must\n     * also be unique.\n     *\n     * @returns A unique ID\n     */\n    generateUniqueId() {\n        return this.nextUniqueId++;\n    }\n    /**\n     * Emit an event from a SharedObject to all other workers\n     *\n     * @internalRemarks\n     * For internal ThreadX use only.\n     *\n     * Since we aren't sure what workers are sharing a SharedObject we need to\n     * emit the event to all workers. (TODO: Possible optimization?)\n     *\n     * @param sharedObject\n     * @param eventName\n     * @param data\n     * @returns\n     */\n    __sharedObjectEmit(sharedObject, eventName, data) {\n        // If we are currently emitting an event from a SharedObject that originated\n        // from another worker then we don't want to emit the event again.\n        if (this.suppressSharedObjectEmit) {\n            return;\n        }\n        const soData = this.sharedObjectData.get(sharedObject);\n        if (!soData) {\n            // Object isn't shared with any workers yet. Not even in process to do so.\n            // Just ignore the emit.\n            return;\n        }\n        if (!soData.shareConfirmed) {\n            // Object is in the process of being shared with other workers. Queue the\n            // emit until the share is confirmed.\n            if (!soData.emitQueue) {\n                soData.emitQueue = [];\n            }\n            soData.emitQueue.push([eventName, data]);\n            return;\n        }\n        const worker = this.workers.get(soData.workerName);\n        assertTruthy(worker, 'Worker not found');\n        worker.postMessage({\n            threadXMessageType: 'sharedObjectEmit',\n            sharedObjectId: sharedObject.id,\n            eventName,\n            data,\n        });\n    }\n}\n//# sourceMappingURL=ThreadX.js.map","/*\n * Copyright 2023 Comcast Cable Communications Management, LLC\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n *\n * SPDX-License-Identifier: Apache-2.0\n */\nimport { ThreadX } from './ThreadX.js';\nimport { stringifyTypeId } from './buffer-struct-utils.js';\nconst TYPEID_INT32_INDEX = 0;\nconst NOTIFY_INT32_INDEX = 1;\nconst LOCK_INT32_INDEX = 2;\nconst DIRTY_INT32_INDEX = 6;\nconst ID_FLOAT64_INDEX = 2;\nconst MAX_STRING_SIZE = 255;\n// eslint-disable-next-line @typescript-eslint/no-unused-vars\nfunction valueIsType(expectedType, type, value) {\n    return expectedType === type;\n}\nfunction valuesAreEqual(a, b) {\n    return a === b;\n}\nexport function structProp(type, options) {\n    return function (target, key, descriptor) {\n        const constructor = target.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        let byteOffset = constructor.size;\n        let offset = 0;\n        let byteSize = 0;\n        if (type === 'string') {\n            byteOffset += byteOffset % 2;\n            offset = byteOffset / 2;\n            byteSize = (MAX_STRING_SIZE + 1) * 2; // 16-bits for size then 255 16-bit characters\n        }\n        else if (type === 'int32' || type === 'boolean') {\n            byteOffset += byteOffset % 4;\n            offset = byteOffset / 4;\n            byteSize = 4;\n        }\n        else if (type === 'number') {\n            byteOffset += byteOffset % 8;\n            offset = byteOffset / 8;\n            byteSize = 8;\n        }\n        const propDefs = constructor.propDefs;\n        const propNum = propDefs.length;\n        const propDef = {\n            propNum,\n            name: key,\n            type,\n            byteOffset: byteOffset,\n            offset: offset,\n            byteSize: byteSize,\n        };\n        propDefs.push(propDef);\n        // console.log(constructor.size, byteOffset, byteSize, propDef);\n        constructor.size = byteOffset + byteSize;\n        // TODO: Move the descriptors to the prototype to avoid code duplication/closures\n        descriptor.get = function () {\n            let value;\n            if (type === 'string') {\n                const length = this.uint16array[offset];\n                if (!length)\n                    return '';\n                if (length > MAX_STRING_SIZE) {\n                    // This should never happen because we truncate the string when setting it\n                    throw new Error(`get SharedObject.${key}: Text length is too long. Length: ${length}`);\n                }\n                value = String.fromCharCode(...this.uint16array.slice(offset + 1, offset + 1 + length));\n            }\n            else if (type === 'int32') {\n                value = this.int32array[offset];\n            }\n            else if (type === 'boolean') {\n                value = !!this.int32array[offset];\n            }\n            else if (type === 'number') {\n                value = this.float64array[offset];\n            }\n            if (options?.bufferToProp) {\n                value = options.bufferToProp(value);\n            }\n            return value;\n        };\n        descriptor.set = function (value) {\n            if (options?.propToBuffer) {\n                value = options.propToBuffer(value);\n            }\n            if (valueIsType('string', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    // Copy string into shared memory in the most efficient way possible\n                    let length = value.length;\n                    if (length > MAX_STRING_SIZE) {\n                        console.error(`set SharedObject.${key}: Text length is too long. Truncating...`, length);\n                        length = MAX_STRING_SIZE;\n                    }\n                    this.uint16array[offset] = length;\n                    const startOffset = offset + 1;\n                    const endOffset = startOffset + length;\n                    let charIndex = 0;\n                    for (let i = startOffset; i < endOffset; i++) {\n                        this.uint16array[i] = value.charCodeAt(charIndex++);\n                    }\n                }\n            }\n            else if (valueIsType('int32', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value;\n                }\n            }\n            else if (valueIsType('boolean', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.int32array[offset] = value ? 1 : 0;\n                }\n            }\n            else if (valueIsType('number', type, value)) {\n                if (!valuesAreEqual(value, this[key])) {\n                    this.setDirty(propNum);\n                    this.float64array[offset] = value;\n                }\n            }\n        };\n    };\n}\n/**\n * BufferStruct Header Structure:\n * Int32[0]\n *   Type ID: Type of object (32-bit identifier)\n * Int32[1]\n *    Notify / Last Mutator Worker ID\n * Int32[2]\n *    Lock\n * Int32[3]\n *    RESERVED (64-bit align)\n * Int32[4 - 5] / Float64[ID_FLOAT64_INDEX = 2]\n *    Shared Unique ID of the object\n * Int32[DIRTY_INT32_INDEX = 6]\n *    Dirty Bit Mask 1 (Property Indices 0-31)\n * Int32[DIRTY_INT32_INDEX + 1 = 7]\n *    Dirty Bit Mask 2 (Property Indices 32-63)\n *\n * HEADER SIZE MUST BE A MULTIPLE OF 8 BYTES (64-BIT ALIGNMENT)\n */\nclass BufferStruct {\n    buffer;\n    // Lock ID that is a valid 32-bit random integer\n    lockId = Math.floor(Math.random() * 0xffffffff);\n    uint16array;\n    int32array;\n    float64array;\n    static staticInitialized = false;\n    static typeId = 0;\n    static typeIdStr = '';\n    static size = 8 * 4; // Header size\n    static propDefs = [];\n    constructor(buffer) {\n        const constructor = this.constructor;\n        // Make sure the static initializer has been called. We must check that the\n        // constructor directly has its \"own property\" because it may be inherited\n        // from a parent class.\n        if (!Object.prototype.hasOwnProperty.call(constructor, 'staticInitialized') ||\n            !constructor.staticInitialized) {\n            constructor.initStatic();\n        }\n        const isNew = !buffer;\n        if (!buffer) {\n            // Round constructor.size to the nearest multiple of 8 bytes (64-bit alignment)\n            buffer = new SharedArrayBuffer(Math.ceil(constructor.size / 8) * 8);\n        }\n        this.buffer = buffer;\n        this.uint16array = new Uint16Array(buffer);\n        this.int32array = new Int32Array(buffer);\n        this.float64array = new Float64Array(buffer);\n        const typeId = constructor.typeId;\n        // If this is a new buffer, initialize the TypeID and ID\n        if (isNew) {\n            this.int32array[TYPEID_INT32_INDEX] = typeId;\n            this.float64array[ID_FLOAT64_INDEX] = ThreadX.instance.generateUniqueId();\n        }\n        else if (this.int32array[TYPEID_INT32_INDEX] !== typeId) {\n            // If this is an existing buffer, verify the TypeID is the same as expected\n            // by this class\n            throw new Error(`BufferStruct: TypeId mismatch. Expected '${constructor.typeIdStr}', got '${stringifyTypeId(this.int32array[TYPEID_INT32_INDEX])}'`);\n        }\n    }\n    /**\n     * Safely extract the TypeID from any SharedArrayBuffer (as if it is a BufferStruct)\n     *\n     * @remarks\n     * Does not check if the TypeID is valid however it does a basic sanity check to\n     * ensure the buffer is large enough to contain the TypeID at Int32[TYPEID_INT32_INDEX].\n     *\n     * If the buffer is found to be invalid, 0 is returned.\n     *\n     * @param buffer\n     * @returns\n     */\n    static extractTypeId(buffer) {\n        if (buffer.byteLength < BufferStruct.size || buffer.byteLength % 8 !== 0) {\n            return 0;\n        }\n        return new Int32Array(buffer)[TYPEID_INT32_INDEX] || 0;\n    }\n    /**\n     * Checks if typeId is valid and sets up static properties when the first\n     * structProp() decorator is set-up on the class.\n     *\n     * @remarks\n     * WARNING: This should not ever be called directly.\n     *\n     * @internal\n     */\n    static initStatic() {\n        const typeIdStr = stringifyTypeId(this.typeId);\n        if (typeIdStr === '????') {\n            throw new Error('BufferStruct.typeId must be set to a valid 32-bit integer');\n        }\n        this.typeIdStr = typeIdStr;\n        this.propDefs = [...this.propDefs];\n        this.staticInitialized = true;\n    }\n    setDirty(propIndex) {\n        const dirtyWordOffset = Math.floor(propIndex / 32);\n        const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n        this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] =\n            this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] |\n                (1 << dirtyBitOffset);\n    }\n    resetDirty() {\n        // TODO: Do we need to use atomics here?\n        this.int32array[NOTIFY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX] = 0;\n        this.int32array[DIRTY_INT32_INDEX + 1] = 0;\n    }\n    isDirty(propIndex) {\n        if (propIndex !== undefined) {\n            const dirtyWordOffset = Math.floor(propIndex / 32);\n            const dirtyBitOffset = propIndex - dirtyWordOffset * 32;\n            return !!(this.int32array[DIRTY_INT32_INDEX + dirtyWordOffset] &\n                (1 << dirtyBitOffset));\n        }\n        return !!(this.int32array[DIRTY_INT32_INDEX] ||\n            this.int32array[DIRTY_INT32_INDEX + 1]);\n    }\n    get typeId() {\n        // Atomic load not required here because typeId is constant\n        return this.int32array[TYPEID_INT32_INDEX];\n    }\n    get id() {\n        // Atomic load not required here because id is constant\n        return this.float64array[ID_FLOAT64_INDEX];\n    }\n    /**\n     * Returns the current notify value\n     */\n    get notifyValue() {\n        return Atomics.load(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    /**\n     * Returns true if the BufferStruct is currently locked\n     */\n    get isLocked() {\n        return Atomics.load(this.int32array, LOCK_INT32_INDEX) !== 0;\n    }\n    lock(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            try {\n                Atomics.wait(this.int32array, LOCK_INT32_INDEX, origLock);\n            }\n            catch (e) {\n                if (e instanceof TypeError &&\n                    e.message === 'Atomics.wait cannot be called in this context') {\n                    // Atomics.wait() not supported in this context (main worker), so just spin\n                    // TODO: Maybe we detect this earlier and avoid this exception? This works for now.\n                }\n                else {\n                    throw e;\n                }\n            }\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    async lockAsync(callback) {\n        let origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        while (origLock !== 0) {\n            const result = Atomics.waitAsync(this.int32array, LOCK_INT32_INDEX, origLock);\n            await result.value;\n            origLock = Atomics.compareExchange(this.int32array, LOCK_INT32_INDEX, 0, this.lockId);\n        }\n        let result;\n        try {\n            result = await callback();\n        }\n        finally {\n            Atomics.store(this.int32array, LOCK_INT32_INDEX, 0);\n            Atomics.notify(this.int32array, LOCK_INT32_INDEX);\n        }\n        return result;\n    }\n    notify(value) {\n        if (value !== undefined) {\n            Atomics.store(this.int32array, NOTIFY_INT32_INDEX, value);\n        }\n        return Atomics.notify(this.int32array, NOTIFY_INT32_INDEX);\n    }\n    wait(expectedValue, timeout = Infinity) {\n        const result = Atomics.wait(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result;\n    }\n    async waitAsync(expectedValue, timeout = Infinity) {\n        const result = Atomics.waitAsync(this.int32array, NOTIFY_INT32_INDEX, expectedValue, timeout);\n        return result.value;\n    }\n}\nexport { BufferStruct };\n//# sourceMappingURL=BufferStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { BufferStruct, structProp, genTypeId } from '@lightningjs/threadx';\nexport class NodeStruct extends BufferStruct {\n    static typeId = genTypeId('NODE');\n    get x() {\n        return 0;\n    }\n    set x(value) {\n        // Decorator will handle this\n    }\n    get y() {\n        return 0;\n    }\n    set y(value) {\n        // Decorator will handle this\n    }\n    get width() {\n        return 0;\n    }\n    set width(value) {\n        // Decorator will handle this\n    }\n    get height() {\n        return 0;\n    }\n    set height(value) {\n        // Decorator will handle this\n    }\n    get alpha() {\n        return 1;\n    }\n    set alpha(value) {\n        // Decorator will handle this\n    }\n    get clipping() {\n        return false;\n    }\n    set clipping(value) {\n        // Decorator will handle this\n    }\n    get color() {\n        return 0;\n    }\n    set color(value) {\n        // Decorator will handle this\n    }\n    get colorTop() {\n        return 0;\n    }\n    set colorTop(value) {\n        // Decorator will handle this\n    }\n    get colorBottom() {\n        return 0;\n    }\n    set colorBottom(value) {\n        // Decorator will handle this\n    }\n    get colorLeft() {\n        return 0;\n    }\n    set colorLeft(value) {\n        // Decorator will handle this\n    }\n    get colorRight() {\n        return 0;\n    }\n    set colorRight(value) {\n        // Decorator will handle this\n    }\n    get colorTl() {\n        return 0;\n    }\n    set colorTl(value) {\n        // Decorator will handle this\n    }\n    get colorTr() {\n        return 0;\n    }\n    set colorTr(value) {\n        // Decorator will handle this\n    }\n    get colorBl() {\n        return 0;\n    }\n    set colorBl(value) {\n        // Decorator will handle this\n    }\n    get colorBr() {\n        return 0;\n    }\n    set colorBr(value) {\n        // Decorator will handle this\n    }\n    get scale() {\n        return 1;\n    }\n    set scale(value) {\n        // Decorator will handle this\n    }\n    get mount() {\n        return 0;\n    }\n    set mount(value) {\n        // Decorator will handle this\n    }\n    get mountX() {\n        return 0;\n    }\n    set mountX(value) {\n        // Decorator will handle this\n    }\n    get mountY() {\n        return 0;\n    }\n    set mountY(value) {\n        // Decorator will handle this\n    }\n    get pivot() {\n        return 0.5;\n    }\n    set pivot(value) {\n        // Decorator will handle this\n    }\n    get pivotX() {\n        return 0.5;\n    }\n    set pivotX(value) {\n        // Decorator will handle this\n    }\n    get pivotY() {\n        return 0.5;\n    }\n    set pivotY(value) {\n        // Decorator will handle this\n    }\n    get rotation() {\n        return 0;\n    }\n    set rotation(value) {\n        // Decorator will handle this\n    }\n    get parentId() {\n        return 0;\n    }\n    set parentId(value) {\n        // Decorator will handle this\n    }\n    get zIndex() {\n        return 0;\n    }\n    set zIndex(value) {\n        // Decorator will handle this\n    }\n    get zIndexLocked() {\n        return 0;\n    }\n    set zIndexLocked(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"x\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"y\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"width\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"height\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"alpha\", null);\n__decorate([\n    structProp('boolean')\n], NodeStruct.prototype, \"clipping\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"color\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTop\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBottom\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorLeft\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorRight\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorTr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBl\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"colorBr\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"scale\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mount\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"mountY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivot\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotX\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"pivotY\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"rotation\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"parentId\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndex\", null);\n__decorate([\n    structProp('number')\n], NodeStruct.prototype, \"zIndexLocked\", null);\n//# sourceMappingURL=NodeStruct.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SharedObject } from '@lightningjs/threadx';\nexport class SharedNode extends SharedObject {\n    /**\n     * Must have lock on sharedNode before calling constructor!\n     *\n     * @param sharedNodeStruct\n     */\n    constructor(sharedNodeStruct, extendedCurProps) {\n        super(sharedNodeStruct, {\n            ...extendedCurProps,\n            x: sharedNodeStruct.x,\n            y: sharedNodeStruct.y,\n            width: sharedNodeStruct.width,\n            height: sharedNodeStruct.height,\n            alpha: sharedNodeStruct.alpha,\n            clipping: sharedNodeStruct.clipping,\n            color: sharedNodeStruct.color,\n            colorTop: sharedNodeStruct.colorTop,\n            colorBottom: sharedNodeStruct.colorBottom,\n            colorLeft: sharedNodeStruct.colorLeft,\n            colorRight: sharedNodeStruct.colorRight,\n            colorTl: sharedNodeStruct.colorTl,\n            colorTr: sharedNodeStruct.colorTr,\n            colorBl: sharedNodeStruct.colorBl,\n            colorBr: sharedNodeStruct.colorBr,\n            parentId: sharedNodeStruct.parentId,\n            zIndex: sharedNodeStruct.zIndex,\n            zIndexLocked: sharedNodeStruct.zIndexLocked,\n            scale: sharedNodeStruct.scale,\n            mount: sharedNodeStruct.mount,\n            mountX: sharedNodeStruct.mountX,\n            mountY: sharedNodeStruct.mountY,\n            pivot: sharedNodeStruct.pivot,\n            pivotX: sharedNodeStruct.pivotX,\n            pivotY: sharedNodeStruct.pivotY,\n            rotation: sharedNodeStruct.rotation,\n        });\n    }\n}\n//# sourceMappingURL=SharedNode.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar __decorate = (this && this.__decorate) || function (decorators, target, key, desc) {\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\n};\nimport { structProp, genTypeId } from '@lightningjs/threadx';\nimport { NodeStruct } from './NodeStruct.js';\nexport class TextNodeStruct extends NodeStruct {\n    static typeId = genTypeId('TEXT');\n    get text() {\n        return '';\n    }\n    set text(value) {\n        // Decorator will handle this\n    }\n    get textRendererOverride() {\n        return null;\n    }\n    set textRendererOverride(value) {\n        // Decorator will handle this\n    }\n    get fontSize() {\n        return 0;\n    }\n    set fontSize(value) {\n        // Decorator will handle this\n    }\n    get fontFamily() {\n        return '';\n    }\n    set fontFamily(value) {\n        // Decorator will handle this\n    }\n    get fontStretch() {\n        return 'normal';\n    }\n    set fontStretch(value) {\n        // Decorator will handle this\n    }\n    get fontStyle() {\n        return 'normal';\n    }\n    set fontStyle(value) {\n        // Decorator will handle this\n    }\n    get fontWeight() {\n        return 'normal';\n    }\n    set fontWeight(value) {\n        // Decorator will handle this\n    }\n    get textAlign() {\n        return 'left';\n    }\n    set textAlign(value) {\n        // Decorator will handle this\n    }\n    get contain() {\n        return 'none';\n    }\n    set contain(value) {\n        // Decorator will handle this\n    }\n    get scrollable() {\n        return false;\n    }\n    set scrollable(value) {\n        // Decorator will handle this\n    }\n    get scrollY() {\n        return 0;\n    }\n    set scrollY(value) {\n        // Decorator will handle this\n    }\n    get offsetY() {\n        return 0;\n    }\n    set offsetY(value) {\n        // Decorator will handle this\n    }\n    get letterSpacing() {\n        return 0;\n    }\n    set letterSpacing(value) {\n        // Decorator will handle this\n    }\n}\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"text\", null);\n__decorate([\n    structProp('string', {\n        propToBuffer(value) {\n            // Property accepts `null` but the buffer only accepts a string.\n            // Encode `null` as a special string\n            return value ?? '$$null';\n        },\n        bufferToProp(value) {\n            return value === '$$null' ? null : value;\n        },\n    })\n], TextNodeStruct.prototype, \"textRendererOverride\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"fontSize\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontFamily\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStretch\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontStyle\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"fontWeight\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"textAlign\", null);\n__decorate([\n    structProp('string')\n], TextNodeStruct.prototype, \"contain\", null);\n__decorate([\n    structProp('boolean')\n], TextNodeStruct.prototype, \"scrollable\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"scrollY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"offsetY\", null);\n__decorate([\n    structProp('number')\n], TextNodeStruct.prototype, \"letterSpacing\", null);\n//# sourceMappingURL=TextNodeStruct.js.map"],"file":"assets/TextNodeStruct-87d01114.js"}