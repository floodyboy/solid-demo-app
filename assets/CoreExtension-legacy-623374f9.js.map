{"version":3,"file":"CoreExtension-legacy-623374f9.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.5.0/node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport function createWebGLContext(canvas) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    return (\n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config)));\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n/**\n * Converts degrees to radians\n *\n * @param degrees\n * @returns\n */\nexport function deg2Rad(degrees) {\n    return (degrees * Math.PI) / 180;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\nexport function getNormalizedAlphaComponent(rgba) {\n    return (rgba & 0xff) / 255.0;\n}\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function intersectBound(a, b) {\n    const intersection = {\n        x1: Math.max(a.x1, b.x1),\n        y1: Math.max(a.y1, b.y1),\n        x2: Math.min(a.x2, b.x2),\n        y2: Math.min(a.y2, b.y2),\n    };\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return {\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n    };\n}\nexport function intersectRect(a, b) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = (str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n};\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    constructor(textureSource) {\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\nexport function createProgram(gl, vertexShader, fragmentShader) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    gl;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const gl = (this.gl = this.renderer.gl);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = isWebGl2(gl);\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!gl.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(gl, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = gl.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            gl.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = gl.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = gl.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = gl.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const gl = this.gl;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.gl.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { gl } = renderOp;\n        // Bind standard automatic uniforms\n        this.setUniform('u_resolution', [gl.canvas.width, gl.canvas.height]); // !!!\n        this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, ...value) {\n        // @ts-expect-error Typing of args is too funky apparently for TS\n        this.gl[this.uniformTypes[name]](this.uniformLocations[name], ...value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.gl.useProgram(this.program);\n        if (isWebGl2(this.gl) && this.vao) {\n            this.gl.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    gl;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(gl, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex) {\n        super();\n        this.gl = gl;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.gl = gl;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { gl, shader, shaderProps, options } = this;\n        // shaderOp.draw(this);\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // TODO: Move these somewhere else?\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // Clipping\n        if (this.clippingRect) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        gl.drawElements(gl.TRIANGLES, 6 * this.numQuads, gl.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param gl\n */\nexport function getWebGlParameters(gl) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = gl.getParameter(gl[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param gl\n */\nexport function getWebGlExtensions(gl) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = gl.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n * @param size\n */\nexport function createIndexBuffer(gl, size) {\n    if (!gl) {\n        throw new Error('No WebGL context');\n    }\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    gl;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(gl, textureSource) {\n        super(textureSource);\n        this.gl = gl;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        const { gl } = this;\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        // linear texture filtering\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        // texture wrapping method\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        const textureData = await this.textureSource?.getTextureData();\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (isWebGl2(gl) || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        this.gl.deleteTexture(this._nativeCtxTexture);\n        this._nativeCtxTexture = null;\n    }\n    createNativeCtxTexture() {\n        const nativeTexture = this.gl.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'loading';\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture, } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(gl, textureSource) {\n        super(gl, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    gl;\n    system;\n    //// Core Managers\n    txManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    renderables = [];\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        const gl = createWebGLContext(canvas);\n        if (!gl) {\n            throw new Error('Unable to create WebGL context');\n        }\n        this.gl = gl;\n        const color = getNormalizedRgbaComponents(clearColor);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.clearColor(color[0], color[1], color[2], color[3]);\n        createIndexBuffer(gl, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(gl),\n            extensions: getWebGlExtensions(gl),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShaderBatched').shader;\n        const quadBuffer = gl.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: gl.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.gl, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.gl, textureSource);\n    }\n    /**\n     * Add a renderable to the current set of renderables.\n     *\n     * @remarks\n     * If a {@link QuadOptions} structure is provided, this will ultimately result\n     * in a render ops being created, merged and added to the render ops list.\n     *\n     * If a direct {@link WebGlCoreRenderOp} instance is provided, it will be\n     * added to the render ops list as-is. Be sure to set the zIndex correctly of\n     * the render op to ensure proper rendering order.\n     *\n     * @param renderable\n     */\n    addRenderable(renderable) {\n        this.renderables?.push(renderable);\n    }\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, clippingRect, tx, ty, ta, tb, tc, td, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (curRenderOp) {\n            // If the current render op is not the same shader, create a new one\n            // If the current render op's shader props are not compatible with the\n            // the new shader props, create a new one render op.\n            if (curRenderOp.shader !== targetShader ||\n                !compareRect(curRenderOp.clippingRect, clippingRect) ||\n                (curRenderOp.shader !== this.defaultShader &&\n                    (!shaderProps ||\n                        !curRenderOp.shader.canBatchShaderProps(curRenderOp.shaderProps, shaderProps)))) {\n                curRenderOp = null;\n            }\n        }\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n        if (!curRenderOp) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTl, alpha, true); // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta;\n            fQuadBuffer[bufferIdx++] = ty + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBl, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = tx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = ty + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = tx + width * ta;\n            const rightCornerY = ty + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = tx; // vertexX\n            fQuadBuffer[bufferIdx++] = ty; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTl, alpha, true); // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = ty;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = tx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBl, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx) {\n        const curRenderOp = new WebGlCoreRenderOp(this.gl, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Sort renderable children and add them to the render ops.\n     * @todo:\n     * - move to merge sort to keep relative order\n     * - support z-index parent locking\n     *\n     */\n    sortRenderables() {\n        const { renderables } = this;\n        renderables.sort((a, b) => a.zIndex - b.zIndex);\n        renderables.forEach((renderable) => {\n            if (renderable instanceof WebGlCoreRenderOp) {\n                this.renderOps.push(renderable);\n                this.curRenderOp = null;\n            }\n            else {\n                this.addQuad(renderable);\n            }\n        });\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { gl, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, arr, gl.DYNAMIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('renderOp', i, renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        // clean up\n        this.renderables = [];\n    }\n}\nconst idx = 0;\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    kernings;\n    constructor(data) {\n        super();\n        this.data = data;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.data.chars.find((char) => char.id === codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        // TODO: Add texture loaded support\n        // this.texture.on('loaded', () => {\n        //   this.checkLoaded();\n        // });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data);\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n            });\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if ( /*this.texture.loaded && */this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["assertTruthy","condition","message","Error","mergeColorAlphaPremultiplied","rgba","alpha","flipEndianess","arguments","length","undefined","newAlpha","r","Math","trunc","g","b","a","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","intersection","x1","max","y1","x2","min","y2","bound","color","floor","concat","toFixed","x","y","width","height","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","round","isPowerOfTwo","value","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbxd","dx","t","it","minT","maxT","exports","str","s","indexOf","parts","substr","split","console","warn","parseFloat","isNaN","hypot","_len","args","Array","_key","i","sqrt","EventEmitter","_classCallCheck","this","_defineProperty","_createClass","key","event","listener","listeners","eventListeners","push","index","splice","_this","on","onceListener","target","data","off","_this2","_toConsumableArray","forEach","CoreContextTexture","textureSource","CoreRenderer","stage","CoreRenderOp","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","isWebGl2","self","WebGL2RenderingContext","WebGlCoreShader","_CoreShader","_inherits","_super","_createSuper","options","_this3","_assertThisInitialized","renderer","supportsIndexedTextures","webGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","constructor","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","program","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","vao","createVertexArray","bindVertexArray","attributeLocations","attributeBuffers","attributeNames","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniformLocations","uniformTypes","uniforms","uniform","getUniformLocation","attribute","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","size","normalized","stride","offset","disableVertexAttribArray","loc","disableAttribute","boundBufferCollection","propsA","propsB","renderOp","props","bindBufferCollection","buffers","textures","bindTextures","setUniform","canvas","pixelRatio","dimensions","$dimensions","$alpha","bindProps","_this$gl","_len2","_key2","apply","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","bindBufferAttribute","useProgram","disableAttributes","CoreShader","WebGlCoreRenderOp","_CoreRenderOp","_super2","shaderProps","clippingRect","bufferIdx","zIndex","_this4","maxTextures","getParameter","texture","existingIdx","findIndex","newIdx","shManager","useShader","bindRenderOp","quadIdx","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","_this$clippingRect","canvasHeight","clipX","clipWidth","clipHeight","clipY","SCISSOR_TEST","scissor","disable","drawElements","TRIANGLES","numQuads","UNSIGNED_SHORT","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","_CoreContextTexture","_super3","_onLoadRequest","_this5","get","_state","load","_nativeCtxTexture","_w","_h","_this6","setState","onLoadRequest","then","_ref","catch","err","error","_asyncToGenerator","_regeneratorRuntime","mark","_callee","_this$textureSource","textureData","wrap","_context","prev","next","createNativeCtxTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","getTextureData","sent","ImageBitmap","ImageData","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","abrupt","stop","deleteTexture","nativeTexture","createTexture","Texture","_EventEmitter","_super4","txManager","_this7","state","_len3","_key3","loadedArgs","failedArgs","emit","ColorTexture","_Texture","_getTextureData","_super5","_this8","resolveDefaults","set","_callee2","pixelData32","pixelData8","_callee2$","_context2","Uint32Array","Uint8ClampedArray","resolvedProps","SubTexture","_Texture2","_super6","_getTextureData2","_this9","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","_callee3","_callee3$","_context3","WebGlCoreCtxSubTexture","_WebGlCoreCtxTexture","_super7","_onLoadRequest2","_callee4","_props$data","_props$data2","_callee4$","_context4","getNormalizedRgbaComponents","BufferCollection","config","_this$config$find","find","item","_this$config$find2","WebGlCoreRenderer","_CoreRenderer","_super8","_this10","ArrayBuffer","Float32Array","quadBuffer","clearColor","bufferMemory","defaultTexture","antialias","depth","stencil","desynchronized","failIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","preserveDrawingBuffer","getContext","createWebGLContext","viewport","maxQuads","indices","Uint16Array","j","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","createIndexBuffer","defaultShader","loadShader","BYTES_PER_ELEMENT","quadBufferCollection","a_position","FLOAT","a_textureCoordinate","a_color","a_textureIndex","curBufferIdx","curRenderOp","renderOps","clear","COLOR_BUFFER_BIT","renderable","_this$renderables","renderables","_texture","_textureOptions$flipX","_textureOptions$flipY","fQuadBuffer","uiQuadBuffer","colorTl","colorTr","colorBl","colorBr","textureOptions","tx","ty","ta","tb","tc","td","targetDims","targetShader","canBatchShaderProps","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","_texture$props","tw","th","_ref2","_ref2$width","parentW","_ref2$height","parentH","_ref3","_ref4","ctxTexture","getCtxTexture","textureIdx","addTexture","rightCornerX","rightCornerY","recursive","_this11","sort","addQuad","_this$quadBufferColle","arr","DYNAMIC_DRAW","draw","TrFontFace","_EventEmitter2","_super9","fontFamily","descriptors","_this12","_objectSpread","style","weight","stretch","unicodeRange","variant","featureSettings","display","SpecialCodepoints","SdfFontShaper","_FontShaper","_super10","_this13","kernings","kerning","second","first","amount","shapeText","codepoints","_this14","codepointResult","lastGlyphId","_loop","_context6","codepoint","glyph","_this14$kernings$glyp","_context5","chars","char","id","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","peek","done","delegateYield","FontShaper","SdfTrFontFace","_TrFontFace","_super11","atlasUrl","atlasDataUrl","_this15","Map","src","preload","fetch","_ref5","_callee5","response","_callee5$","_context7","json","shaper","glyphMap","checkLoaded","_x","loaded","_TrFontFace2","WebTrFontFace","_super12","fontUrl","_this16","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","fontFace","FontFace","CoreExtension"],"mappings":"y6TAgDO,SAASA,EAAaC,EAAWC,GACpC,IAAKD,EACD,MAAU,IAAAE,MAAMD,GAAW,mBAEnC,CAyEO,SAASE,EAA6BC,EAAMC,GAA8B,IAAvBC,EAAaC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC7DG,GAAoB,IAAPN,GAAe,IAAOC,EACnCM,EAAIC,KAAKC,OAAOT,IAAS,IAAMM,GAC/BI,EAAIF,KAAKC,OAAQT,IAAS,GAAM,KAAQM,GACxCK,EAAIH,KAAKC,OAAQT,IAAS,EAAK,KAAQM,GACvCM,EAAIJ,KAAKC,MAAiB,IAAXH,GACrB,OAAIJ,GACSU,GAAK,GAAOD,GAAK,GAAOD,GAAK,EAAKH,KAAO,GAE7CA,GAAK,GAAOG,GAAK,GAAOC,GAAK,EAAKC,KAAO,CACtD,CAQO,SAASC,EAAOC,EAAKC,GACxB,OAAOC,OAAOC,UAAUC,eAAeC,KAAKL,EAAKC,EACrD,UC9EO,SAAwBH,EAAGD,GAC9B,IAAMS,EAAe,CACjBC,GAAIb,KAAKc,IAAIV,EAAES,GAAIV,EAAEU,IACrBE,GAAIf,KAAKc,IAAIV,EAAEW,GAAIZ,EAAEY,IACrBC,GAAIhB,KAAKiB,IAAIb,EAAEY,GAAIb,EAAEa,IACrBE,GAAIlB,KAAKiB,IAAIb,EAAEc,GAAIf,EAAEe,KAEzB,GAAIN,EAAaC,GAAKD,EAAaI,IAAMJ,EAAaG,GAAKH,EAAaM,GACpE,OAAON,EAEX,MAAO,CACHC,GAAI,EACJE,GAAI,EACJC,GAAI,EACJE,GAAI,EAEZ,IA8BO,SAAyBC,GAC5B,OAAOA,EAAMN,GAAKM,EAAMH,IAAMG,EAAMJ,GAAKI,EAAMD,EACnD,IDrBO,SAAyB1B,EAAMC,GAClC,IAAMM,EAAIP,IAAS,GACbU,EAAKV,IAAS,GAAM,IACpBW,EAAKX,IAAS,EAAK,IACnBY,EAAIJ,KAAKC,OAAc,IAAPT,GAAeC,GACrC,OAASM,GAAK,GAAOG,GAAK,GAAOC,GAAK,EAAKC,KAAO,CACtD,ICxCO,SAAuBgB,GAC1B,IAAMrB,EAAIC,KAAKqB,MAAiB,IAAXD,EAAM,IACrBlB,EAAIF,KAAKqB,MAAiB,IAAXD,EAAM,IACrBjB,EAAIH,KAAKqB,MAAiB,IAAXD,EAAM,IACrBhB,EAAIJ,KAAKqB,MAAiB,IAAXD,EAAM,IAC3B,MAAA,QAAAE,OAAevB,EAAC,KAAAuB,OAAIpB,EAACoB,KAAAA,OAAInB,OAACmB,OAAIlB,EAAEmB,QAAQ,GAAE,IAC9C,IAkBO,SAAuBnB,EAAGD,GAC7B,IAAMqB,EAAIxB,KAAKc,IAAIV,EAAEoB,EAAGrB,EAAEqB,GACpBC,EAAIzB,KAAKc,IAAIV,EAAEqB,EAAGtB,EAAEsB,GACpBC,EAAQ1B,KAAKiB,IAAIb,EAAEoB,EAAIpB,EAAEsB,MAAOvB,EAAEqB,EAAIrB,EAAEuB,OAASF,EACjDG,EAAS3B,KAAKiB,IAAIb,EAAEqB,EAAIrB,EAAEuB,OAAQxB,EAAEsB,EAAItB,EAAEwB,QAAUF,EAC1D,GAAIC,EAAQ,GAAKC,EAAS,EACtB,MAAO,CACHH,EAAAA,EACAC,EAAAA,EACAC,MAAAA,EACAC,OAAAA,GAGR,MAAO,CACHH,EAAG,EACHC,EAAG,EACHC,MAAO,EACPC,OAAQ,EAEhB,IDrCO,SAA4BC,EAAOC,EAAOC,GAC7C,IAAMC,EAAK/B,KAAKC,MAAM2B,IAAU,IAC1BI,EAAKhC,KAAKC,MAAO2B,IAAU,GAAM,KACjCK,EAAKjC,KAAKC,MAAO2B,IAAU,EAAK,KAChCM,EAAKlC,KAAKC,MAAc,IAAR2B,GAChBO,EAAKnC,KAAKC,MAAM4B,IAAU,IAC1BO,EAAKpC,KAAKC,MAAO4B,IAAU,GAAM,KACjCQ,EAAKrC,KAAKC,MAAO4B,IAAU,EAAK,KAChCS,EAAKtC,KAAKC,MAAc,IAAR4B,GAChB9B,EAAIC,KAAKuC,MAAMJ,EAAKL,EAAIC,GAAM,EAAID,IAClC5B,EAAIF,KAAKuC,MAAMH,EAAKN,EAAIE,GAAM,EAAIF,IAClC3B,EAAIH,KAAKuC,MAAMF,EAAKP,EAAIG,GAAM,EAAIH,IAClC1B,EAAIJ,KAAKuC,MAAMD,EAAKR,EAAII,GAAM,EAAIJ,IACxC,OAAS/B,GAAK,GAAOG,GAAK,GAAOC,GAAK,EAAKC,KAAO,CACtD,IC7BO,SAAqCZ,GACxC,OAAe,IAAPA,GAAe,GAC3B,ICbO,IAAMgD,EAAe,SAACC,GACzB,OAAOA,KAAWA,EAASA,EAAQ,EACvC,EACMC,EAAkB,SAACtC,EAAGD,EAAGwC,EAAGC,GAC9B,IAAMC,EAAK,EAAMzC,EACX0C,EAAK,GAAOH,EAAIvC,GAAKyC,EACrBE,EAAK,EAAMF,EAAKC,EAChBE,EAAK,EAAM7C,EACX8C,EAAK,GAAOL,EAAIzC,GAAK6C,EACrBE,EAAK,EAAMF,EAAKC,EACtB,gBAAiBE,GACb,GAAIA,GAAQ,EACR,OAAQ,EAEZ,GAAIA,GAAQ,EACR,OAAQ,EAGZ,IADA,IAAkBC,EAAMC,EAApBC,EAAI,GACCC,EAAK,EAAGA,EAAK,GAAIA,IAAM,CAG5B,IADAF,EAAKF,EADCG,GAAKA,GAAKA,EAAIP,EAAKD,GAAMD,KAErB,MAAQQ,EAAK,KACnB,OAAOC,GAAKA,GAAKA,EAAIJ,EAAKD,GAAMD,GAIpC,IADAI,EAAOE,GAAKA,GAAK,EAAIP,GAAM,EAAID,GAAMD,GAC1B,OAASO,EAAO,MAEvB,MAEJE,GAAKD,EAAKD,CACb,CAID,IAFA,IAAII,EAAO,EACPC,EAAO,EACFF,EAAK,EAAGA,EAAK,GAAIA,IAAM,CAI5B,IADAF,EAAKF,GAFLG,EAAI,IAAOE,EAAOC,KACPH,GAAKA,EAAIP,EAAKD,GAAMD,KAErB,MAAQQ,EAAK,KAEnB,OAAOC,GAAKA,GAAKA,EAAIJ,EAAKD,GAAMD,GAEhCK,EAAK,EACLI,EAAOH,EAGPE,EAAOF,CAEd,CACT,CACA,EAC8BI,EAAA,KAAG,SAACC,GAC9B,OAAQA,GACJ,IAAK,SACD,OAAO,SAAUR,GACb,OAAOA,CACvB,EACQ,IAAK,OACD,OAAOT,EAAgB,IAAM,GAAK,IAAM,GAC5C,IAAK,UACD,OAAOA,EAAgB,IAAM,EAAG,EAAK,GACzC,IAAK,WACD,OAAOA,EAAgB,EAAG,EAAG,IAAM,GACvC,IAAK,cACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,eAEL,IAAK,gBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,mBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,gBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,iBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,oBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,eACD,OAAOA,EAAgB,IAAM,EAAG,EAAG,KACvC,IAAK,gBACD,OAAOA,EAAgB,EAAG,IAAM,IAAM,GAC1C,IAAK,mBACD,OAAOA,EAAgB,IAAM,EAAG,IAAM,GAC1C,IAAK,eACD,OAAOA,EAAgB,IAAM,EAAG,KAAO,KAC3C,IAAK,gBACD,OAAOA,EAAgB,IAAM,KAAM,IAAM,GAC7C,IAAK,mBACD,OAAOA,EAAgB,KAAO,GAAK,IAAM,KAC7C,IAAK,aACD,kBACI,QAChB,EACQ,IAAK,WACD,gBAAiBS,GACb,OAAgB,IAATA,EAAa,EAAI,CACxC,EACQ,QAEI,IAAMS,EAAI,gBACV,GAAID,GAA0B,IAAnBA,EAAIE,QAAQD,GAAU,CAC7B,IAAME,EAAQH,EACTI,OAAOH,GAAUD,EAAI/D,OAASgE,GAAW,GACzCI,MAAM,KACX,GAAqB,IAAjBF,EAAMlE,OAGN,OAFAqE,QAAQC,KAAK,4BAA8BP,GAEpC,SAAUR,GACb,OAAOA,CAC/B,EAEgB,IAAM/C,EAAI+D,WAAWL,EAAM,IAAM,QAC3B3D,EAAIgE,WAAWL,EAAM,IAAM,KAC3BnB,EAAIwB,WAAWL,EAAM,IAAM,KAC3BlB,EAAIuB,WAAWL,EAAM,IAAM,KACjC,OAAIM,MAAMhE,IAAMgE,MAAMjE,IAAMiE,MAAMzB,IAAMyB,MAAMxB,IAC1CqB,QAAQC,KAAK,6BAA+BP,GAE3BR,SAAAA,GACb,OAAOA,CAC/B,GAEuBT,EAAgBtC,EAAGD,EAAGwC,EAAGC,EACnC,CAIG,OAFAqB,QAAQC,KAAK,4BAA8BP,GAEpC,SAAUR,GACb,OAAOA,CAC3B,EAGA,IACKnD,KAAKqE,QACNrE,KAAKqE,MAAQ,WAAaC,IAAAA,IAAAA,EAAA3E,UAAAC,OAAT2E,MAAIC,MAAAF,GAAAG,IAAAA,EAAAH,EAAAG,IAAJF,EAAIE,GAAA9E,UAAA8E,GAEjB,IADA,IAAIhD,EAAI,EAAGiD,EAAIH,EAAK3E,OACb8E,KACHjD,GAAK8C,EAAKG,GAAKH,EAAKG,GAExB,OAAO1E,KAAK2E,KAAKlD,EACpB,GCnKL,IAGamD,EAAY,WAAA,SAAAA,IAAAC,EAAAC,KAAAF,GAAAG,EAAAD,KAAA,iBACJ,CAAA,EAAE,CAyClBF,OAzCkBI,EAAAJ,EAAA,CAAA,CAAAK,IAAA,KAAAxC,MACnB,SAAGyC,EAAOC,GACN,IAAIC,EAAYN,KAAKO,eAAeH,GAC/BE,IACDA,EAAY,IAEhBA,EAAUE,KAAKH,GACfL,KAAKO,eAAeH,GAASE,CAChC,GAAA,CAAAH,IAAA,MAAAxC,MACD,SAAIyC,EAAOC,GACP,IAAMC,EAAYN,KAAKO,eAAeH,GACtC,GAAKE,EAGL,GAAKD,EAAL,CAIA,IAAMI,EAAQH,EAAUvB,QAAQsB,GAC5BI,GAAS,GACTH,EAAUI,OAAOD,EAAO,EAH3B,aAFcT,KAACO,eAAeH,EAOlC,GAAAD,CAAAA,IAAAxC,OAAAA,MACD,SAAKyC,EAAOC,GAAUM,IAAAA,EAClBX,KAIAA,KAAKY,GAAGR,GAJa,SAAfS,EAAgBC,EAAQC,GAC1BJ,EAAKK,IAAIZ,EAAOS,GAChBR,EAASS,EAAQC,EAC7B,GAEK,GAAAZ,CAAAA,IAAAxC,OAAAA,MACD,SAAKyC,EAAOW,GAAME,IAAAA,EACdjB,KAAMM,EAAYN,KAAKO,eAAeH,GACjCE,GAGLY,EAAIZ,GAAWa,SAAQ,SAACd,GACpBA,EAASY,EAAMF,EAC3B,GACK,GAAA,CAAAZ,IAAA,qBAAAxC,MACD,WACIqC,KAAKO,eAAiB,EACzB,KAAAT,CACLlB,CA3CyB,GA2CzBA,EAAA,IAAAkB,GChEA,IAkBasB,EAAkBlB,GAE3B,SAAAkB,EAAYC,GAAetB,OAAAqB,GAAAnB,EAAAD,KAAA,qBAAA,GACvBA,KAAKqB,cAAgBA,CACxB,ICHQC,EAAYpB,GAErB,SAAAoB,EAAYC,GAAOxB,OAAAuB,GAAArB,EAAAD,KAAA,aAAA,GACfA,KAAKuB,MAAQA,CAChB,ICLQC,EAAYtB,GAAAsB,SAAAA,IAAAzB,EAAAyB,KAAAA,EClBzB,ICmBO,SAASC,EAAaC,EAAIC,EAAMC,GACnC,IAAMC,EAASH,EAAGD,aAAaE,GAC/B,IAAKE,EACD,MAAU,IAAArH,MAKd,GAHAkH,EAAGI,aAAaD,EAAQD,GACxBF,EAAGK,cAAcF,GACDH,EAAGM,mBAAmBH,EAAQH,EAAGO,gBAE7C,OAAOJ,EAEX1C,QAAQ+C,IAAIR,EAAGS,iBAAiBN,IAChCH,EAAGU,aAAaP,EACpB,CCLO,SAASQ,EAASX,GACrB,OAAQY,KAAKC,wBAA0Bb,aAAcY,KAAKC,sBAC9D,CC7BA,IAsBaC,EAAeC,SAAAA,GAAAC,EAAAF,EAAAC,GAAAE,IAAAA,EAAAC,EAAAJ,GAmBxB,SAAAA,EAAYK,GAASC,IAAAA,EAAA/C,EAAAyC,KAAAA,GACTvC,EAAA8C,EAARD,EAAAH,EAAA9G,KAAAmE,OAAQ,wBAnBY,MAAIC,EAAA8C,EAAAD,GACb,gBAAA,GAAK7C,EAAA8C,EAAAD,GAExB,eAAA,GAAA7C,EAAA8C,EAAAD,GAAA,WAAA,GAAA7C,EAAA8C,EAAAD,GAAA,gBAAA,GAAA7C,EAAA8C,EAAAD,GAAA,UAAA,GAAA7C,EAAA8C,EAAAD,8BAAA7C,EAAA8C,EAAAD,gCAAA7C,EAAA8C,EAAAD,4BAAA7C,EAAA8C,EAAAD,8BAAA7C,EAAA8C,EAAAD,GAAA7C,oBAAAA,GAAAA,EAAA8C,EAAAD,GAiBQ,+BAAA,GAAA,IAAME,EAAYF,EAAKE,SAAWH,EAAQG,SACpCtB,EAAMoB,EAAKpB,GAAKoB,EAAKE,SAAStB,GACpCoB,EAAKG,wBAA0BJ,EAAQI,0BAA2B,EAElE,IAAMC,EAASb,EAASX,GAClByB,EAAsBD,GAAUL,EAAQO,mBACxCF,GAAUL,EAAQQ,kBACpB,GACEC,EAAYJ,EAAS,MAAQ,MACnCC,EAAmBhC,SAAQ,SAACoC,GACxB,IAAK7B,EAAG8B,aAAaD,GACjB,MAAU,IAAA/I,MAAKgC,WAAAA,OAAYsG,EAAKW,YAAYC,KAAIlH,0BAAAA,OAAyB+G,EAAa,gBAAA/G,OAAe8G,EAA4B,qBAEjJ,IAMQ,IAAMK,EAAgBd,EAAQc,eAC1Bb,EAAKW,YAAYE,cACrB,IAAKA,EACD,MAAU,IAAAnJ,MAAK,WAAAgC,OAAYsG,EAAKW,YAAYC,KAAI,gCAE3CR,SAAUS,GAAAA,EAAeT,SAC9BS,EAAcC,SAAWD,EAAcT,OAAOU,SAC9CD,EAAcE,OAASF,EAAcT,OAAOW,cACrCF,EAAcT,QAEzB,IAAMY,EAAed,EAASe,OAAOC,WAAWC,+BAC1CC,EAAeP,EAAcE,kBAAkBM,SAC/CR,EAAcE,OAAOC,GACrBH,EAAcE,OACdO,EAAiBT,EAAcC,oBAAoBO,SACnDR,EAAcC,SAASE,GACvBH,EAAcC,SACdS,EAAe5C,EAAaC,EAAIA,EAAG4C,cAAeJ,GAClDK,EAAiB9C,EAAaC,EAAIA,EAAG8C,gBAAiBJ,GAC5D,IAAKC,IAAiBE,EAClB,UAAU/J,MAEd,IAAMiK,EFnDP,SAAuB/C,EAAI2C,EAAcE,GAC5C,IAAME,EAAU/C,EAAGgD,gBACnB,IAAKD,EACD,MAAU,IAAAjK,MAMd,GAJAkH,EAAGiD,aAAaF,EAASJ,GACzB3C,EAAGiD,aAAaF,EAASF,GACzB7C,EAAGkD,YAAYH,GACC/C,EAAGmD,oBAAoBJ,EAAS/C,EAAGoD,aAE/C,OAAOL,EAEXtF,QAAQ+C,IAAIR,EAAGqD,kBAAkBN,IACjC/C,EAAGsD,cAAcP,EAErB,CEoCwBC,CAAchD,EAAI2C,EAAcE,GAChD,IAAKE,EACD,MAAU,IAAAjK,MAGd,GADAsI,EAAK2B,QAAUA,EACXvB,EAAQ,CACR,IAAM+B,EAAMvD,EAAGwD,oBACf,IAAKD,EACD,MAAU,IAAAzK,MAEdsI,EAAKmC,IAAMA,EACXvD,EAAGyD,gBAAgBrC,EAAKmC,IAC3B,CA2BE,OA1BHnC,EAAKsC,mBAAqB,GAC1BtC,EAAKuC,iBAAmB,GACxBvC,EAAKwC,eAAiB,GACtBpE,EAAI2B,EAAQ0C,YAAYpE,SAAQ,SAACqE,GAC7B,IAAMC,EAAW/D,EAAGgE,kBAAkB5C,EAAK2B,QAASe,GACpD,GAAIC,EAAW,EACX,UAAUjL,MAAKgC,GAAAA,OAAIsG,EAAKW,YAAYC,KAAI,4CAAAlH,OAA2CgJ,EAAiB,OAExG,IAAMG,EAASjE,EAAGkE,eAClB,IAAKD,EACD,MAAM,IAAInL,SAAKgC,OAAIsG,EAAKW,YAAYC,KAAI,6CAAAlH,OAA4CgJ,EAAgB,MAExG1C,EAAKsC,mBAAmBI,GAAiBC,EACzC3C,EAAKuC,iBAAiBG,GAAiBG,EACvC7C,EAAKwC,eAAe9E,KAAKgF,EACrC,IACQ1C,EAAK+C,iBAAmB,GACxB/C,EAAKgD,aAAe,GACpBjD,EAAQkD,SAAS5E,SAAQ,SAAC6E,GACtB,IAAMP,EAAW/D,EAAGuE,mBAAmBnD,EAAK2B,QAASuB,EAAQtC,MAC7DZ,EAAKgD,aAAaE,EAAQtC,MAAQsC,EAAQA,QACrCP,EAIL3C,EAAK+C,iBAAiBG,EAAQtC,MAAQ+B,EAHlCtG,QAAQC,KAAI5C,WAAAA,OAAYsG,EAAKW,YAAYC,KAAI,0CAAAlH,OAAyCwJ,EAAQtC,KAAO,KAIrH,IAAWZ,CACN,CA8FA,OA9FA5C,EAAAsC,EAAA,CAAA,CAAArC,IAAA,sBAAAxC,MACD,SAAoB8H,EAAUE,EAAQO,GAClC,IAAMxE,EAAK1B,KAAK0B,GAChBA,EAAGyE,wBAAwBV,GAC3B/D,EAAG0E,WAAW1E,EAAG2E,aAAcV,GAC/BjE,EAAG4E,oBAAoBb,EAAUS,EAAUK,KAAML,EAAUvE,KAAMuE,EAAUM,WAAYN,EAAUO,OAAQP,EAAUQ,OACtH,GAAA,CAAAvG,IAAA,mBAAAxC,MACD,SAAiB8H,GACbzF,KAAK0B,GAAGiF,yBAAyBlB,EACpC,GAAA,CAAAtF,IAAA,oBAAAxC,MACD,WACI,IAAK,IAAMiJ,KAAO5G,KAAKoF,mBACnBpF,KAAK6G,iBAAiB7G,KAAKoF,mBAAmBwB,IAElD5G,KAAK8G,sBAAwB,IAChC,GACL3G,CAAAA,IAAAxC,sBAAAA,MAeI,SAAoBoJ,EAAQC,GACxB,OAAY,CACf,GAAA,CAAA7G,IAAA,eAAAxC,MACD,SAAasJ,EAAUC,GACnBlH,KAAKmH,qBAAqBF,EAASG,SAC/BH,EAASI,SAASvM,OAAS,GAC3BkF,KAAKsH,aAAaL,EAASI,UAE/B,IAAQ3F,EAAOuF,EAAPvF,GAIR,GAFA1B,KAAKuH,WAAW,eAAgB,CAAC7F,EAAG8F,OAAO5K,MAAO8E,EAAG8F,OAAO3K,SAC5DmD,KAAKuH,WAAW,eAAgBN,EAASpE,QAAQ4E,YAC7CP,EAAO,CAGP,GAAI3L,EAAO2L,EAAO,eAAgB,CAC9B,IAAIQ,EAAaR,EAAMS,YAClBD,IACDA,EAAaT,EAASS,YAE1B1H,KAAKuH,WAAW,eAAgB,CAACG,EAAW9K,MAAO8K,EAAW7K,QACjE,CACD,GAAItB,EAAO2L,EAAO,UAAW,CACzB,IAAIvM,EAAQuM,EAAMU,OACbjN,IACDA,EAAQsM,EAAStM,OAErBqF,KAAKuH,WAAW,UAAW5M,EAC9B,CACDqF,KAAK6H,UAAUX,EAClB,CACJ,GAAA,CAAA/G,IAAA,aAAAxC,MACD,SAAW+F,GAAgB,IAAA,IAAAoE,EAAAC,EAAAlN,UAAAC,OAAP6C,EAAK,IAAA+B,MAAAqI,EAAAA,EAAAA,EAAAC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAD,EAAAC,IAALrK,EAAKqK,EAAA,GAAAnN,UAAAmN,IAErBF,EAAA9H,KAAK0B,IAAG1B,KAAK8F,aAAapC,IAAMuE,MAAAH,EAAC,CAAA9H,KAAK6F,iBAAiBnC,IAAKlH,OAAKmB,GACpE,GAAA,CAAAwC,IAAA,uBAAAxC,MACD,SAAqBgI,GACjB,GAAI3F,KAAK8G,wBAA0BnB,EAAnC,CAGA,IAAK,IAAMH,KAAiBxF,KAAKoF,mBAAoB,CACjD,IAAM8C,EAAiBvC,EAAOwC,UAAU3C,GAClC4C,EAAezC,EAAO0C,iBAAiB7C,GAC7CnL,EAAa6N,EAAc1L,eAAAA,OAAiBgJ,EAA0B,gBACtEnL,EAAa+N,GACbpI,KAAKsI,oBAAoBtI,KAAKoF,mBAAmBI,GAAgB0C,EAAgBE,EACpF,CACDpI,KAAK8G,sBAAwBnB,CAR5B,CASJ,GAAAxF,CAAAA,IAAAxC,YAAAA,MACD,SAAUuJ,GACd,GACK,CAAA/G,IAAAxC,eAAAA,MACD,SAAa0J,GACjB,IACKlH,IAAA,SAAAxC,MACD,WACIqC,KAAK0B,GAAG6G,WAAWvI,KAAKyE,SACpBpC,EAASrC,KAAK0B,KAAO1B,KAAKiF,KAC1BjF,KAAK0B,GAAGyD,gBAAgBnF,KAAKiF,IAEpC,GAAA9E,CAAAA,IAAAxC,SAAAA,MACD,WACIqC,KAAKwI,mBACR,KAAAhG,CAAA,CApMuBC,CHJLgG,WAAAA,SAAAA,IAAA1I,EAAAC,KAAAyI,EAAA,CAOlBA,OAPkBvI,EAAAuI,SAAAtI,IAAA,eAAAxC,MAEnB,SAAoBuJ,GAChB,QACH,GAAA/G,CAAAA,IAAAxC,kBAAAA,MACD,SAAuBuJ,GACnB,MAAO,EACV,KAAAuB,CCzBL,CDkBuBA,IGIwBxI,EAAlCuC,0BAsMb5D,EAAA,IAAA4D,GCvMA,IAIakG,WAAiBC,GAAAjG,EAAAgG,EAAAC,OAAAC,EAAAhG,EAAA8F,GAe1B,SAAAA,EAAYhH,EAAImB,EAASuE,EAASvF,EAAQgH,EAAalO,EAAOmO,EAAcpB,EAAYqB,EAAWC,GAAQC,IAAAA,EAe/F,OAf+FlJ,OAAA2I,GAC/FzI,EAAA8C,EAARkG,EAAAL,EAAA/M,KAAAmE,oBAAQC,EAAA8C,EAAAkG,GAAAhJ,eAAAA,GAAAA,EAAA8C,EAAAkG,GAAAhJ,eAAAA,GAAAA,EAAA8C,EAAAkG,GAAAhJ,cAAAA,GAAAA,EAAA8C,EAAAkG,GAAAhJ,mBAAAA,GAAAA,EAAA8C,EAAAkG,GAAA,aAAA,GAAAhJ,EAAA8C,EAAAkG,GAAA,oBAAA,GAAAhJ,EAAA8C,EAAAkG,wBAAAhJ,EAAA8C,EAAAkG,uBAAAhJ,EAAA8C,EAAAkG,GAAAhJ,cAAAA,GAAAA,EAAA8C,EAAAkG,GALH,SAAA,GAAChJ,EAAA8C,EAAAkG,cACC,GAAChJ,EAAA8C,EAAAkG,cACD,IAAEhJ,EAAA8C,EAAAkG,GAAA,mBAAA,GAITA,EAAKvH,GAAKA,EACVuH,EAAKpG,QAAUA,EACfoG,EAAK7B,QAAUA,EACf6B,EAAKpH,OAASA,EACdoH,EAAKJ,YAAcA,EACnBI,EAAKtO,MAAQA,EACbsO,EAAKH,aAAeA,EACpBG,EAAKvB,WAAaA,EAClBuB,EAAKF,UAAYA,EACjBE,EAAKD,OAASA,EACdC,EAAKvH,GAAKA,EACVuH,EAAKC,YAAcrH,EAAOoB,wBACpBvB,EAAGyH,aAAazH,EAAGuC,gCACnB,EAAEgF,CACX,CAyCA,OAzCA/I,EAAAwI,EAAAvI,CAAAA,CAAAA,iBAAAxC,MACD,SAAWyL,GACP,IAAQ/B,EAA0BrH,KAA1BqH,SAAU6B,EAAgBlJ,KAAhBkJ,YACZG,EAAchC,EAASiC,WAAU,SAAC9K,GAAM,OAAAA,IAAM4K,KACpD,IAAqB,IAAjBC,EACA,OAAOA,EAEX,IAAME,EAASlC,EAASvM,OACxB,OAAIyO,GAAUL,EACO,YAErBlJ,KAAKqH,SAAS7G,KAAK4I,GACZG,EACV,GAAApJ,CAAAA,IAAAxC,OAAAA,MACD,WACI,IAAQ+D,EAAqC1B,KAArC0B,GAAIG,EAAiC7B,KAAjC6B,OAAQgH,EAAyB7I,KAAzB6I,YAAahG,EAAY7C,KAAZ6C,QAEXA,EAAd2G,UACEC,UAAU5H,GACpBA,EAAO6H,aAAa1J,KAAM6I,GAE1B,IAAMc,EAAW3J,KAAK+I,UAAY,GAAM,EAAI,EAK5C,GAHArH,EAAGkI,OAAOlI,EAAGmI,OACbnI,EAAGoI,UAAUpI,EAAGqI,IAAKrI,EAAGsI,qBAEpBhK,KAAK8I,aAAc,CACnB,IAAAmB,EAAgCjK,KAAK8I,aAA7BpM,EAACuN,EAADvN,EAAGC,EAACsN,EAADtN,EAAGC,EAAKqN,EAALrN,MAAOC,EAAMoN,EAANpN,OACf4K,EAAa5E,EAAQ4E,WACrByC,EAAerH,EAAQ2E,OAAO3K,OAC9BsN,EAAQjP,KAAKuC,MAAMf,EAAI+K,GACvB2C,EAAYlP,KAAKuC,MAAMb,EAAQ6K,GAC/B4C,EAAanP,KAAKuC,MAAMZ,EAAS4K,GACjC6C,EAAQpP,KAAKuC,MAAMyM,EAAeG,EAAa1N,EAAI8K,GACzD/F,EAAGkI,OAAOlI,EAAG6I,cACb7I,EAAG8I,QAAQL,EAAOG,EAAOF,EAAWC,EACvC,MAEG3I,EAAG+I,QAAQ/I,EAAG6I,cAElB7I,EAAGgJ,aAAahJ,EAAGiJ,UAAW,EAAI3K,KAAK4K,SAAUlJ,EAAGmJ,eAAgBlB,EACvE,KAAAjB,CAxEkClH,EAAAA,GCHhC,SAASsJ,EAAmBpJ,GAC/B,IAAMqJ,EAAS,CACXC,sBAAuB,EACvBC,iBAAkB,EAElBC,kBAAmB,EACnBjH,+BAAgC,EAChCkH,wBAAyB,EACzBC,iCAAkC,EAClCC,mBAAoB,EACpBC,oBAAqB,EACrBC,2BAA4B,EAC5BC,6BAA8B,GAQlC,OALa9P,OAAO+P,KAAKV,GACpB5J,SAAQ,SAAChB,GAEV4K,EAAO5K,GAAOuB,EAAGyH,aAAazH,EAAGvB,GACzC,IACW4K,CACX,CAKO,SAASW,EAAmBhK,GAC/B,IAAMiK,EAAa,CACfC,uBAAwB,KACxBC,8BAA+B,KAC/BC,8BAA+B,KAC/BC,6BAA8B,KAC9BC,8BAA+B,KAC/BC,+BAAgC,KAChCC,sCAAuC,KACvCC,mCAAoC,KACpCC,wBAAyB,MAQ7B,OALa1Q,OAAO+P,KAAKE,GACpBxK,SAAQ,SAAChB,GAEVwL,EAAWxL,GAAOuB,EAAG8B,aAAarD,EAC1C,IACWwL,CACX,CD+BA/M,EAAA,IAAA8J,GE5EA,IAAM2D,EAA2B,IAAIC,WAAW,CAAC,EAAG,EAAG,EAAG,IAY7CC,EAAmBC,SAAAA,GAAA9J,EAAA6J,EAAAC,GAAAC,IAsDhCC,EAtDgCD,EAAA7J,EAAA2J,GAM5B,SAAAA,EAAY7K,EAAIL,GAAe,IAAAsL,EAEd,OAFc5M,EAAAwM,KAAAA,GACNtM,EAAA8C,EAArB4J,EAAAF,EAAA5Q,KAAMwF,KAAAA,IAAe,UAAA,GAAApB,EAAA8C,EAAA4J,uBALL,MAAI1M,EAAA8C,EAAA4J,GACf,SAAA,SAAO1M,EAAA8C,EAAA4J,GACX,KAAA,GAAC1M,EAAA8C,EAAA4J,GAAA,KACD,GAGDA,EAAKjL,GAAKA,EAAGiL,CAChB,CAwHAJ,OAxHArM,EAAAqM,IAAApM,IAAA,aAAAyM,IACD,WAKI,MAJoB,UAAhB5M,KAAK6M,QACL7M,KAAK8M,OAETzS,EAAa2F,KAAK+M,mBACX/M,KAAK+M,iBACf,GAAA,CAAA5M,IAAA,IAAAyM,IACD,WACI,OAAO5M,KAAKgN,EACf,GAAA,CAAA7M,IAAA,IAAAyM,IACD,WACI,OAAO5M,KAAKiN,EACf,GACL,CAAA9M,IAAA,OAAAxC,MASI,WAAOuP,IAAAA,EACXlN,KAC4B,YAAhBA,KAAK6M,QAAwC,WAAhB7M,KAAK6M,SAGtC7M,KAAK6M,OAAS,UACd7M,KAAKqB,cAAc8L,SAAS,WAC5BnN,KAAKoN,gBACAC,MAAK,SAAAC,GAAuB,IAApB1Q,EAAK0Q,EAAL1Q,MAAOC,EAAMyQ,EAANzQ,OAChBqQ,EAAKL,OAAS,SACdK,EAAKF,GAAKpQ,EACVsQ,EAAKD,GAAKpQ,EAGVqQ,EAAK7L,cAAc8L,SAAS,SAAU,CAAEvQ,MAAAA,EAAOC,OAAAA,GAC3D,IACa0Q,OAAM,SAACC,GACRN,EAAKL,OAAS,SACdK,EAAK7L,cAAc8L,SAAS,SAAUK,GACtCrO,QAAQsO,MAAMD,EAC1B,IACK,GACL,CAAArN,IAAA,gBAAAxC,OAAA+O,EAAAgB,EAAAC,IAAAC,MAGI,SAAAC,IAAAC,IAAAA,EAAApM,EAAAqM,EAAAnR,EAAAC,EAAAkE,EAAA4M,OAAAA,IAAAK,MAAA,SAAAC,GAAAA,cAAAA,EAAAC,KAAAD,EAAAE,MACI,KAAA,EAYuG,OAZvGnO,KAAK+M,kBAAoB/M,KAAKoO,0BACtB1M,EAAO1B,KAAP0B,IAGL2M,YAAY3M,EAAG4M,WAAYtO,KAAK+M,mBAEnCrL,EAAG6M,cAAc7M,EAAG4M,WAAY5M,EAAG8M,mBAAoB9M,EAAG+M,QAC1D/M,EAAG6M,cAAc7M,EAAG4M,WAAY5M,EAAGgN,mBAAoBhN,EAAG+M,QAE1D/M,EAAG6M,cAAc7M,EAAG4M,WAAY5M,EAAGiN,eAAgBjN,EAAGkN,eACtDlN,EAAG6M,cAAc7M,EAAG4M,WAAY5M,EAAGmN,eAAgBnN,EAAGkN,eACtDlN,EAAG2M,YAAY3M,EAAG4M,WAAYtO,KAAK+M,mBACnCrL,EAAGoN,WAAWpN,EAAG4M,WAAY,EAAG5M,EAAGqN,KAAM,EAAG,EAAG,EAAGrN,EAAGqN,KAAMrN,EAAGsN,cAAe3C,GAA0B4B,EAAAE,KAAA,GAC3D,QAD2DL,EAC7E9N,KAAKqB,qBAALyM,IAAkBA,OAAlBA,EAAAA,EAAoBmB,iBAAxClB,KAAAA,GA4BL,OA5BKA,EAAWE,EAAAiB,KACbtS,EAAQ,EACRC,EAAS,EACbxC,EAAa2F,KAAK+M,mBAGdgB,EAAYhN,gBAAgBoO,aAC5BpB,EAAYhN,gBAAgBqO,WACtBrO,EAAOgN,EAAYhN,KACzBnE,EAAQmE,EAAKnE,MACbC,EAASkE,EAAKlE,OACd6E,EAAG2M,YAAY3M,EAAG4M,WAAYtO,KAAK+M,mBACnCrL,EAAG2N,YAAY3N,EAAG4N,iCAAkCvB,EAAYwB,kBAChE7N,EAAGoN,WAAWpN,EAAG4M,WAAY,EAAG5M,EAAGqN,KAAMrN,EAAGqN,KAAMrN,EAAGsN,cAAejO,IAEhEsB,EAASX,IAAQhE,EAAad,IAAUc,EAAab,KACrD6E,EAAG8N,eAAe9N,EAAG4M,aAGC,OAArBP,EAAYhN,MACjBnE,EAAQ,EACRC,EAAS,EAET6E,EAAG2M,YAAY3M,EAAG4M,WAAYtO,KAAK+M,mBACnCrL,EAAGoN,WAAWpN,EAAG4M,WAAY,EAAG5M,EAAGqN,KAAM,EAAG,EAAG,EAAGrN,EAAGqN,KAAMrN,EAAGsN,cAAe3C,IAG7ElN,QAAQsO,MAAK,qEAAuEM,GACvFE,EAAAwB,gBACM,CACH7S,MAAAA,EACAC,OAAAA,IACH,KAAA,GAAA,IAAA,MAAA,OAAAoR,EAAAyB,UAAA7B,EAAA7N,KAAA,gBACJ,OAAA0M,EAAAzE,WAAApN,UAAA,IACL,CAAAsF,IAAA,OAAAxC,MAKI,WACwB,UAAhBqC,KAAK6M,SAGT7M,KAAK6M,OAAS,QACd7M,KAAKgN,GAAK,EACVhN,KAAKiN,GAAK,EACLjN,KAAK+M,oBAGV/M,KAAK0B,GAAGiO,cAAc3P,KAAK+M,mBAC3B/M,KAAK+M,kBAAoB,MAC5B,GAAA5M,CAAAA,IAAAxC,yBAAAA,MACD,WACI,IAAMiS,EAAgB5P,KAAK0B,GAAGmO,gBAC9B,IAAKD,EACD,MAAM,IAAIpV,MAAM,kCAEpB,OAAOoV,CACV,KAAArD,CAjIoCnL,CAAToL,CAASpL,GCN5B0O,WAAOC,GAAArN,EAAAoN,EAAAC,OAAAC,EAAApN,EAAAkN,GAYhB,SAAAA,EAAYG,OAAWC,EAEQ,OAFRnQ,EAAA+P,KAAAA,GACX7P,EAAA8C,EAARmN,EAAAF,EAAAnU,KAAQoE,OAXhB,iBAAA,GAAAA,EAAA8C,EAAAmN,GAOiB,aAAA,MAAIjQ,EAAA8C,EAAAmN,WACT,MAAIjQ,EAAA8C,EAAAmN,GAAA,QACJ,WAGJA,EAAKD,UAAYA,EAAUC,CAC9B,CA2DAJ,OA1DL5P,EAAA4P,EAAA,CAAA,CAAA3P,IAAAxC,WAAAA,MAUI,SAASwS,GACL,GAAInQ,KAAKmQ,QAAUA,EAAO,CAEtBnQ,KAAKmQ,MAAQA,EAAM,IAAAC,IAAAA,EAAAvV,UAAAC,OAHR2E,MAAIC,MAAA0Q,EAAAA,EAAAA,EAAAC,EAAAA,GAAAA,EAAAA,EAAAA,EAAAD,EAAAC,IAAJ5Q,EAAI4Q,EAAA,GAAAxV,UAAAwV,GAIf,GAAc,WAAVF,EAAoB,CACpB,IAAMG,EAAa7Q,EACnBO,KAAK0H,WAAa4I,EAAW,EAChC,MACI,GAAc,WAAVH,EAAoB,CACzB,IAAMI,EAAa9Q,EACnBO,KAAKyN,MAAQ8C,EAAW,EAC3B,CACDvQ,KAAKwQ,KAAIvI,MAATjI,KAAI,CAAMmQ,GAAK3T,OAAKiD,GACvB,CACJ,IAeL,CAAA,CAAAU,IAAA,eAAAxC,MACI,SAAoBuJ,GAChB,OAAY,CACf,IACL/G,IAAA,kBAAAxC,MAWI,SAEAuJ,GACI,MAAO,EACV,KAAA4I,CA1EwBhQ,EAAAA,GA2E7BlB,EAAA,IAAAkR,GCpFA,IAYaW,EAAY,SAAAC,GAAAhO,EAAA+N,EAAAC,GAAA,IAWpBC,EAXoBC,EAAAhO,EAAA6N,GAErB,SAAAA,EAAYR,EAAW/I,GAAO2J,IAAAA,EAE6B,OAF7B9Q,OAAA0Q,GACTxQ,EAAA8C,EAAjB8N,EAAAD,EAAA/U,KAAAmE,KAAMiQ,IAAW,aAAA,GACjBY,EAAK3J,MAAQuJ,EAAaK,gBAAgB5J,GAAS,CAAE,GAAE2J,CAC1D,CAuBAJ,OAvBAvQ,EAAAuQ,EAAA,CAAA,CAAAtQ,IAAA,QAAAyM,IACD,WACI,OAAO5M,KAAKkH,MAAM5K,KACrB,EAAAyU,IACD,SAAUzU,GACN0D,KAAKkH,MAAM5K,MAAQA,CACtB,GAAA6D,CAAAA,IAAAxC,iBAAAA,OAAAgT,EAAAjD,EAAAC,IAAAC,MACD,SAAAoD,IAAAC,IAAAA,EAAAC,EAAAvD,OAAAA,IAAAK,MAAAmD,SAAAC,GAAA,cAAAA,EAAAlD,KAAAkD,EAAAjD,MACU8C,KAAAA,EACsDG,OADtDH,EAAc,IAAII,YAAY,CAACrR,KAAK1D,QACpC4U,EAAa,IAAII,kBAAkBL,EAAYtL,QAAOyL,EAAA3B,gBACrD,CACH1O,KAAM,IAAIqO,UAAU8B,EAAY,EAAG,GACnC3B,kBAAkB,IACrB,KAAA,EAAA,IAAA,MAAA,OAAA6B,EAAA1B,OAAA,GAAAsB,EAAAhR,KAAA,KACJiP,WAAA0B,OAAAA,EAAA1I,MAAApN,KAAAA,eAAA,CAAA,CAAAsF,IAAA,eAAAxC,MACD,SAAoBuJ,GAChB,IAAMqK,EAAgBd,EAAaK,gBAAgB5J,GACnD,MAAA1K,gBAAAA,OAAuB+U,EAAcjV,MACxC,GAAA6D,CAAAA,sBAAAxC,MACD,SAAuBuJ,GACnB,MAAO,CACH5K,MAAO4K,EAAM5K,OAAS,WAE7B,KAAAmU,CA5B6BX,CAAT,CAASA,GAAO7P,EAA5BwQ,EA8Bb7R,uBAAAA,GAAAA,EAAA,IAAA6R,GC1CA,IAUae,EAAUC,SAAAA,GAAA/O,EAAA8O,EAAAC,GAAAC,IAsBlBC,EAtBkBD,EAAA9O,EAAA4O,GAGnB,SAAAA,EAAYvB,EAAW/I,GAAO,IAAA0K,EAkBvB,OAlBuB7R,EAAAC,KAAAwR,GACTvR,EAAA8C,EAAjB6O,EAAAF,EAAA7V,KAAMoU,KAAAA,IAAWhQ,aAAAA,GAAAA,EAAA8C,EAAA6O,GAAA3R,qBAAAA,GAAAA,EAAA8C,EAAA6O,GAmBF,oBAAA,WAGfA,EAAKzE,SAAS,SAAU,CACpBvQ,MAAOgV,EAAK1K,MAAMtK,MAClBC,OAAQ+U,EAAK1K,MAAMrK,QAE/B,IAAKoD,EAAA8C,EAAA6O,GACkB,oBAAA,SAAC9Q,EAAQ2M,GACxBmE,EAAKzE,SAAS,SAAUM,EAChC,IA5BQmE,EAAKC,cAAgBD,EAAK3B,UAAU6B,YAAY5K,EAAMkC,QAAQ2I,OAAQ7K,EAAMkC,QAAQlC,MAAOA,EAAMkC,QAAQvG,SACzG+O,EAAK1K,MAAQsK,EAAWV,gBAAgB5J,GAAS,CAAE,GAKnD8K,gBAAe,WACX,IAAMC,EAAWL,EAAKC,cACC,WAAnBI,EAAS9B,MACTyB,EAAKM,iBAAiBD,EAAUA,EAASvK,YAEjB,WAAnBuK,EAAS9B,OACdyB,EAAKO,iBAAiBF,EAAUA,EAASxE,OAE7CwE,EAASrR,GAAG,SAAUgR,EAAKM,kBAC3BD,EAASrR,GAAG,SAAUgR,EAAKO,iBACvC,IAAWP,CACN,CA6BA,OA7BA1R,EAAAsR,EAAArR,CAAAA,CAAAA,qBAAAxC,OAAAgU,EAAAjE,EAAAC,IAAAC,MAYD,SAAAwE,IAAA,OAAAzE,IAAAK,MAAAqE,SAAAC,GAAAA,cAAAA,EAAApE,KAAAoE,EAAAnE,oBAAAmE,EAAA7C,OAAA,SACW,CACH1O,KAAMf,KAAKkH,QACdoL,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAA5C,OAAA0C,GAAAA,YACJnD,WAAA0C,OAAAA,EAAA1J,MAAAjI,KAAAnF,UAAA,KACL,CAAA,CAAAsF,IAAAxC,eAAAA,MACI,SAAoBuJ,GAChB,QACH,IAAA/G,IAAA,kBAAAxC,MACD,SAAuBuJ,GACnB,MAAO,CACHkC,QAASlC,EAAMkC,QACf1M,EAAGwK,EAAMxK,GAAK,EACdC,EAAGuK,EAAMvK,GAAK,EACdC,MAAOsK,EAAMtK,OAAS,EACtBC,OAAQqK,EAAMrK,QAAU,EAE/B,KAAA2U,CAAA,CAnDkBC,CAAS3B,GAAO7P,EAA1BuR,4BAqDb5S,EAAA,IAAA4S,GClFA,IAmBae,EAAsBC,SAAAA,GAAA9P,EAAA6P,EAAAC,GAAAC,IAG9BC,EAH8BD,EAAA7P,EAAA2P,GAC/B,SAAAA,EAAY7Q,EAAIL,GAAeoR,OAAA1S,EAAAwS,KAAAA,GAAAE,EAAA5W,KAAAmE,KACrB0B,EAAIL,EACb,CAOA,OAPAnB,EAAAqS,EAAApS,CAAAA,CAAAA,IAAAxC,gBAAAA,OAAA+U,EAAAhF,EAAAC,IAAAC,MACD,SAAA+E,IAAAC,IAAAA,EAAAC,EAAA3L,EAAA,OAAAyG,IAAAK,MAAA8E,SAAAC,GAAA,cAAAA,EAAA7E,KAAA6E,EAAA5E,MAAA,KAAA,EACwB,OADxB4E,EAAA5E,KACwB,EAAAnO,KAAKqB,cAAc4N,iBAAgB,KAAA,SAAjD/H,EAAK6L,EAAA7D,KAAA6D,EAAAtD,OAAA,SACJ,CACH7S,OAAiB,QAAVgW,EAAA1L,EAAMnG,YAAN6R,IAAUA,OAAVA,EAAAA,EAAYhW,QAAS,EAC5BC,QAAkBgW,QAAVA,EAAA3L,EAAMnG,YAAN8R,IAAUA,OAAVA,EAAAA,EAAYhW,SAAU,4BACjCkW,EAAArD,OAAA,GAAAiD,EACJ3S,KAAA,KAAA,WAAA,OAAA0S,EAAAzK,MAAApN,KAAAA,gBAAA0X,CAAA,CAV8BC,CAASjG,GhBD/ByG,EAA2BpU,EAAA,KAAG,SAAClE,GAKxC,MAAO,EAJGA,IAAS,IAIP,KAHDA,IAAS,GAAM,KAGL,KAFVA,IAAS,EAAK,KAEK,KADb,IAAPA,GAC6B,IAC3C,IiBNA,IAIauY,EAAgB,WAEzB,SAAAA,EAAYC,GAAQnT,OAAAkT,GAAAhT,EAChBD,KAAA,cAAA,GAAAA,KAAKkT,OAASA,CACjB,CAmBAD,OAlBL/S,EAAA+S,IAAA9S,IAAA,YAAAxC,MAMI,SAAU6H,OAAe2N,EACrB,eAAAA,EAAOnT,KAAKkT,OAAOE,MAAK,SAACC,UAASA,EAAK9N,WAAWC,EAAc,WAAC,IAAA2N,OAAA,EAA1DA,EAA4DxN,MACtE,GACL,CAAAxF,IAAA,mBAAAxC,MAMI,SAAiB6H,GAAe,IAAA8N,EAC5B,OAAiE,QAAjEA,EAAOtT,KAAKkT,OAAOE,MAAK,SAACC,GAAI,OAAKA,EAAK9N,WAAWC,EAAe,WAA1D8N,IAA0DA,OAA1DA,EAAAA,EACD/N,WAAWC,EACpB,KAAAyN,CACLrU,CAxB6B,GAwB7BA,EAAA,IAAAqU,GCdA,IAEaM,EAAiB,SAAAC,GAAA9Q,EAAA6Q,EAAAC,GAAAC,IAAAA,EAAA7Q,EAAA2Q,GAyB1B,SAAAA,EAAY1Q,OAAS6Q,EAAA3T,EAAAwT,KAAAA,GAxBzBtT,EAAA8C,EAyBQ2Q,EAAAD,EAAA5X,UAAMgH,EAAQtB,QAzBtB,UAAA,GAAAtB,EAAA8C,EAAA2Q,GAGA,cAAA,GAAAzT,EAAA8C,EAAA2Q,GAAA,iBAAA,GAAAzT,EAAA8C,EAAA2Q,GAGA,iBAAA,GAAAzT,EAAA8C,EAAA2Q,GAEA,eAAA,GAAAzT,EAAA8C,EAAA2Q,GAAA,aACiB,IAAIC,YAAY,UAAgB1T,EAAA8C,EAAA2Q,GAAA,cAC/B,IAAIE,aAAaF,EAAKG,aAAW5T,EAAA8C,EAAA2Q,GAChC,eAAA,IAAIrC,YAAYqC,EAAKG,aAAW5T,EAAA8C,EAAA2Q,GACnC,YAAA,IAChBzT,EAAA8C,EAAA2Q,kBACmB,GAACzT,EAAA8C,EAAA2Q,GACF,cAAA,MAAIzT,EAAA8C,EAAA2Q,GACJ,cAAA,IAClBzT,EAAA8C,EAAA2Q,GAAA,qBAAA,GAAAzT,EAAA8C,EAAA2Q,GAGA,4BAAA,GAAAzT,EAAA8C,EAAA2Q,GAAA,sBAAA,GAMQ,IAAQlM,EAAqC3E,EAArC2E,OAAQsM,EAA6BjR,EAA7BiR,WAAYC,EAAiBlR,EAAjBkR,aAC5BL,EAAK7Q,QAAUA,EACf6Q,EAAKzD,UAAYpN,EAAQoN,UACzByD,EAAKlK,UAAY3G,EAAQ2G,UACzBkK,EAAKM,eAAiB,IAAIvD,EAAaiD,EAAKzD,WAC5C,IAAMvO,EnBhDP,SAA4B8F,GAC/B,IAAM0L,EAAS,CACXvY,OAAO,EACPsZ,WAAW,EACXC,OAAO,EACPC,SAAS,EACTC,gBAAgB,EAChBC,8BAA8B,EAC9BC,gBAAiB,mBACjBC,oBAAoB,EACpBC,uBAAuB,GAE3B,OAGChN,EAAOiN,WAAW,QAASvB,IACxB1L,EAAOiN,WAAW,qBAAsBvB,EAChD,CmB+BmBwB,CAAmBlN,GAC9B,IAAK9F,EACD,MAAU,IAAAlH,MAAM,kCAEpBkZ,EAAKhS,GAAKA,EACV,IAAMpF,EAAQ0W,EAA4Bc,GAC1CpS,EAAGiT,SAAS,EAAG,EAAGnN,EAAO5K,MAAO4K,EAAO3K,QACvC6E,EAAGoS,WAAWxX,EAAM,GAAIA,EAAM,GAAIA,EAAM,GAAIA,EAAM,IPAnD,SAA2BoF,EAAI6E,GAClC,IAAK7E,EACD,MAAM,IAAIlH,MAAM,oBAIpB,IAFA,IAAMoa,KAAcrO,EAAO,IACrBsO,EAAU,IAAIC,YAAuB,EAAXF,GACvBhV,EAAI,EAAGmV,EAAI,EAAGnV,EAAIgV,EAAUhV,GAAK,EAAGmV,GAAK,EAC9CF,EAAQjV,GAAKmV,EACbF,EAAQjV,EAAI,GAAKmV,EAAI,EACrBF,EAAQjV,EAAI,GAAKmV,EAAI,EACrBF,EAAQjV,EAAI,GAAKmV,EAAI,EACrBF,EAAQjV,EAAI,GAAKmV,EAAI,EACrBF,EAAQjV,EAAI,GAAKmV,EAAI,EAEzB,IAAMpP,EAASjE,EAAGkE,eAClBlE,EAAG0E,WAAW1E,EAAGsT,qBAAsBrP,GACvCjE,EAAGuT,WAAWvT,EAAGsT,qBAAsBH,EAASnT,EAAGwT,YACvD,COhBQC,CAAkBzT,EAAIqS,GACtBL,EAAK3P,OAAS,CACVC,WAAY8G,EAAmBpJ,GAC/BiK,WAAYD,EAAmBhK,IAEnCgS,EAAKlK,UAAUxG,SAAQD,EAAA2Q,GACvBA,EAAK0B,cAAgB1B,EAAKlK,UAAU6L,WAAW,wBAAwBxT,OACvE,IAAMgS,EAAanS,EAAGkE,eACtBvL,EAAawZ,GACb,IAAMpN,EAAS,EAAImN,aAAa0B,kBAuC7B,OAtCH5B,EAAK6B,qBAAuB,IAAItC,EAAiB,CAC7C,CACItN,OAAQkO,EACRtO,WAAY,CACRiQ,WAAY,CACR9R,KAAM,aACN6C,KAAM,EACN5E,KAAMD,EAAG+T,MACTjP,YAAY,EACZC,OAAAA,EACAC,OAAQ,GAEZgP,oBAAqB,CACjBhS,KAAM,sBACN6C,KAAM,EACN5E,KAAMD,EAAG+T,MACTjP,YAAY,EACZC,OAAAA,EACAC,OAAQ,EAAIkN,aAAa0B,mBAE7BK,QAAS,CACLjS,KAAM,UACN6C,KAAM,EACN5E,KAAMD,EAAGsN,cACTxI,YAAY,EACZC,OAAAA,EACAC,OAAQ,EAAIkN,aAAa0B,mBAE7BM,eAAgB,CACZlS,KAAM,iBACN6C,KAAM,EACN5E,KAAMD,EAAG+T,MACTjP,YAAY,EACZC,OAAAA,EACAC,OAAQ,EAAIkN,aAAa0B,uBAItC5B,CACN,CAmQAH,OAnQArT,EAAAqT,EAAApT,CAAAA,CAAAA,IAAAxC,QAAAA,MACD,WACIqC,KAAK6V,aAAe,EACpB7V,KAAK8V,YAAc,KACnB9V,KAAK+V,UAAUjb,OAAS,EACxBkF,KAAK0B,GAAGsU,MAAMhW,KAAK0B,GAAGuU,iBACzB,GAAA9V,CAAAA,IAAAxC,mBAAAA,MACD,WACI,YAAY6L,SACf,GAAArJ,CAAAA,uBAAAxC,MACD,SAAiB0D,GACb,OAAIA,aAAyBmQ,EAClB,IAAIe,EAAuBvS,KAAK0B,GAAIL,GAEpC,IAAAkL,EAAoBvM,KAAK0B,GAAIL,EAC3C,IACLlB,IAAA,gBAAAxC,MAaI,SAAcuY,GAAY,IAAAC,EACNA,QAAhBA,EAAInW,KAACoW,mBAALD,IAAgBA,GAAhBA,EAAkB3V,KAAK0V,EAC1B,GAAA/V,CAAAA,IAAAxC,UAAAA,MACD,SAAQoN,GAAQ,IAAAsL,EAAAC,EAAAC,EACJC,EAA8BxW,KAA9BwW,YAAaC,EAAiBzW,KAAjByW,aACb7Z,EAAyImO,EAAzInO,MAAOC,EAAkIkO,EAAlIlO,OAAQ6Z,EAA0H3L,EAA1H2L,QAASC,EAAiH5L,EAAjH4L,QAASC,EAAwG7L,EAAxG6L,QAASC,EAA+F9L,EAA/F8L,QAASC,EAAsF/L,EAAtF+L,eAAgBjV,EAAsEkJ,EAAtElJ,OAAQgH,EAA8DkC,EAA9DlC,YAAalO,EAAiDoQ,EAAjDpQ,MAAOmO,EAA0CiC,EAA1CjC,aAAciO,EAA4BhM,EAA5BgM,GAAIC,EAAwBjM,EAAxBiM,GAAIC,EAAoBlM,EAApBkM,GAAIC,EAAgBnM,EAAhBmM,GAAIC,EAAYpM,EAAZoM,GAAIC,EAAQrM,EAARqM,GACnIhO,EAAY2B,EAAZ3B,QAKN,GAAIP,GAAetN,EAAOsN,EAAa,eAAgB,CACnD,IAAMnB,EAAamB,EAAYlB,YAE/BD,EAAW9K,MAAQA,EACnB8K,EAAW7K,OAASA,CACvB,CAEDxC,GADA+O,EAAiB,QAAViN,EAAGjN,SAAO,IAAAiN,EAAAA,EAAIrW,KAAKgU,0BACMlE,EAAS,wBACzC,IlBnEoBxU,EAAGD,EkBmEH0N,EAA2B/I,KAAzC6V,aAAyBC,EAAgB9V,KAAhB8V,YACzBuB,EAAa,CACfza,MAAAA,EACAC,OAAAA,GAGEya,EAAezV,GAAU7B,KAAKoV,cACpC/a,EAAaid,aAAwB9U,GACjCsT,IAIIA,EAAYjU,SAAWyV,KlB/EXhc,EkBgFCwa,EAAYhN,iBlBhFVzN,EkBgFwByN,IlB5EzC,OAANxN,GAAoB,OAAND,GAGVC,EAAEoB,IAAMrB,EAAEqB,GAAKpB,EAAEqB,IAAMtB,EAAEsB,GAAKrB,EAAEsB,QAAUvB,EAAEuB,OAAStB,EAAEuB,SAAWxB,EAAEwB,UkB0E/DiZ,EAAYjU,SAAW7B,KAAKoV,eACvBvM,GACGiN,EAAYjU,OAAO0V,oBAAoBzB,EAAYjN,YAAaA,MACzEiN,EAAc,OAGtBzb,EAAaid,aAAwB9U,GAEhCsT,IAED9V,KAAKwX,YAAYF,EAAczO,EAAalO,EAAO0c,EAAYvO,EAAcC,GAE7E1O,EADAyb,EAAc9V,KAAK8V,cAGvB,IAAM2B,EAA6B,QAAxBnB,EAAGQ,eAAAA,EAAgBW,aAAK,IAAAnB,GAAAA,EAC7BoB,EAA6B,QAAxBnB,EAAGO,eAAAA,EAAgBY,aAAK,IAAAnB,GAAAA,EAC/BoB,EAAa,EACbC,EAAa,EACbC,EAAa,EACbC,EAAa,EACjB,GAAI1O,aAAmBoI,EAAY,CAC/B,IAAAuG,EAAgD3O,EAAQlC,MAA7C6P,EAAEgB,EAALrb,EAAUsa,EAAEe,EAALpb,EAAcqb,EAAED,EAATnb,MAAmBqb,EAAEF,EAAVlb,OACjCqb,EAAoD9O,EAAQyI,cACvDnK,YAAc,CAAE9K,MAAO,EAAGC,OAAQ,GAAGsb,EAAAD,EADlCtb,MAAOwb,OAAO,IAAAD,EAAG,EAACA,EAAAE,EAAAH,EAAErb,OAAQyb,WAAOD,EAAG,EAACA,EAG/CR,GADAF,EAAaZ,EAAKqB,GACQJ,EAAKI,EAE/BN,GADAF,EAAaZ,EAAKsB,GACQL,EAAKK,EAC/BlP,EAAUA,EAAQyI,aACrB,CAED,GAAI4F,EAAO,CAAAc,IAAAA,GACoB,CAACV,EAAYF,GAAvCA,EAAUY,GAAEV,GAAAA,EAAUU,GAAA,EAC1B,CACD,GAAIb,EAAO,CAAAc,IAAAA,GACoB,CAACV,EAAYF,GAAvCA,EAAUY,GAAEV,GAAAA,EAAUU,GAAA,EAC1B,CACD,IACMC,GADgBzY,KAAKuB,MAAnB0O,UACqByI,cAActP,GAC3C/O,EAAaoe,cAAsBlM,GACnC,IAAMoM,GAAa3Y,KAAK4Y,WAAWH,GAAY1P,GAI/C,GAFA1O,EADAyb,EAAc9V,KAAK8V,aAGR,IAAPoB,GAAmB,IAAPC,EAEZX,EAAYzN,KAAegO,EAC3BP,EAAYzN,KAAeiO,EAC3BR,EAAYzN,KAAe4O,EAC3BnB,EAAYzN,KAAe6O,EAC3BnB,EAAa1N,KAAetO,EAA6Bic,EAAS/b,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAegO,EAAKna,EAAQqa,EACxCT,EAAYzN,KAAeiO,EAAKpa,EAAQua,EACxCX,EAAYzN,KAAe8O,EAC3BrB,EAAYzN,KAAe6O,EAC3BnB,EAAa1N,KAAetO,EAA6Bkc,EAAShc,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAegO,EAAKla,EAASqa,EACzCV,EAAYzN,KAAeiO,EAAKna,EAASua,EACzCZ,EAAYzN,KAAe4O,EAC3BnB,EAAYzN,KAAe+O,EAC3BrB,EAAa1N,KAAetO,EAA6Bmc,EAASjc,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAegO,EAAKna,EAAQqa,EAAKpa,EAASqa,EACtDV,EAAYzN,KAAeiO,EAAKpa,EAAQua,EAAKta,EAASua,EACtDZ,EAAYzN,KAAe8O,EAC3BrB,EAAYzN,KAAe+O,EAC3BrB,EAAa1N,KAAetO,EAA6Boc,EAASlc,GAAO,GACzE6b,EAAYzN,KAAe4P,OAE1B,CAGD,IAAME,GAAe9B,EAAKna,EAAQqa,EAC5B6B,GAAe9B,EAAKna,EAASua,EAEnCZ,EAAYzN,KAAegO,EAC3BP,EAAYzN,KAAeiO,EAC3BR,EAAYzN,KAAe4O,EAC3BnB,EAAYzN,KAAe6O,EAC3BnB,EAAa1N,KAAetO,EAA6Bic,EAAS/b,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAe8P,GAC3BrC,EAAYzN,KAAeiO,EAC3BR,EAAYzN,KAAe8O,EAC3BrB,EAAYzN,KAAe6O,EAC3BnB,EAAa1N,KAAetO,EAA6Bkc,EAAShc,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAegO,EAC3BP,EAAYzN,KAAe+P,GAC3BtC,EAAYzN,KAAe4O,EAC3BnB,EAAYzN,KAAe+O,EAC3BrB,EAAa1N,KAAetO,EAA6Bmc,EAASjc,GAAO,GACzE6b,EAAYzN,KAAe4P,GAE3BnC,EAAYzN,KAAe8P,GAC3BrC,EAAYzN,KAAe+P,GAC3BtC,EAAYzN,KAAe8O,EAC3BrB,EAAYzN,KAAe+O,EAC3BrB,EAAa1N,KAAetO,EAA6Boc,EAASlc,GAAO,GACzE6b,EAAYzN,KAAe4P,EAC9B,CAED7C,EAAYhb,QAtQG,GAuQfgb,EAAYlL,WACZ5K,KAAK6V,aAAe9M,CACvB,GACL5I,CAAAA,IAAAxC,cAAAA,MAOI,SAAYkE,EAAQgH,EAAalO,EAAO+M,EAAYoB,EAAcC,GAC9D,IAAM+M,EAAc,IAAIpN,EAAkB1I,KAAK0B,GAAI1B,KAAK6C,QAAS7C,KAAKuV,qBAAsB1T,EAAQgH,EAAalO,EAAOmO,EAAcpB,EAAYqB,EAAW,GAC7J/I,KAAK8V,YAAcA,EACnB9V,KAAK+V,UAAUvV,KAAKsV,EACvB,IACL3V,IAAA,aAAAxC,MAYI,SAAWyL,EAASL,EAAWgQ,GAC3B,IAAQjD,EAAgB9V,KAAhB8V,YACRzb,EAAayb,GACb,IAAM6C,EAAa7C,EAAY8C,WAAWxP,GAE1C,GAAmB,aAAfuP,EAA2B,CAC3B,GAAII,EACA,MAAM,IAAIve,MAAM,sCAEpB,IAAQqH,EAAyDiU,EAAzDjU,OAAQgH,EAAiDiN,EAAjDjN,YAAanB,EAAoCoO,EAApCpO,WAAYoB,EAAwBgN,EAAxBhN,aAAcnO,EAAUmb,EAAVnb,MAEvD,OADAqF,KAAKwX,YAAY3V,EAAQgH,EAAalO,EAAO+M,EAAYoB,EAAcC,GAChE/I,KAAK4Y,WAAWxP,EAASL,GAAW,EAC9C,CACD,OAAO4P,CACV,IACLxY,IAAA,kBAAAxC,MAOI,WAAkBqb,IAAAA,OACN5C,EAAgBpW,KAAhBoW,YACRA,EAAY6C,MAAK,SAAC3d,EAAGD,UAAMC,EAAE0N,OAAS3N,EAAE2N,MAAO,IAC/CoN,EAAYjV,SAAQ,SAAC+U,GACbA,aAAsBxN,GACtBsQ,EAAKjD,UAAUvV,KAAK0V,GACpB8C,EAAKlD,YAAc,MAGnBkD,EAAKE,QAAQhD,EAE7B,GACK,GACL/V,CAAAA,IAAAxC,SAAAA,MAOI,WAA2Bwb,IAAAA,EACfzX,EAAmB1B,KAAnB0B,GAAImS,EAAe7T,KAAf6T,WACNuF,EAAM,IAAIxF,aAAaC,EAAY,EAAG7T,KAAK6V,cAC3ClQ,EAA0D,QAApDwT,EAAGnZ,KAAKuV,qBAAqBpN,UAAU,qBAAa,IAAAgR,EAAAA,EAAI,KACpEzX,EAAG0E,WAAW1E,EAAG2E,aAAcV,GAC/BjE,EAAGuT,WAAWvT,EAAG2E,aAAc+S,EAAK1X,EAAG2X,cAKvCrZ,KAAK+V,UAAU5U,SAAQ,SAAC8F,EAAUrH,GAI9BqH,EAASqS,MACrB,IAEQtZ,KAAKoW,YAAc,EACtB,KAAA7C,CA5VkCjS,CAAT,CAASA,GA6VvC1C,EAAA,IAAA2U,GC/XA,IAmBagG,WAAUC,GAAA9W,EAAA6W,EAAAC,OAAAC,EAAA7W,EAAA2W,GAInB,SAAAA,EAAYG,EAAYC,GAAa,IAAAC,EAQ/B,OAR+B7Z,OAAAwZ,GACzBtZ,EAAA8C,EAAR6W,EAAAH,EAAA5d,KAAAmE,OAAQ,kBAAA,GAAAC,EAAA8C,EAAA6W,yBAAA3Z,EAAA8C,EAAA6W,aAFH,GAGLA,EAAKF,WAAaA,EAClBE,EAAKD,2WAAWE,EACZC,MAAO,SACPC,OAAQ,SACRC,QAAS,UACNL,GACLC,CACL,QACL1Z,EAAAqZ,EAAApZ,KAAAA,CAAAA,CAAAA,sCAAAxC,MAMI,SAAuCgc,GACnC,MAAO,CACHG,MAAOH,EAAYG,MACnBC,OAAsC,iBAAvBJ,EAAYI,UAAmBvd,OACrCmd,EAAYI,QACfJ,EAAYI,OAClBC,QAASL,EAAYK,QACrBC,aAAcN,EAAYM,aAC1BC,QAASP,EAAYO,QACrBC,gBAAiBR,EAAYQ,gBAC7BC,QAAST,EAAYS,QAE5B,KAAAb,CAAA,EAhC2BzZ,GCDnBua,EACE,GCCFC,EAAaC,SAAAA,GAAA7X,EAAA4X,EAAAC,GAAAC,IAAAA,EAAA5X,EAAA0X,GAGtB,SAAAA,EAAYvZ,GAAM0Z,IAAAA,EAAA1a,EAAAua,KAAAA,GACNra,EAAA8C,EAAR0X,EAAAD,EAAA3e,KAAAmE,OAAQ,YAAA,GAAAC,EAAA8C,EAAA0X,GAAA,gBAAA,GACRA,EAAK1Z,KAAOA,EACZ,IAAM2Z,EAAYD,EAAKC,SAAW,CAAE,EAMX,OALzB3Z,EAAK2Z,SAASvZ,SAAQ,SAACwZ,GACnB,IAAMC,EAASD,EAAQC,QACPF,EAASE,GAAUF,EAASE,IAAW,CAAA,GAChDD,EAAQE,OAASF,EAAQG,MAC5C,IACQL,EAAKC,SAAWA,EAASD,CAC5B,QAAAva,EAAAoa,EAAA,CAAA,CAAAna,IAAA,YAAAxC,MAAAgQ,IAAAC,MACD,SAAAmN,EAAW7T,EAAO8T,GAAUC,IAAAC,EAAAC,EAAAC,EAAAH,EAAAC,KAAAvN,OAAAA,IAAAK,MAAA,SAAAqN,GAAAA,cAAAA,EAAAnN,KAAAmN,EAAAlN,MAEpBgN,KAAAA,EAAAA,OAAcpgB,EAASqgB,EAAAzN,IAAAC,MAAAwN,SAAAA,IAAAE,IAAAA,EAAAC,EAAAC,EAAAb,EAAA,OAAAhN,IAAAK,MAAA,SAAAyN,GAAAA,cAAAA,EAAAvN,KAAAuN,EAAAtN,MAAA,KAAA,EAIL,GAFZmN,EAAYJ,EAAgBvd,MAC5B4d,EAAQN,EAAKla,KAAK2a,MAAMtI,MAAK,SAACuI,GAAI,OAAKA,EAAKC,KAAON,CAAU,IACnEN,EAAW7M,YACGpT,IAAVwgB,EAAmBE,CAAAA,EAAAtN,KACnC,GAAA,KAAA,CAUgB,OALMwM,OAA0B5f,IAAhBogB,IACcK,QAAvBA,EAAAP,EAAKP,SAASa,EAAMK,WAApBJ,IAAuBA,OAAvBA,EAAAA,EAA0BL,KAAgB,GACzCjU,EAAM2U,cACR,EACNV,EAAcI,EAAMK,GAAGH,EAAAtN,OACjB,CACF2N,QAAQ,EACRC,QAASR,EAAMK,GACfN,UAAAA,EACAU,QAAShB,EAAWiB,UACpBC,SAAUX,EAAMY,SAAWxB,EAC3ByB,SAAU,EACVC,QAASd,EAAMe,QAAU3B,EACzB4B,QAAShB,EAAMiB,QACfC,SAAU,EACVC,SAAU,EACV9f,MAAO2e,EAAM3e,MACbC,OAAQ0e,EAAM1e,QACjB4e,KAAAA,EAAAA,EAAAtN,KAGjB,GAAA,MAAA,KAAA,GAQgB,OAHImN,IAAcjB,IACdc,OAAcpgB,GACjB0gB,EAAAtN,QACK,CACF2N,QAAQ,EACRR,UAAAA,EACAU,QAAShB,EAAWiB,WACvB,KAAA,GAAA,IAAA,MAAA,OAAAR,EAAA/L,OAAA0L,GAAAA,EA3CF,IAAA,KAAA,EAAA,KAACF,EAAkBF,EAAW2B,SAAYzB,EAAgB0B,KAAI,CAAAvB,EAAAlN,KAAAkN,EAAAA,KAAAA,CAAAA,OAAAA,EAAAwB,cAAAzB,IAAA,KAAA,GAAA,KAAA,EAAAC,EAAAlN,KAAAkN,EAAAA,MAAAA,KAAAA,EAAAA,IAAAA,MAAAA,OAAAA,EAAA3L,UAAAqL,EAAA,OA8CxET,CAAA,CA/DqBC,CCFHra,GAAA4c,SAAAA,IAAA/c,EAAA+c,KAAAA,EDlBvB,KEwBaC,EAAaC,SAAAA,GAAAta,EAAAqa,EAAAC,GAAAC,IAAAA,EAAAra,EAAAma,GAMtB,SAAAA,EAAYrD,EAAYC,EAAahY,EAAMJ,EAAO2b,EAAUC,GAAc,IAAAC,EAkC5C,OAlC4Crd,EAAAC,KAAA+c,GACvC9c,EAAA8C,EAA/Bqa,EAAAH,EAAAphB,KAAAmE,KAAM0Z,EAAYC,IAAa,YAAA,GAAA1Z,EAAA8C,EAAAqa,GAAA,eAAA,GAAAnd,EAAA8C,EAAAqa,GAAA,YAAA,GAAAnd,EAAA8C,EAAAqa,GAAA,cAAA,GAAAnd,EAAA8C,EAAAqa,GAAA,WAFxB,IAAIC,KAGXD,EAAKzb,KAAOA,EAEZtH,EADiBkH,EAAMyB,oBACUuQ,EAAmB,2DACpD6J,EAAKhU,QAAU7H,EAAM0O,UAAU6B,YAAY,eAAgB,CACvDwL,IAAKJ,EAKL3N,kBAAkB,GACnB,CACCgO,SAAS,IAObC,MAAML,GACD9P,KAAIoQ,WAAAA,IAAAA,EAAA/P,EAAAC,IAAAC,MAAC,SAAA8P,EAAOC,GAAQ,OAAAhQ,IAAAK,MAAA4P,SAAAC,GAAA,cAAAA,EAAA3P,KAAA2P,EAAA1P,aAAA,OAAA0P,EAAA1P,KAAA,EAEHwP,EAASG,OAAM,KAAA,EAAjCV,EAAKrc,KAAI8c,EAAA3O,KAGTkO,EAAKW,OAAS,IAAIzD,EAAc8C,EAAKrc,MAGrCqc,EAAKrc,KAAK2a,MAAMva,SAAQ,SAACoa,GACrB6B,EAAKY,SAASjN,IAAIwK,EAAMK,GAAIL,EAC5C,IACY6B,EAAKa,cAAc,wBAAAJ,EAAAnO,OAAAgO,GAAAA,OACtBQ,OAAAA,SAAAA,UAAAT,EAAAxV,MAAApN,KAAAA,YAZQ4iB,IAaJlQ,MAAMpO,QAAQsO,OAAO2P,CAC7B,CAoBA,OApBAld,EAAA6c,EAAA5c,CAAAA,CAAAA,oBAAAxC,MACD,SAAcoe,GACV,IAAMR,EAAQvb,KAAKge,SAASpR,IAAImP,GAChC,QAAchhB,IAAVwgB,EACA,MAAU,IAAA/gB,MAAKgC,SAAAA,OAAUuf,EAAO,uBAAAvf,OAAsBwD,KAAK0Z,aAE/D,MAAO,CACHhd,EAAG6e,EAAM7e,EACTC,EAAG4e,EAAM5e,EACTC,MAAO2e,EAAM3e,MACbC,OAAQ0e,EAAM1e,OAErB,GAAAsD,CAAAA,kBAAAxC,MACD,WACQqC,KAAKme,QAEuBne,KAAKe,OACjCf,KAAKme,QAAS,EACdne,KAAKwQ,KAAK,UAEjB,KAAAuM,CA7D8BxD,CAATyD,CAASzD,GA8DnC3a,EAAA,IAAAme,GClCAne,EAAA,aAjC0Bwf,GAAA1b,EAAA2b,EAAAD,GAAA,IAAAE,EAAA1b,EAAAyb,GAGtB,SAAAA,EAAY3E,EAAYC,EAAa4E,OAASC,EAAAze,EAAAse,KAAAA,GAElDpe,EAAA8C,EADQyb,EAAAF,EAAAziB,UAAM6d,EAAYC,uBAC1B1Z,EAAA8C,EAAAyb,GAAA,eAAA,GACQ,IAAMC,EAA4BF,EAAQG,QAAQ,SAAU,IAEtDC,EAAwBH,EAAK7E,YAE7BiF,EAAiB,CACnB9E,MAAO6E,EAAsB7E,MAC7BC,OAAgD,iBAAjC4E,EAAsB5E,OAAmB,GAAAvd,OAC/CmiB,EAAsB5E,QACzB4E,EAAsB5E,OAC5BC,QAAS2E,EAAsB3E,QAC/BC,aAAc0E,EAAsB1E,aACpCC,QAASyE,EAAsBzE,QAC/BC,gBAAiBwE,EAAsBxE,gBACvCC,QAASuE,EAAsBvE,SAE7ByE,EAAW,IAAIC,SAASpF,EAAU,OAAAld,OAASiiB,OAA8BG,GAUxD,OATvBC,EACK/R,OACAO,MAAK,WAENmR,EAAKL,QAAS,EACdK,EAAKhO,KAAK,SACtB,IACajD,MAAMpO,QAAQsO,OACnB+Q,EAAKK,SAAWA,EAChBL,EAAKD,QAAUA,EAAQC,CAC1B,CAAA,OAAAte,EAAAme,EAhC8B9E,EAAAA,ICQnC3a,EAAA,IAD0BsB,YAAA6e,IAAAhf,EAAAC,KAAA+e,EAAA","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}