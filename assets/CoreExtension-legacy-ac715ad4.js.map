{"version":3,"file":"CoreExtension-legacy-ac715ad4.js","sources":["../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/lib/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/utils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/common/EventEmitter.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreContextTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/CoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/ShaderUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/WebGlUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreShader.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderOp.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/RendererUtils.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/textures/Texture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/textures/ColorTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/textures/SubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreCtxSubTexture.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/internal/BufferCollection.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/renderers/webgl/WebGlCoreRenderer.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/TrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/renderers/SdfTextRenderer/internal/SpecialCodepoints.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/FontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/internal/SdfFontShaper.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/SdfTrFontFace/SdfTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/text-rendering/font-face-types/WebTrFontFace.js","../../node_modules/.pnpm/@lightningjs+renderer@0.4.0/node_modules/@lightningjs/renderer/dist/src/core/CoreExtension.js"],"sourcesContent":["/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const boltProperties = [\n    'x',\n    'y',\n    'z',\n    'w',\n    'h',\n    'color',\n    'alpha',\n    'parentId',\n    'textureId',\n    'rtt',\n    'scale',\n    'rotation',\n];\nexport const pipelineEvents = {\n    created: 1,\n    updated: 2,\n    deleted: 4,\n    attached: 8,\n    detached: 16,\n    onscreen: 32,\n    offscreen: 64,\n    progress: 128,\n    finished: 256,\n};\nexport function createWebGLContext(canvas) {\n    const config = {\n        alpha: true,\n        antialias: false,\n        depth: false,\n        stencil: true,\n        desynchronized: false,\n        failIfMajorPerformanceCaveat: true,\n        powerPreference: 'high-performance',\n        premultipliedAlpha: true,\n        preserveDrawingBuffer: false,\n    };\n    return (\n    // TODO: Remove this assertion once this issue is fixed in TypeScript\n    // https://github.com/microsoft/TypeScript/issues/53614\n    (canvas.getContext('webgl', config) ||\n        canvas.getContext('experimental-webgl', config)));\n}\n/**\n * Asserts a condition is truthy, otherwise throws an error\n *\n * @remarks\n * Useful at the top of functions to ensure certain conditions, arguments and\n * properties are set/met before continuing. When using this function,\n * TypeScript will narrow away falsy types from the condition.\n *\n * @param condition\n * @param message\n * @returns\n */\nexport function assertTruthy(condition, message) {\n    if (!condition) {\n        throw new Error(message || 'Assertion failed');\n    }\n}\n/**\n * Merges two colors based on a given progress value.\n *\n * This function takes two colors (c1 and c2) represented as 32-bit integers\n * in RGBA format and blends them based on the provided progress value (p).\n * The result is a new color that is a weighted combination of the input colors,\n * where the weight is determined by the progress value.\n *\n * @param {number} c1 - The first color in RGBA format (32-bit integer).\n * @param {number} c2 - The second color in RGBA format (32-bit integer).\n * @param {number} p - The progress value between 0 and 1.\n * @returns {number} The merged color as a 32-bit integer in RGBA format.\n */\nexport function mergeColorProgress(rgba1, rgba2, p) {\n    const r1 = Math.trunc(rgba1 >>> 24);\n    const g1 = Math.trunc((rgba1 >>> 16) & 0xff);\n    const b1 = Math.trunc((rgba1 >>> 8) & 0xff);\n    const a1 = Math.trunc(rgba1 & 0xff);\n    const r2 = Math.trunc(rgba2 >>> 24);\n    const g2 = Math.trunc((rgba2 >>> 16) & 0xff);\n    const b2 = Math.trunc((rgba2 >>> 8) & 0xff);\n    const a2 = Math.trunc(rgba2 & 0xff);\n    const r = Math.round(r2 * p + r1 * (1 - p));\n    const g = Math.round(g2 * p + g1 * (1 - p));\n    const b = Math.round(b2 * p + b1 * (1 - p));\n    const a = Math.round(a2 * p + a1 * (1 - p));\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter.\n *\n * @internalRemarks\n * This method does NOT premultiply the alpha into the color channels. If that\n * is required (for internal use only) use {@link mergeColorAlphaPremultiplied}\n * instead.\n *\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @returns\n */\nexport function mergeColorAlpha(rgba, alpha) {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = Math.trunc((rgba & 0xff) * alpha);\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Given an RGBA encoded number, returns back the RGBA number with it's alpha\n * component multiplied by the passed `alpha` parameter. Before returning, the\n * final alpha value is multiplied into the color channels.\n *\n * @remarks\n * If `flipEndianess` is set to true, the function will returned an ABGR encoded number\n * which is useful when the color value needs to be passed into a shader attribute.\n *\n * NOTE: This method returns a PREMULTIPLIED alpha color which is generally only useful\n * in the context of the internal rendering process. Use {@link mergeColorAlpha} if you\n * need to blend an alpha value into a color in the context of the Renderer's\n * main API.\n *\n * @internalRemarks\n * Do not expose this method in the main API because Renderer users should instead use\n * {@link mergeColorAlpha} to manipulate the alpha value of a color.\n *\n * @internal\n * @param rgba RGBA encoded number\n * @param alpha Normalized alpha value (Range: 0.0 - 1.0)\n * @param flipEndianess Flip the endianess. RGBA becomes encoded as ABGR (for inserting colors into shader attributes)\n * @returns\n */\nexport function mergeColorAlphaPremultiplied(rgba, alpha, flipEndianess = false) {\n    const newAlpha = ((rgba & 0xff) / 255) * alpha;\n    const r = Math.trunc((rgba >>> 24) * newAlpha);\n    const g = Math.trunc(((rgba >>> 16) & 0xff) * newAlpha);\n    const b = Math.trunc(((rgba >>> 8) & 0xff) * newAlpha);\n    const a = Math.trunc(newAlpha * 255);\n    if (flipEndianess) {\n        return ((a << 24) | (b << 16) | (g << 8) | r) >>> 0;\n    }\n    return ((r << 24) | (g << 16) | (b << 8) | a) >>> 0;\n}\n/**\n * Returns true if the given object has the given \"own\" property.\n *\n * @param obj\n * @param prop\n * @returns\n */\nexport function hasOwn(obj, prop) {\n    return Object.prototype.hasOwnProperty.call(obj, prop);\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const getNormalizedRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r / 255, g / 255, b / 255, a / 255];\n};\nexport const getRgbaComponents = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    return [r, g, b, a];\n};\nexport const norm = (rgba) => {\n    const r = rgba >>> 24;\n    const g = (rgba >>> 16) & 0xff;\n    const b = (rgba >>> 8) & 0xff;\n    const a = rgba & 0xff;\n    const rgbaArr = [r / 255, g / 255, b / 255, a / 255];\n    rgbaArr[0] = Math.max(0, Math.min(255, rgbaArr[0]));\n    rgbaArr[1] = Math.max(0, Math.min(255, rgbaArr[1]));\n    rgbaArr[2] = Math.max(0, Math.min(255, rgbaArr[2]));\n    rgbaArr[3] = Math.max(0, Math.min(255, rgbaArr[3]));\n    let v = ((rgbaArr[3] | 0) << 24) +\n        ((rgbaArr[0] | 0) << 16) +\n        ((rgbaArr[1] | 0) << 8) +\n        (rgbaArr[2] | 0);\n    if (v < 0) {\n        v = 0xffffffff + v + 1;\n    }\n    return v;\n};\n/**\n * Get a CSS color string from a RGBA color\n *\n * @param color\n * @returns\n */\nexport function getRgbaString(color) {\n    const r = Math.floor(color[0] * 255.0);\n    const g = Math.floor(color[1] * 255.0);\n    const b = Math.floor(color[2] * 255.0);\n    const a = Math.floor(color[3] * 255.0);\n    return `rgba(${r},${g},${b},${a.toFixed(4)})`;\n}\nexport function intersectBound(a, b) {\n    const intersection = {\n        x1: Math.max(a.x1, b.x1),\n        y1: Math.max(a.y1, b.y1),\n        x2: Math.min(a.x2, b.x2),\n        y2: Math.min(a.y2, b.y2),\n    };\n    if (intersection.x1 < intersection.x2 && intersection.y1 < intersection.y2) {\n        return intersection;\n    }\n    return {\n        x1: 0,\n        y1: 0,\n        x2: 0,\n        y2: 0,\n    };\n}\nexport function intersectRect(a, b) {\n    const x = Math.max(a.x, b.x);\n    const y = Math.max(a.y, b.y);\n    const width = Math.min(a.x + a.width, b.x + b.width) - x;\n    const height = Math.min(a.y + a.height, b.y + b.height) - y;\n    if (width > 0 && height > 0) {\n        return {\n            x,\n            y,\n            width,\n            height,\n        };\n    }\n    return {\n        x: 0,\n        y: 0,\n        width: 0,\n        height: 0,\n    };\n}\nexport function compareRect(a, b) {\n    if (a === b) {\n        return true;\n    }\n    if (a === null || b === null) {\n        return false;\n    }\n    return (a.x === b.x && a.y === b.y && a.width === b.width && a.height === b.height);\n}\nexport function isBoundPositive(bound) {\n    return bound.x1 < bound.x2 && bound.y1 < bound.y2;\n}\nexport function isRectPositive(rect) {\n    return rect.width > 0 && rect.height > 0;\n}\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Core Utility Functions\n *\n * @module\n */\nexport const EPSILON = 0.000001;\nexport let ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;\nexport const RANDOM = Math.random;\nexport const ANGLE_ORDER = 'zyx';\nconst degree = Math.PI / 180;\nexport const setMatrixArrayType = (type) => {\n    ARRAY_TYPE = type;\n};\nexport const toRadian = (a) => {\n    return a * degree;\n};\nexport const equals = (a, b) => {\n    return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));\n};\nexport const rand = (min, max) => {\n    return Math.floor(Math.random() * (max - min + 1) + min);\n};\nexport const isPowerOfTwo = (value) => {\n    return value && !(value & (value - 1));\n};\nconst getTimingBezier = (a, b, c, d) => {\n    const xc = 3.0 * a;\n    const xb = 3.0 * (c - a) - xc;\n    const xa = 1.0 - xc - xb;\n    const yc = 3.0 * b;\n    const yb = 3.0 * (d - b) - yc;\n    const ya = 1.0 - yc - yb;\n    return function (time) {\n        if (time >= 1.0) {\n            return 1;\n        }\n        if (time <= 0) {\n            return 0;\n        }\n        let t = 0.5, cbx, cbxd, dx;\n        for (let it = 0; it < 20; it++) {\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                return t * (t * (t * ya + yb) + yc);\n            }\n            // Cubic bezier derivative.\n            cbxd = t * (t * (3 * xa) + 2 * xb) + xc;\n            if (cbxd > 1e-10 && cbxd < 1e-10) {\n                // Problematic. Fall back to binary search method.\n                break;\n            }\n            t += dx / cbxd;\n        }\n        // Fallback: binary search method. This is more reliable when there are near-0 slopes.\n        let minT = 0;\n        let maxT = 1;\n        for (let it = 0; it < 20; it++) {\n            t = 0.5 * (minT + maxT);\n            cbx = t * (t * (t * xa + xb) + xc);\n            dx = time - cbx;\n            if (dx > -1e-8 && dx < 1e-8) {\n                // Solution found!\n                return t * (t * (t * ya + yb) + yc);\n            }\n            if (dx < 0) {\n                maxT = t;\n            }\n            else {\n                minT = t;\n            }\n        }\n    };\n};\nexport const getTimingFunction = (str) => {\n    switch (str) {\n        case 'linear':\n            return function (time) {\n                return time;\n            };\n        case 'ease':\n            return getTimingBezier(0.25, 0.1, 0.25, 1.0);\n        case 'ease-in':\n            return getTimingBezier(0.42, 0, 1.0, 1.0);\n        case 'ease-out':\n            return getTimingBezier(0, 0, 0.58, 1.0);\n        case 'ease-in-out':\n            return getTimingBezier(0.42, 0, 0.58, 1.0);\n        case 'ease-in-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-out-sine':\n            return getTimingBezier(0.12, 0, 0.39, 0);\n        case 'ease-in-out-sine':\n            return getTimingBezier(0.37, 0, 0.63, 1);\n        case 'ease-in-cubic':\n            return getTimingBezier(0.32, 0, 0.67, 0);\n        case 'ease-out-cubic':\n            return getTimingBezier(0.33, 1, 0.68, 1);\n        case 'ease-in-out-cubic':\n            return getTimingBezier(0.65, 0, 0.35, 1);\n        case 'ease-in-circ':\n            return getTimingBezier(0.55, 0, 1, 0.45);\n        case 'ease-out-circ':\n            return getTimingBezier(0, 0.55, 0.45, 1);\n        case 'ease-in-out-circ':\n            return getTimingBezier(0.85, 0, 0.15, 1);\n        case 'ease-in-back':\n            return getTimingBezier(0.36, 0, 0.66, -0.56);\n        case 'ease-out-back':\n            return getTimingBezier(0.34, 1.56, 0.64, 1);\n        case 'ease-in-out-back':\n            return getTimingBezier(0.68, -0.6, 0.32, 1.6);\n        case 'step-start':\n            return function () {\n                return 1;\n            };\n        case 'step-end':\n            return function (time) {\n                return time === 1 ? 1 : 0;\n            };\n        default:\n            // eslint-disable-next-line no-case-declarations\n            const s = 'cubic-bezier(';\n            if (str && str.indexOf(s) === 0) {\n                const parts = str\n                    .substr(s.length, str.length - s.length - 1)\n                    .split(',');\n                if (parts.length !== 4) {\n                    console.warn('Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                const a = parseFloat(parts[0] || '0.42');\n                const b = parseFloat(parts[1] || '0');\n                const c = parseFloat(parts[2] || '1');\n                const d = parseFloat(parts[3] || '1');\n                if (isNaN(a) || isNaN(b) || isNaN(c) || isNaN(d)) {\n                    console.warn(' Unknown timing function: ' + str);\n                    // Fallback: use linear.\n                    return function (time) {\n                        return time;\n                    };\n                }\n                return getTimingBezier(a, b, c, d);\n            }\n            else {\n                console.warn('Unknown timing function: ' + str);\n                // Fallback: use linear.\n                return function (time) {\n                    return time;\n                };\n            }\n    }\n};\nif (!Math.hypot)\n    Math.hypot = (...args) => {\n        let y = 0, i = args.length;\n        while (i--) {\n            y += args[i] * args[i];\n        }\n        return Math.sqrt(y);\n    };\n//# sourceMappingURL=utils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * EventEmitter base class\n */\nexport class EventEmitter {\n    eventListeners = {};\n    on(event, listener) {\n        let listeners = this.eventListeners[event];\n        if (!listeners) {\n            listeners = [];\n        }\n        listeners.push(listener);\n        this.eventListeners[event] = listeners;\n    }\n    off(event, listener) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        if (!listener) {\n            delete this.eventListeners[event];\n            return;\n        }\n        const index = listeners.indexOf(listener);\n        if (index >= 0) {\n            listeners.splice(index, 1);\n        }\n    }\n    once(event, listener) {\n        const onceListener = (target, data) => {\n            this.off(event, onceListener);\n            listener(target, data);\n        };\n        this.on(event, onceListener);\n    }\n    emit(event, data) {\n        const listeners = this.eventListeners[event];\n        if (!listeners) {\n            return;\n        }\n        [...listeners].forEach((listener) => {\n            listener(this, data);\n        });\n    }\n    removeAllListeners() {\n        this.eventListeners = {};\n    }\n}\n//# sourceMappingURL=EventEmitter.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreContextTexture {\n    textureSource;\n    constructor(textureSource) {\n        this.textureSource = textureSource;\n    }\n}\n//# sourceMappingURL=CoreContextTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreContextTexture } from './CoreContextTexture.js';\nexport class CoreRenderer {\n    stage;\n    constructor(stage) {\n        this.stage = stage;\n    }\n}\n//# sourceMappingURL=CoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreRenderOp {\n}\n//# sourceMappingURL=CoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class CoreShader {\n    // abstract draw(): void;\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {};\n    }\n}\n//# sourceMappingURL=CoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n//#endregion Types\nexport function createShader(gl, type, source) {\n    const shader = gl.createShader(type);\n    if (!shader) {\n        throw new Error();\n    }\n    gl.shaderSource(shader, source);\n    gl.compileShader(shader);\n    const success = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n    if (success) {\n        return shader;\n    }\n    console.log(gl.getShaderInfoLog(shader));\n    gl.deleteShader(shader);\n}\nexport function createProgram(gl, vertexShader, fragmentShader) {\n    const program = gl.createProgram();\n    if (!program) {\n        throw new Error();\n    }\n    gl.attachShader(program, vertexShader);\n    gl.attachShader(program, fragmentShader);\n    gl.linkProgram(program);\n    const success = gl.getProgramParameter(program, gl.LINK_STATUS);\n    if (success) {\n        return program;\n    }\n    console.log(gl.getProgramInfoLog(program));\n    gl.deleteProgram(program);\n    return undefined;\n}\n//# sourceMappingURL=ShaderUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Generic WebGL Utility Functions\n *\n * @remarks\n * Nothing here should be coupled to Renderer logic / types.\n *\n * @param gl\n * @returns\n */\nexport function isWebGl2(gl) {\n    return (self.WebGL2RenderingContext && gl instanceof self.WebGL2RenderingContext);\n}\n//# sourceMappingURL=WebGlUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, hasOwn } from '../../../utils.js';\nimport { CoreShader } from '../CoreShader.js';\nimport { createProgram, createShader, } from './internal/ShaderUtils.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nexport class WebGlCoreShader extends CoreShader {\n    boundBufferCollection = null;\n    buffersBound = false;\n    program;\n    /**\n     * Vertex Array Object\n     *\n     * @remarks\n     * Used by WebGL2 Only\n     */\n    vao;\n    renderer;\n    gl;\n    attributeBuffers;\n    attributeLocations;\n    attributeNames;\n    uniformLocations;\n    uniformTypes;\n    supportsIndexedTextures;\n    constructor(options) {\n        super();\n        const renderer = (this.renderer = options.renderer);\n        const gl = (this.gl = this.renderer.gl);\n        this.supportsIndexedTextures = options.supportsIndexedTextures || false;\n        // Check that extensions are supported\n        const webGl2 = isWebGl2(gl);\n        const requiredExtensions = (webGl2 && options.webgl2Extensions) ||\n            (!webGl2 && options.webgl1Extensions) ||\n            [];\n        const glVersion = webGl2 ? '2.0' : '1.0';\n        requiredExtensions.forEach((extensionName) => {\n            if (!gl.getExtension(extensionName)) {\n                throw new Error(`Shader \"${this.constructor.name}\" requires extension \"${extensionName}\" for WebGL ${glVersion} but wasn't found`);\n            }\n        });\n        // Gather shader sources\n        // - If WebGL 2 and special WebGL 2 sources are provided, we copy those sources and delete\n        // the extra copy of them to save memory.\n        // TODO: This could be further made optimal by just caching the compiled shaders and completely deleting\n        // the source code\n        const shaderSources = options.shaderSources ||\n            this.constructor.shaderSources;\n        if (!shaderSources) {\n            throw new Error(`Shader \"${this.constructor.name}\" is missing shaderSources.`);\n        }\n        else if (webGl2 && shaderSources?.webGl2) {\n            shaderSources.fragment = shaderSources.webGl2.fragment;\n            shaderSources.vertex = shaderSources.webGl2.vertex;\n            delete shaderSources.webGl2;\n        }\n        const textureUnits = renderer.system.parameters.MAX_VERTEX_TEXTURE_IMAGE_UNITS;\n        const vertexSource = shaderSources.vertex instanceof Function\n            ? shaderSources.vertex(textureUnits)\n            : shaderSources.vertex;\n        const fragmentSource = shaderSources.fragment instanceof Function\n            ? shaderSources.fragment(textureUnits)\n            : shaderSources.fragment;\n        const vertexShader = createShader(gl, gl.VERTEX_SHADER, vertexSource);\n        const fragmentShader = createShader(gl, gl.FRAGMENT_SHADER, fragmentSource);\n        if (!vertexShader || !fragmentShader) {\n            throw new Error();\n        }\n        const program = createProgram(gl, vertexShader, fragmentShader);\n        if (!program) {\n            throw new Error();\n        }\n        this.program = program;\n        if (webGl2) {\n            const vao = gl.createVertexArray();\n            if (!vao) {\n                throw new Error();\n            }\n            this.vao = vao;\n            gl.bindVertexArray(this.vao);\n        }\n        this.attributeLocations = {};\n        this.attributeBuffers = {};\n        this.attributeNames = [];\n        [...options.attributes].forEach((attributeName) => {\n            const location = gl.getAttribLocation(this.program, attributeName);\n            if (location < 0) {\n                throw new Error(`${this.constructor.name}: Vertex shader must have an attribute \"${attributeName}\"!`);\n            }\n            const buffer = gl.createBuffer();\n            if (!buffer) {\n                throw new Error(`${this.constructor.name}: Could not create buffer for attribute \"${attributeName}\"`);\n            }\n            this.attributeLocations[attributeName] = location;\n            this.attributeBuffers[attributeName] = buffer;\n            this.attributeNames.push(attributeName);\n        });\n        this.uniformLocations = {};\n        this.uniformTypes = {};\n        options.uniforms.forEach((uniform) => {\n            const location = gl.getUniformLocation(this.program, uniform.name);\n            this.uniformTypes[uniform.name] = uniform.uniform;\n            if (!location) {\n                console.warn(`Shader \"${this.constructor.name}\" could not get uniform location for \"${uniform.name}\"`);\n                return;\n            }\n            this.uniformLocations[uniform.name] = location;\n        });\n    }\n    bindBufferAttribute(location, buffer, attribute) {\n        const gl = this.gl;\n        gl.enableVertexAttribArray(location);\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.vertexAttribPointer(location, attribute.size, attribute.type, attribute.normalized, attribute.stride, attribute.offset);\n    }\n    disableAttribute(location) {\n        this.gl.disableVertexAttribArray(location);\n    }\n    disableAttributes() {\n        for (const loc in this.attributeLocations) {\n            this.disableAttribute(this.attributeLocations[loc]);\n        }\n        this.boundBufferCollection = null;\n    }\n    /**\n     * Given two sets of Shader props destined for this Shader, determine if they can be batched together\n     * to reduce the number of draw calls.\n     *\n     * @remarks\n     * This is used by the {@link WebGlCoreRenderer} to determine if it can batch multiple consecutive draw\n     * calls into a single draw call.\n     *\n     * By default, this returns false (meaning no batching is allowed), but can be\n     * overridden by child classes to provide more efficient batching.\n     *\n     * @param propsA\n     * @param propsB\n     * @returns\n     */\n    canBatchShaderProps(propsA, propsB) {\n        return false;\n    }\n    bindRenderOp(renderOp, props) {\n        this.bindBufferCollection(renderOp.buffers);\n        if (renderOp.textures.length > 0) {\n            this.bindTextures(renderOp.textures);\n        }\n        const { gl } = renderOp;\n        // Bind standard automatic uniforms\n        this.setUniform('u_resolution', [gl.canvas.width, gl.canvas.height]); // !!!\n        this.setUniform('u_pixelRatio', renderOp.options.pixelRatio);\n        if (props) {\n            // Bind optional automatic uniforms\n            // These are only bound if their keys are present in the props.\n            if (hasOwn(props, '$dimensions')) {\n                let dimensions = props.$dimensions;\n                if (!dimensions) {\n                    dimensions = renderOp.dimensions;\n                }\n                this.setUniform('u_dimensions', [dimensions.width, dimensions.height]);\n            }\n            if (hasOwn(props, '$alpha')) {\n                let alpha = props.$alpha;\n                if (!alpha) {\n                    alpha = renderOp.alpha;\n                }\n                this.setUniform('u_alpha', alpha);\n            }\n            this.bindProps(props);\n        }\n    }\n    setUniform(name, value) {\n        // @ts-expect-error Typing of args is too funky apparently for TS\n        this.gl[this.uniformTypes[name]](this.uniformLocations[name], value);\n    }\n    bindBufferCollection(buffer) {\n        if (this.boundBufferCollection === buffer) {\n            return;\n        }\n        for (const attributeName in this.attributeLocations) {\n            const resolvedBuffer = buffer.getBuffer(attributeName);\n            const resolvedInfo = buffer.getAttributeInfo(attributeName);\n            assertTruthy(resolvedBuffer, `Buffer for \"${attributeName}\" not found`);\n            assertTruthy(resolvedInfo);\n            this.bindBufferAttribute(this.attributeLocations[attributeName], resolvedBuffer, resolvedInfo);\n        }\n        this.boundBufferCollection = buffer;\n    }\n    bindProps(props) {\n        // Implement in child class\n    }\n    bindTextures(textures) {\n        // no defaults\n    }\n    attach() {\n        this.gl.useProgram(this.program);\n        if (isWebGl2(this.gl) && this.vao) {\n            this.gl.bindVertexArray(this.vao);\n        }\n    }\n    detach() {\n        this.disableAttributes();\n    }\n    static shaderSources;\n}\n//# sourceMappingURL=WebGlCoreShader.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { CoreRenderOp } from '../CoreRenderOp.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nconst MAX_TEXTURES = 8; // TODO: get from gl\n/**\n * Can render multiple quads with multiple textures (up to vertex shader texture limit)\n *\n */\nexport class WebGlCoreRenderOp extends CoreRenderOp {\n    gl;\n    options;\n    buffers;\n    shader;\n    shaderProps;\n    alpha;\n    clippingRect;\n    dimensions;\n    bufferIdx;\n    zIndex;\n    length = 0;\n    numQuads = 0;\n    textures = [];\n    maxTextures;\n    constructor(gl, options, buffers, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, zIndex) {\n        super();\n        this.gl = gl;\n        this.options = options;\n        this.buffers = buffers;\n        this.shader = shader;\n        this.shaderProps = shaderProps;\n        this.alpha = alpha;\n        this.clippingRect = clippingRect;\n        this.dimensions = dimensions;\n        this.bufferIdx = bufferIdx;\n        this.zIndex = zIndex;\n        this.gl = gl;\n        this.maxTextures = shader.supportsIndexedTextures\n            ? gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS)\n            : 1;\n    }\n    addTexture(texture) {\n        const { textures, maxTextures } = this;\n        const existingIdx = textures.findIndex((t) => t === texture);\n        if (existingIdx !== -1) {\n            return existingIdx;\n        }\n        const newIdx = textures.length;\n        if (newIdx >= maxTextures) {\n            return 0xffffffff;\n        }\n        this.textures.push(texture);\n        return newIdx;\n    }\n    draw() {\n        const { gl, shader, shaderProps, options } = this;\n        // shaderOp.draw(this);\n        const { shManager } = options;\n        shManager.useShader(shader);\n        shader.bindRenderOp(this, shaderProps);\n        // TODO: Reduce calculations required\n        const quadIdx = (this.bufferIdx / 24) * 6 * 2;\n        // TODO: Move these somewhere else?\n        gl.enable(gl.BLEND);\n        gl.blendFunc(gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n        // Clipping\n        if (this.clippingRect) {\n            const { x, y, width, height } = this.clippingRect;\n            const pixelRatio = options.pixelRatio;\n            const canvasHeight = options.canvas.height;\n            const clipX = Math.round(x * pixelRatio);\n            const clipWidth = Math.round(width * pixelRatio);\n            const clipHeight = Math.round(height * pixelRatio);\n            const clipY = Math.round(canvasHeight - clipHeight - y * pixelRatio);\n            gl.enable(gl.SCISSOR_TEST);\n            gl.scissor(clipX, clipY, clipWidth, clipHeight);\n        }\n        else {\n            gl.disable(gl.SCISSOR_TEST);\n        }\n        gl.drawElements(gl.TRIANGLES, 6 * this.numQuads, gl.UNSIGNED_SHORT, quadIdx);\n    }\n}\n//# sourceMappingURL=WebGlCoreRenderOp.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get device specific webgl parameters\n * @param gl\n */\nexport function getWebGlParameters(gl) {\n    const params = {\n        MAX_RENDERBUFFER_SIZE: 0,\n        MAX_TEXTURE_SIZE: 0,\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment, @typescript-eslint/no-explicit-any\n        MAX_VIEWPORT_DIMS: 0,\n        MAX_VERTEX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_TEXTURE_IMAGE_UNITS: 0,\n        MAX_COMBINED_TEXTURE_IMAGE_UNITS: 0,\n        MAX_VERTEX_ATTRIBS: 0,\n        MAX_VARYING_VECTORS: 0,\n        MAX_VERTEX_UNIFORM_VECTORS: 0,\n        MAX_FRAGMENT_UNIFORM_VECTORS: 0,\n    };\n    // Map over all parameters and get them\n    const keys = Object.keys(params);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        params[key] = gl.getParameter(gl[key]);\n    });\n    return params;\n}\n/**\n * Get device webgl extensions\n * @param gl\n */\nexport function getWebGlExtensions(gl) {\n    const extensions = {\n        ANGLE_instanced_arrays: null,\n        WEBGL_compressed_texture_s3tc: null,\n        WEBGL_compressed_texture_astc: null,\n        WEBGL_compressed_texture_etc: null,\n        WEBGL_compressed_texture_etc1: null,\n        WEBGL_compressed_texture_pvrtc: null,\n        WEBKIT_WEBGL_compressed_texture_pvrtc: null,\n        WEBGL_compressed_texture_s3tc_srgb: null,\n        OES_vertex_array_object: null,\n    };\n    // Map over all extensions and get them\n    const keys = Object.keys(extensions);\n    keys.forEach((key) => {\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        extensions[key] = gl.getExtension(key);\n    });\n    return extensions;\n}\n/**\n * Allocate big memory chunk that we\n * can re-use to draw quads\n * @param size\n */\nexport function createIndexBuffer(gl, size) {\n    if (!gl) {\n        throw new Error('No WebGL context');\n    }\n    const maxQuads = ~~(size / 80);\n    const indices = new Uint16Array(maxQuads * 6);\n    for (let i = 0, j = 0; i < maxQuads; i += 6, j += 4) {\n        indices[i] = j;\n        indices[i + 1] = j + 1;\n        indices[i + 2] = j + 2;\n        indices[i + 3] = j + 2;\n        indices[i + 4] = j + 1;\n        indices[i + 5] = j + 3;\n    }\n    const buffer = gl.createBuffer();\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\n    gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, indices, gl.STATIC_DRAW);\n}\n//# sourceMappingURL=RendererUtils.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy } from '../../../utils.js';\nimport { isPowerOfTwo } from '../../utils.js';\nimport { CoreContextTexture } from '../CoreContextTexture.js';\nimport { isWebGl2 } from './internal/WebGlUtils.js';\nconst TRANSPARENT_TEXTURE_DATA = new Uint8Array([0, 0, 0, 0]);\n/**\n * A wrapper around a WebGLTexture that handles loading the texture data\n * from a Texture source and uploading it to the GPU as well as freeing\n * the uploaded texture.\n *\n * @remarks\n * When accessing the ctxTexture property, the texture will be loaded if\n * it hasn't been already. ctxTexture will always return a valid WebGLTexture\n * and trigger the loading/uploading of the texture's data if it hasn't been\n * loaded yet.\n */\nexport class WebGlCoreCtxTexture extends CoreContextTexture {\n    gl;\n    _nativeCtxTexture = null;\n    _state = 'freed';\n    _w = 0;\n    _h = 0;\n    constructor(gl, textureSource) {\n        super(textureSource);\n        this.gl = gl;\n    }\n    get ctxTexture() {\n        if (this._state === 'freed') {\n            this.load();\n        }\n        assertTruthy(this._nativeCtxTexture);\n        return this._nativeCtxTexture;\n    }\n    get w() {\n        return this._w;\n    }\n    get h() {\n        return this._h;\n    }\n    /**\n     * Load the texture data from the Texture source and upload it to the GPU\n     *\n     * @remarks\n     * This method is called automatically when accessing the ctxTexture property\n     * if the texture hasn't been loaded yet. But it can also be called manually\n     * to force the texture to be pre-loaded prior to accessing the ctxTexture\n     * property.\n     */\n    load() {\n        // If the texture is already loading or loaded, don't load it again.\n        if (this._state === 'loading' || this._state === 'loaded') {\n            return;\n        }\n        this._state = 'loading';\n        this.textureSource.setState('loading');\n        this.onLoadRequest()\n            .then(({ width, height }) => {\n            this._state = 'loaded';\n            this._w = width;\n            this._h = height;\n            // Update the texture source's width and height so that it can be used\n            // for rendering.\n            this.textureSource.setState('loaded', { width, height });\n        })\n            .catch((err) => {\n            this._state = 'failed';\n            this.textureSource.setState('failed', err);\n            console.error(err);\n        });\n    }\n    /**\n     * Called when the texture data needs to be loaded and uploaded to a texture\n     */\n    async onLoadRequest() {\n        this._nativeCtxTexture = this.createNativeCtxTexture();\n        const { gl } = this;\n        // On initial load request, create a 1x1 transparent texture to use until\n        // the texture data is finally loaded.\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        // linear texture filtering\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.LINEAR);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.LINEAR);\n        // texture wrapping method\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_S, gl.CLAMP_TO_EDGE);\n        gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_WRAP_T, gl.CLAMP_TO_EDGE);\n        gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n        gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        const textureData = await this.textureSource?.getTextureData();\n        let width = 0;\n        let height = 0;\n        assertTruthy(this._nativeCtxTexture);\n        // If textureData is null, the texture is empty (0, 0) and we don't need to\n        // upload any data to the GPU.\n        if (textureData.data instanceof ImageBitmap ||\n            textureData.data instanceof ImageData) {\n            const data = textureData.data;\n            width = data.width;\n            height = data.height;\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, !!textureData.premultiplyAlpha);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, gl.RGBA, gl.UNSIGNED_BYTE, data);\n            // generate mipmaps for power-of-2 textures or in WebGL2RenderingContext\n            if (isWebGl2(gl) || (isPowerOfTwo(width) && isPowerOfTwo(height))) {\n                gl.generateMipmap(gl.TEXTURE_2D);\n            }\n        }\n        else if (textureData.data === null) {\n            width = 0;\n            height = 0;\n            // Reset to a 1x1 transparent texture\n            gl.bindTexture(gl.TEXTURE_2D, this._nativeCtxTexture);\n            gl.texImage2D(gl.TEXTURE_2D, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, TRANSPARENT_TEXTURE_DATA);\n        }\n        else {\n            console.error(`WebGlCoreCtxTexture.onLoadRequest: Unexpected textureData returned`, textureData);\n        }\n        return {\n            width,\n            height,\n        };\n    }\n    /**\n     * Free the WebGLTexture from the GPU\n     *\n     * @returns\n     */\n    free() {\n        if (this._state === 'freed') {\n            return;\n        }\n        this._state = 'freed';\n        this._w = 0;\n        this._h = 0;\n        if (!this._nativeCtxTexture) {\n            return;\n        }\n        this.gl.deleteTexture(this._nativeCtxTexture);\n        this._nativeCtxTexture = null;\n    }\n    createNativeCtxTexture() {\n        const nativeTexture = this.gl.createTexture();\n        if (!nativeTexture) {\n            throw new Error('Could not create WebGL Texture');\n        }\n        return nativeTexture;\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../common/EventEmitter.js';\n/**\n * Represents a source of texture data for a CoreContextTexture.\n *\n * @remarks\n * Texture sources are used to populate a CoreContextTexture when that texture\n * is loaded. Texture data retrieved by the CoreContextTexture by the\n * `getTextureData` method. It's the responsibility of the concerete `Texture`\n * subclass to implement this method appropriately.\n */\nexport class Texture extends EventEmitter {\n    txManager;\n    /**\n     * The dimensions of the texture\n     *\n     * @remarks\n     * Until the texture data is loaded for the first time the value will be\n     * `null`.\n     */\n    dimensions = null;\n    error = null;\n    state = 'loading';\n    constructor(txManager) {\n        super();\n        this.txManager = txManager;\n    }\n    /**\n     * Set the state of the texture\n     *\n     * @remark\n     * Intended for internal-use only but declared public so that it can be set\n     * by it's associated {@link CoreContextTexture}\n     *\n     * @param state\n     * @param args\n     */\n    setState(state, ...args) {\n        if (this.state !== state) {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.state = state;\n            if (state === 'loaded') {\n                const loadedArgs = args;\n                this.dimensions = loadedArgs[0];\n            }\n            else if (state === 'failed') {\n                const failedArgs = args;\n                this.error = failedArgs[0];\n            }\n            this.emit(state, ...args);\n        }\n    }\n    /**\n     * Make a cache key for this texture.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide an\n     * appropriate cache key for the texture type including the texture's\n     * properties that uniquely identify a copy of the texture. If the texture\n     * type does not support caching, then this method should return `false`.\n     *\n     * @param props\n     * @returns\n     * A cache key for this texture or `false` if the texture type does not\n     * support caching.\n     */\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    /**\n     * Resolve the default values for the texture's properties.\n     *\n     * @remarks\n     * Each concrete `Texture` subclass must implement this method to provide\n     * default values for the texture's optional properties.\n     *\n     * @param props\n     * @returns\n     * The default values for the texture's properties.\n     */\n    static resolveDefaults(\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    props) {\n        return {};\n    }\n}\n//# sourceMappingURL=Texture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * Texture consisting of only a 1x1 color pixel\n *\n * @remarks\n * The pixel color is set with the {@link ColorTextureProps.color} prop.\n *\n * This is the default texture used for a Node if it's\n * {@link INodeWritableProps.texture} prop is set to `null` (the default)\n *\n * Generally the 1x1 color pixel is stretched to whatever the set dimensions of\n * a Node are.\n */\nexport class ColorTexture extends Texture {\n    props;\n    constructor(txManager, props) {\n        super(txManager);\n        this.props = ColorTexture.resolveDefaults(props || {});\n    }\n    get color() {\n        return this.props.color;\n    }\n    set color(color) {\n        this.props.color = color;\n    }\n    async getTextureData() {\n        const pixelData32 = new Uint32Array([this.color]);\n        const pixelData8 = new Uint8ClampedArray(pixelData32.buffer);\n        return {\n            data: new ImageData(pixelData8, 1, 1),\n            premultiplyAlpha: true,\n        };\n    }\n    static makeCacheKey(props) {\n        const resolvedProps = ColorTexture.resolveDefaults(props);\n        return `ColorTexture,${resolvedProps.color}`;\n    }\n    static resolveDefaults(props) {\n        return {\n            color: props.color || 0xffffffff,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=ColorTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { Texture } from './Texture.js';\n/**\n * A Texture that is a sub-region of another Texture.\n *\n * @remarks\n * The parent texture can be a Sprite Sheet/Texture Atlas and set using the\n * {@link SubTextureProps.texture} prop. The sub-region relative to the parent\n * texture is defined with the {@link SubTextureProps.x},\n * {@link SubTextureProps.y}, {@link SubTextureProps.width}, and\n * {@link SubTextureProps.height} pixel values.\n */\nexport class SubTexture extends Texture {\n    props;\n    parentTexture;\n    constructor(txManager, props) {\n        super(txManager);\n        this.parentTexture = this.txManager.loadTexture(props.texture.txType, props.texture.props, props.texture.options);\n        this.props = SubTexture.resolveDefaults(props || {});\n        // If parent texture is already loaded / failed, trigger loaded event manually\n        // so that users get a consistent event experience.\n        // We do this in a microtask to allow listeners to be attached in the same\n        // synchronous task after calling loadTexture()\n        queueMicrotask(() => {\n            const parentTx = this.parentTexture;\n            if (parentTx.state === 'loaded') {\n                this.onParentTxLoaded(parentTx, parentTx.dimensions);\n            }\n            else if (parentTx.state === 'failed') {\n                this.onParentTxFailed(parentTx, parentTx.error);\n            }\n            parentTx.on('loaded', this.onParentTxLoaded);\n            parentTx.on('failed', this.onParentTxFailed);\n        });\n    }\n    onParentTxLoaded = () => {\n        // We ignore the parent's passed dimensions, and simply use the SubTexture's\n        // configured dimensions (because that's all that matters here)\n        this.setState('loaded', {\n            width: this.props.width,\n            height: this.props.height,\n        });\n    };\n    onParentTxFailed = (target, error) => {\n        this.setState('failed', error);\n    };\n    async getTextureData() {\n        return {\n            data: this.props,\n        };\n    }\n    // eslint-disable-next-line @typescript-eslint/no-unused-vars\n    static makeCacheKey(props) {\n        return false;\n    }\n    static resolveDefaults(props) {\n        return {\n            texture: props.texture,\n            x: props.x || 0,\n            y: props.y || 0,\n            width: props.width || 0,\n            height: props.height || 0,\n        };\n    }\n    static z$__type__Props;\n}\n//# sourceMappingURL=SubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nexport class WebGlCoreCtxSubTexture extends WebGlCoreCtxTexture {\n    constructor(gl, textureSource) {\n        super(gl, textureSource);\n    }\n    async onLoadRequest() {\n        const props = await this.textureSource.getTextureData();\n        return {\n            width: props.data?.width || 0,\n            height: props.data?.height || 0,\n        };\n    }\n}\n//# sourceMappingURL=WebGlCoreCtxSubTexture.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Represents a collection of WebGL Buffers along with their associated\n * vertex attribute formats.\n */\nexport class BufferCollection {\n    config;\n    constructor(config) {\n        this.config = config;\n    }\n    /**\n     * Get the WebGLBuffer associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getBuffer(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])?.buffer;\n    }\n    /**\n     * Get the AttributeInfo associated with the given attribute name if it exists.\n     *\n     * @param attributeName\n     * @returns\n     */\n    getAttributeInfo(attributeName) {\n        return this.config.find((item) => item.attributes[attributeName])\n            ?.attributes[attributeName];\n    }\n}\n//# sourceMappingURL=BufferCollection.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { assertTruthy, createWebGLContext, hasOwn, mergeColorAlphaPremultiplied, } from '../../../utils.js';\nimport { CoreRenderer, } from '../CoreRenderer.js';\nimport { WebGlCoreRenderOp } from './WebGlCoreRenderOp.js';\nimport { createIndexBuffer, getWebGlParameters, getWebGlExtensions, } from './internal/RendererUtils.js';\nimport { WebGlCoreCtxTexture } from './WebGlCoreCtxTexture.js';\nimport { Texture } from '../../textures/Texture.js';\nimport { ColorTexture } from '../../textures/ColorTexture.js';\nimport { SubTexture } from '../../textures/SubTexture.js';\nimport { WebGlCoreCtxSubTexture } from './WebGlCoreCtxSubTexture.js';\nimport { CoreShaderManager } from '../../CoreShaderManager.js';\nimport { BufferCollection } from './internal/BufferCollection.js';\nimport { compareRect, getNormalizedRgbaComponents, } from '../../lib/utils.js';\nimport { WebGlCoreShader } from './WebGlCoreShader.js';\nimport { RoundedRectangle } from './shaders/RoundedRectangle.js';\nconst WORDS_PER_QUAD = 24;\nconst BYTES_PER_QUAD = WORDS_PER_QUAD * 4;\nexport class WebGlCoreRenderer extends CoreRenderer {\n    //// WebGL Native Context and Data\n    gl;\n    system;\n    //// Core Managers\n    txManager;\n    shManager;\n    //// Options\n    options;\n    //// Persistent data\n    quadBuffer = new ArrayBuffer(1024 * 1024 * 4);\n    fQuadBuffer = new Float32Array(this.quadBuffer);\n    uiQuadBuffer = new Uint32Array(this.quadBuffer);\n    renderOps = [];\n    //// Render Op / Buffer Filling State\n    curBufferIdx = 0;\n    curRenderOp = null;\n    renderables = [];\n    //// Default Shader\n    defaultShader;\n    quadBufferCollection;\n    /**\n     * White pixel texture used by default when no texture is specified.\n     */\n    defaultTexture;\n    constructor(options) {\n        super(options.stage);\n        const { canvas, clearColor, bufferMemory } = options;\n        this.options = options;\n        this.txManager = options.txManager;\n        this.shManager = options.shManager;\n        this.defaultTexture = new ColorTexture(this.txManager);\n        const gl = createWebGLContext(canvas);\n        if (!gl) {\n            throw new Error('Unable to create WebGL context');\n        }\n        this.gl = gl;\n        const color = getNormalizedRgbaComponents(clearColor);\n        gl.viewport(0, 0, canvas.width, canvas.height);\n        gl.clearColor(color[0], color[1], color[2], color[3]);\n        createIndexBuffer(gl, bufferMemory);\n        this.system = {\n            parameters: getWebGlParameters(gl),\n            extensions: getWebGlExtensions(gl),\n        };\n        this.shManager.renderer = this;\n        this.defaultShader = this.shManager.loadShader('DefaultShaderBatched').shader;\n        const quadBuffer = gl.createBuffer();\n        assertTruthy(quadBuffer);\n        const stride = 6 * Float32Array.BYTES_PER_ELEMENT;\n        this.quadBufferCollection = new BufferCollection([\n            {\n                buffer: quadBuffer,\n                attributes: {\n                    a_position: {\n                        name: 'a_position',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 0, // start at the beginning of the buffer\n                    },\n                    a_textureCoordinate: {\n                        name: 'a_textureCoordinate',\n                        size: 2,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 2 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_color: {\n                        name: 'a_color',\n                        size: 4,\n                        type: gl.UNSIGNED_BYTE,\n                        normalized: true,\n                        stride,\n                        offset: 4 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                    a_textureIndex: {\n                        name: 'a_textureIndex',\n                        size: 1,\n                        type: gl.FLOAT,\n                        normalized: false,\n                        stride,\n                        offset: 5 * Float32Array.BYTES_PER_ELEMENT,\n                    },\n                },\n            },\n        ]);\n    }\n    reset() {\n        this.curBufferIdx = 0;\n        this.curRenderOp = null;\n        this.renderOps.length = 0;\n        this.gl.clear(this.gl.COLOR_BUFFER_BIT);\n    }\n    getShaderManager() {\n        return this.shManager;\n    }\n    createCtxTexture(textureSource) {\n        if (textureSource instanceof SubTexture) {\n            return new WebGlCoreCtxSubTexture(this.gl, textureSource);\n        }\n        return new WebGlCoreCtxTexture(this.gl, textureSource);\n    }\n    /**\n     * Add a renderable to the current set of renderables.\n     *\n     * @remarks\n     * If a {@link QuadOptions} structure is provided, this will ultimately result\n     * in a render ops being created, merged and added to the render ops list.\n     *\n     * If a direct {@link WebGlCoreRenderOp} instance is provided, it will be\n     * added to the render ops list as-is. Be sure to set the zIndex correctly of\n     * the render op to ensure proper rendering order.\n     *\n     * @param renderable\n     */\n    addRenderable(renderable) {\n        this.renderables?.push(renderable);\n    }\n    addQuad(params) {\n        const { fQuadBuffer, uiQuadBuffer } = this;\n        const { width, height, clippingRect, colorTl, colorTr, colorBl, colorBr, textureOptions, shader, shaderProps, alpha, wpx, wpy, ta, tb, tc, td, } = params;\n        let { texture } = params;\n        /**\n         * If the shader props contain any automatic properties, update it with the\n         * current dimensions that will be used to render the quad.\n         */\n        if (shaderProps && hasOwn(shaderProps, '$dimensions')) {\n            const dimensions = shaderProps.$dimensions;\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            dimensions.width = width;\n            dimensions.height = height;\n        }\n        texture = texture ?? this.defaultTexture;\n        assertTruthy(texture instanceof Texture, 'Invalid texture type');\n        let { curBufferIdx: bufferIdx, curRenderOp } = this;\n        const targetDims = {\n            width,\n            height,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n        };\n        const targetShader = shader || this.defaultShader;\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        if (curRenderOp) {\n            // If the current render op is not the same shader, create a new one\n            // If the current render op's shader props are not compatible with the\n            // the new shader props, create a new one render op.\n            if (curRenderOp.shader !== targetShader ||\n                !compareRect(curRenderOp.clippingRect, clippingRect) ||\n                (curRenderOp.shader !== this.defaultShader &&\n                    (!shaderProps ||\n                        !curRenderOp.shader.canBatchShaderProps(curRenderOp.shaderProps, shaderProps)))) {\n                curRenderOp = null;\n            }\n        }\n        assertTruthy(targetShader instanceof WebGlCoreShader);\n        // eslint-disable-next-line @typescript-eslint/no-unsafe-argument, @typescript-eslint/no-explicit-any\n        if (!curRenderOp) {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-argument\n            this.newRenderOp(targetShader, shaderProps, alpha, targetDims, clippingRect, bufferIdx);\n            curRenderOp = this.curRenderOp;\n            assertTruthy(curRenderOp);\n        }\n        const flipX = textureOptions?.flipX ?? false;\n        const flipY = textureOptions?.flipY ?? false;\n        let texCoordX1 = 0;\n        let texCoordY1 = 0;\n        let texCoordX2 = 1;\n        let texCoordY2 = 1;\n        if (texture instanceof SubTexture) {\n            const { x: tx, y: ty, width: tw, height: th } = texture.props;\n            const { width: parentW = 0, height: parentH = 0 } = texture.parentTexture\n                .dimensions || { width: 0, height: 0 };\n            texCoordX1 = tx / parentW;\n            texCoordX2 = texCoordX1 + tw / parentW;\n            texCoordY1 = ty / parentH;\n            texCoordY2 = texCoordY1 + th / parentH;\n            texture = texture.parentTexture;\n        }\n        // Flip texture coordinates if dictated by texture options\n        if (flipX) {\n            [texCoordX1, texCoordX2] = [texCoordX2, texCoordX1];\n        }\n        if (flipY) {\n            [texCoordY1, texCoordY2] = [texCoordY2, texCoordY1];\n        }\n        const { txManager } = this.stage;\n        const ctxTexture = txManager.getCtxTexture(texture);\n        assertTruthy(ctxTexture instanceof WebGlCoreCtxTexture);\n        const textureIdx = this.addTexture(ctxTexture, bufferIdx);\n        curRenderOp = this.curRenderOp;\n        assertTruthy(curRenderOp);\n        // render quad advanced\n        if (tb !== 0 || tc !== 0) {\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = wpx; // vertexX\n            fQuadBuffer[bufferIdx++] = wpy; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTl, alpha, true); // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = wpx + width * ta;\n            fQuadBuffer[bufferIdx++] = wpy + width * tc;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = wpx + height * tb;\n            fQuadBuffer[bufferIdx++] = wpy + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBl, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = wpx + width * ta + height * tb;\n            fQuadBuffer[bufferIdx++] = wpy + width * tc + height * td;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        else {\n            // Calculate the right corner of the quad\n            // multiplied by the scale\n            const rightCornerX = wpx + width * ta;\n            const rightCornerY = wpy + height * td;\n            // Upper-Left\n            fQuadBuffer[bufferIdx++] = wpx; // vertexX\n            fQuadBuffer[bufferIdx++] = wpy; // vertexY\n            fQuadBuffer[bufferIdx++] = texCoordX1; // texCoordX\n            fQuadBuffer[bufferIdx++] = texCoordY1; // texCoordY\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTl, alpha, true); // color\n            fQuadBuffer[bufferIdx++] = textureIdx; // texIndex\n            // Upper-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = wpy;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY1;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorTr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Left\n            fQuadBuffer[bufferIdx++] = wpx;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX1;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBl, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n            // Lower-Right\n            fQuadBuffer[bufferIdx++] = rightCornerX;\n            fQuadBuffer[bufferIdx++] = rightCornerY;\n            fQuadBuffer[bufferIdx++] = texCoordX2;\n            fQuadBuffer[bufferIdx++] = texCoordY2;\n            uiQuadBuffer[bufferIdx++] = mergeColorAlphaPremultiplied(colorBr, alpha, true);\n            fQuadBuffer[bufferIdx++] = textureIdx;\n        }\n        // Update the length of the current render op\n        curRenderOp.length += WORDS_PER_QUAD;\n        curRenderOp.numQuads++;\n        this.curBufferIdx = bufferIdx;\n    }\n    /**\n     * Replace the existing RenderOp with a new one that uses the specified Shader\n     * and starts at the specified buffer index.\n     *\n     * @param shader\n     * @param bufferIdx\n     */\n    newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx) {\n        const curRenderOp = new WebGlCoreRenderOp(this.gl, this.options, this.quadBufferCollection, shader, shaderProps, alpha, clippingRect, dimensions, bufferIdx, 0);\n        this.curRenderOp = curRenderOp;\n        this.renderOps.push(curRenderOp);\n    }\n    /**\n     * Add a texture to the current RenderOp. If the texture cannot be added to the\n     * current RenderOp, a new RenderOp will be created and the texture will be added\n     * to that one.\n     *\n     * If the texture cannot be added to the new RenderOp, an error will be thrown.\n     *\n     * @param texture\n     * @param bufferIdx\n     * @param recursive\n     * @returns Assigned Texture Index of the texture in the render op\n     */\n    addTexture(texture, bufferIdx, recursive) {\n        const { curRenderOp } = this;\n        assertTruthy(curRenderOp);\n        const textureIdx = curRenderOp.addTexture(texture);\n        // TODO: Refactor to be more DRY\n        if (textureIdx === 0xffffffff) {\n            if (recursive) {\n                throw new Error('Unable to add texture to render op');\n            }\n            const { shader, shaderProps, dimensions, clippingRect, alpha } = curRenderOp;\n            this.newRenderOp(shader, shaderProps, alpha, dimensions, clippingRect, bufferIdx);\n            return this.addTexture(texture, bufferIdx, true);\n        }\n        return textureIdx;\n    }\n    /**\n     * Sort renderable children and add them to the render ops.\n     * @todo:\n     * - move to merge sort to keep relative order\n     * - support z-index parent locking\n     *\n     */\n    sortRenderables() {\n        const { renderables } = this;\n        renderables.sort((a, b) => a.zIndex - b.zIndex);\n        renderables.forEach((renderable) => {\n            if (renderable instanceof WebGlCoreRenderOp) {\n                this.renderOps.push(renderable);\n                this.curRenderOp = null;\n            }\n            else {\n                this.addQuad(renderable);\n            }\n        });\n    }\n    /**\n     * Render the current set of RenderOps to render to the specified surface.\n     *\n     * TODO: 'screen' is the only supported surface at the moment.\n     *\n     * @param surface\n     */\n    render(surface = 'screen') {\n        const { gl, quadBuffer } = this;\n        const arr = new Float32Array(quadBuffer, 0, this.curBufferIdx);\n        const buffer = this.quadBufferCollection.getBuffer('a_position') ?? null;\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n        gl.bufferData(gl.ARRAY_BUFFER, arr, gl.DYNAMIC_DRAW);\n        const doLog = false; // idx++ % 100 === 0;\n        if (doLog) {\n            console.log('renderOps', this.renderOps.length);\n        }\n        this.renderOps.forEach((renderOp, i) => {\n            if (doLog) {\n                console.log('renderOp', i, renderOp.numQuads);\n            }\n            renderOp.draw();\n        });\n        // clean up\n        this.renderables = [];\n    }\n}\nconst idx = 0;\n//# sourceMappingURL=WebGlCoreRenderer.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { EventEmitter } from '../../../common/EventEmitter.js';\nexport class TrFontFace extends EventEmitter {\n    fontFamily;\n    descriptors;\n    loaded = false;\n    constructor(fontFamily, descriptors) {\n        super();\n        this.fontFamily = fontFamily;\n        this.descriptors = {\n            style: 'normal',\n            weight: 'normal',\n            stretch: 'normal',\n            ...descriptors,\n        };\n    }\n    /**\n     * Convert a TrFontFaceDescriptors to a FontFaceDescriptors which differ slightly\n     *\n     * @param descriptors\n     * @returns\n     */\n    static convertToCssFontFaceDescriptors(descriptors) {\n        return {\n            style: descriptors.style,\n            weight: typeof descriptors.weight === 'number'\n                ? `${descriptors.weight}`\n                : descriptors.weight,\n            stretch: descriptors.stretch,\n            unicodeRange: descriptors.unicodeRange,\n            variant: descriptors.variant,\n            featureSettings: descriptors.featureSettings,\n            display: descriptors.display,\n        };\n    }\n}\n//# sourceMappingURL=TrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport const SpecialCodepoints = {\n    LINE_FEED: 0x0a,\n    CARRIAGE_RETURN: 0x0d,\n    SPACE: 0x20,\n    TAB: 0x09,\n    ZERO_WIDTH_SPACE: 0x200b,\n    ZERO_WIDTH_NON_JOINER: 0x200c,\n    ZERO_WIDTH_JOINER: 0x200d,\n    LEFT_TO_RIGHT_MARK: 0x200e,\n    RIGHT_TO_LEFT_MARK: 0x200f,\n    LEFT_TO_RIGHT_EMBEDDING: 0x202a,\n    RIGHT_TO_LEFT_EMBEDDING: 0x202b,\n    POP_DIRECTIONAL_FORMATTING: 0x202c,\n    LEFT_TO_RIGHT_OVERRIDE: 0x202d,\n    RIGHT_TO_LEFT_OVERRIDE: 0x202e,\n    LINE_SEPARATOR: 0x2028,\n    PARAGRAPH_SEPARATOR: 0x2029,\n    OBJECT_REPLACEMENT_CHARACTER: 0xfffc,\n    REPLACEMENT_CHARACTER: 0xfffd,\n    ZERO_WIDTH_NO_BREAK_SPACE: 0xfeff,\n    LEFT_TO_RIGHT_ISOLATE: 0x2066,\n    RIGHT_TO_LEFT_ISOLATE: 0x2067,\n    FIRST_STRONG_ISOLATE: 0x2068,\n    POP_DIRECTIONAL_ISOLATE: 0x2069,\n    INHIBIT_SYMMETRIC_SWAPPING: 0x206a,\n    ACTIVATE_SYMMETRIC_SWAPPING: 0x206b,\n    INHIBIT_ARABIC_FORM_SHAPING: 0x206c,\n    ACTIVATE_ARABIC_FORM_SHAPING: 0x206d,\n    NATIONAL_DIGIT_SHAPES: 0x206e,\n    NOMINAL_DIGIT_SHAPES: 0x206f,\n    LEFT_TO_RIGHT_BOUNDARY: 0x200e,\n    RIGHT_TO_LEFT_BOUNDARY: 0x200f,\n};\n//# sourceMappingURL=SpecialCodepoints.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nexport class FontShaper {\n}\n//# sourceMappingURL=FontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { SpecialCodepoints } from '../../../renderers/SdfTextRenderer/internal/SpecialCodepoints.js';\nimport { FontShaper, } from './FontShaper.js';\nexport class SdfFontShaper extends FontShaper {\n    data;\n    kernings;\n    constructor(data) {\n        super();\n        this.data = data;\n        const kernings = (this.kernings = {});\n        data.kernings.forEach((kerning) => {\n            const second = kerning.second;\n            const firsts = (kernings[second] = kernings[second] || {});\n            firsts[kerning.first] = kerning.amount;\n        });\n        this.kernings = kernings;\n    }\n    *shapeText(props, codepoints) {\n        let codepointResult;\n        let lastGlyphId = undefined;\n        while ((codepointResult = codepoints.peek()) && !codepointResult.done) {\n            const codepoint = codepointResult.value;\n            const glyph = this.data.chars.find((char) => char.id === codepoint);\n            codepoints.next();\n            if (glyph !== undefined) {\n                // We found a glyph for this codepoint\n                // Yield the mapped glyph info\n                /**\n                 * Kerning includes any possible additional letter spacing\n                 */\n                const kerning = lastGlyphId !== undefined\n                    ? (this.kernings[glyph.id]?.[lastGlyphId] || 0) +\n                        props.letterSpacing\n                    : 0;\n                lastGlyphId = glyph.id;\n                yield {\n                    mapped: true,\n                    glyphId: glyph.id,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                    xAdvance: glyph.xadvance + kerning,\n                    yAdvance: 0,\n                    xOffset: glyph.xoffset + kerning,\n                    yOffset: glyph.yoffset,\n                    xBearing: 0,\n                    yBearing: 0,\n                    width: glyph.width,\n                    height: glyph.height,\n                };\n            }\n            else {\n                // We didn't find a glyph for this codepoint\n                // Yield the unmapped codepoint info\n                // If this codepoint is a linebreak, we should reset the last glyph id\n                // so that the next glyph will not be kerned with the last glyph of the\n                // previous line.\n                if (codepoint === SpecialCodepoints.LINE_FEED) {\n                    lastGlyphId = undefined;\n                }\n                yield {\n                    mapped: false,\n                    codepoint,\n                    cluster: codepoints.lastIndex,\n                };\n            }\n        }\n    }\n}\n//# sourceMappingURL=SdfFontShaper.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n// import type { Renderer } from '../../../Renderer';\nimport { assertTruthy } from '../../../../utils.js';\nimport { WebGlCoreRenderer } from '../../../renderers/webgl/WebGlCoreRenderer.js';\nimport { ImageTexture } from '../../../textures/ImageTexture.js';\nimport { TrFontFace } from '../TrFontFace.js';\nimport { SdfFontShaper } from './internal/SdfFontShaper.js';\nexport class SdfTrFontFace extends TrFontFace {\n    type;\n    texture;\n    data;\n    shaper;\n    glyphMap = new Map();\n    constructor(fontFamily, descriptors, type, stage, atlasUrl, atlasDataUrl) {\n        super(fontFamily, descriptors);\n        this.type = type;\n        const renderer = stage.renderer;\n        assertTruthy(renderer instanceof WebGlCoreRenderer, 'SDF Font Faces can only be used with the WebGL Renderer');\n        this.texture = stage.txManager.loadTexture('ImageTexture', {\n            src: atlasUrl,\n            // IMPORTANT: The SDF shader requires the alpha channel to NOT be\n            // premultiplied on the atlas texture. If it is premultiplied, the\n            // rendering of SDF glyphs (especially single-channel SDF fonts) will\n            // be very jagged.\n            premultiplyAlpha: false,\n        }, {\n            preload: true,\n        });\n        // TODO: Add texture loaded support\n        // this.texture.on('loaded', () => {\n        //   this.checkLoaded();\n        // });\n        // Set this.data to the fetched data from dataUrl\n        fetch(atlasDataUrl)\n            .then(async (response) => {\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            this.data = await response.json();\n            // We know `data` is defined here, because we just set it\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.shaper = new SdfFontShaper(this.data);\n            // Add all the glyphs to the glyph map\n            // eslint-disable-next-line @typescript-eslint/no-non-null-assertion\n            this.data.chars.forEach((glyph) => {\n                this.glyphMap.set(glyph.id, glyph);\n            });\n            this.checkLoaded();\n        })\n            .catch(console.error);\n    }\n    getAtlasEntry(glyphId) {\n        const glyph = this.glyphMap.get(glyphId);\n        if (glyph === undefined) {\n            throw new Error(`Glyph ${glyphId} not found in font ${this.fontFamily}`);\n        }\n        return {\n            x: glyph.x,\n            y: glyph.y,\n            width: glyph.width,\n            height: glyph.height,\n        };\n    }\n    checkLoaded() {\n        if (this.loaded)\n            return;\n        if ( /*this.texture.loaded && */this.data) {\n            this.loaded = true;\n            this.emit('loaded');\n        }\n    }\n}\n//# sourceMappingURL=SdfTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nimport { TrFontFace } from './TrFontFace.js';\nexport class WebTrFontFace extends TrFontFace {\n    fontFace;\n    fontUrl;\n    constructor(fontFamily, descriptors, fontUrl) {\n        super(fontFamily, descriptors);\n        // Filter out parentheses from fontUrl\n        const fontUrlWithoutParentheses = fontUrl.replace(/\\(|\\)/g, '');\n        // Defaults for descriptors resolved in the super constructor\n        const determinedDescriptors = this.descriptors;\n        // Convert TrFontFaceDescriptors to CSS FontFaceDescriptors\n        const cssDescriptors = {\n            style: determinedDescriptors.style,\n            weight: typeof determinedDescriptors.weight === 'number'\n                ? `${determinedDescriptors.weight}`\n                : determinedDescriptors.weight,\n            stretch: determinedDescriptors.stretch,\n            unicodeRange: determinedDescriptors.unicodeRange,\n            variant: determinedDescriptors.variant,\n            featureSettings: determinedDescriptors.featureSettings,\n            display: determinedDescriptors.display,\n        };\n        const fontFace = new FontFace(fontFamily, `url(${fontUrlWithoutParentheses})`, cssDescriptors);\n        fontFace\n            .load()\n            .then(() => {\n            // eslint-disable-next-line @typescript-eslint/no-unnecessary-type-assertion\n            this.loaded = true;\n            this.emit('loaded');\n        })\n            .catch(console.error);\n        this.fontFace = fontFace;\n        this.fontUrl = fontUrl;\n    }\n}\n//# sourceMappingURL=WebTrFontFace.js.map","/*\n * If not stated otherwise in this file or this component's LICENSE file the\n * following copyright and licenses apply:\n *\n * Copyright 2023 Comcast Cable Communications Management, LLC.\n *\n * Licensed under the Apache License, Version 2.0 (the License);\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Base class for Core extensions.\n *\n * @remarks\n * Core extensions are used to extend the Core Renderer with custom code such as\n * custom fonts, custom shaders, custom textures, custom animation functions,\n * and more.\n */\nexport class CoreExtension {\n}\n//# sourceMappingURL=CoreExtension.js.map"],"names":["assertTruthy","condition","message","Error","mergeColorAlphaPremultiplied","rgba","alpha","flipEndianess","newAlpha","r","Math","trunc","g","b","a","hasOwn","obj","prop","Object","prototype","hasOwnProperty","call","intersection","x1","max","y1","x2","min","y2","bound","color","floor","toFixed","x","y","width","height","rgba1","rgba2","p","r1","g1","b1","a1","r2","g2","b2","a2","round","isPowerOfTwo","value","getTimingBezier","c","d","xc","xb","xa","yc","yb","ya","time","cbx","cbxd","dx","t","it","minT","maxT","exports","str","s","indexOf","parts","substr","length","split","console","warn","parseFloat","isNaN","hypot","args","i","sqrt","EventEmitter","eventListeners","on","event","listener","listeners","this","push","off","index","splice","once","onceListener","target","data","emit","forEach","removeAllListeners","CoreContextTexture","textureSource","constructor","CoreRenderer","stage","CoreRenderOp","CoreShader","makeCacheKey","props","resolveDefaults","createShader","gl","type","source","shader","shaderSource","compileShader","getShaderParameter","COMPILE_STATUS","log","getShaderInfoLog","deleteShader","isWebGl2","self","WebGL2RenderingContext","WebGlCoreShader","boundBufferCollection","buffersBound","program","vao","renderer","attributeBuffers","attributeLocations","attributeNames","uniformLocations","uniformTypes","supportsIndexedTextures","options","super","webGl2","requiredExtensions","webgl2Extensions","webgl1Extensions","glVersion","extensionName","getExtension","name","shaderSources","fragment","vertex","textureUnits","system","parameters","MAX_VERTEX_TEXTURE_IMAGE_UNITS","vertexSource","Function","fragmentSource","vertexShader","VERTEX_SHADER","fragmentShader","FRAGMENT_SHADER","createProgram","attachShader","linkProgram","getProgramParameter","LINK_STATUS","getProgramInfoLog","deleteProgram","createVertexArray","bindVertexArray","attributes","attributeName","location","getAttribLocation","buffer","createBuffer","uniforms","uniform","getUniformLocation","bindBufferAttribute","attribute","enableVertexAttribArray","bindBuffer","ARRAY_BUFFER","vertexAttribPointer","size","normalized","stride","offset","disableAttribute","disableVertexAttribArray","disableAttributes","loc","canBatchShaderProps","propsA","propsB","bindRenderOp","renderOp","bindBufferCollection","buffers","textures","bindTextures","setUniform","canvas","pixelRatio","dimensions","$dimensions","$alpha","bindProps","resolvedBuffer","getBuffer","resolvedInfo","getAttributeInfo","attach","useProgram","detach","static","WebGlCoreRenderOp","shaderProps","clippingRect","bufferIdx","zIndex","numQuads","maxTextures","getParameter","addTexture","texture","existingIdx","findIndex","newIdx","draw","shManager","useShader","quadIdx","enable","BLEND","blendFunc","ONE","ONE_MINUS_SRC_ALPHA","canvasHeight","clipX","clipWidth","clipHeight","clipY","SCISSOR_TEST","scissor","disable","drawElements","TRIANGLES","UNSIGNED_SHORT","getWebGlParameters","params","MAX_RENDERBUFFER_SIZE","MAX_TEXTURE_SIZE","MAX_VIEWPORT_DIMS","MAX_TEXTURE_IMAGE_UNITS","MAX_COMBINED_TEXTURE_IMAGE_UNITS","MAX_VERTEX_ATTRIBS","MAX_VARYING_VECTORS","MAX_VERTEX_UNIFORM_VECTORS","MAX_FRAGMENT_UNIFORM_VECTORS","keys","key","getWebGlExtensions","extensions","ANGLE_instanced_arrays","WEBGL_compressed_texture_s3tc","WEBGL_compressed_texture_astc","WEBGL_compressed_texture_etc","WEBGL_compressed_texture_etc1","WEBGL_compressed_texture_pvrtc","WEBKIT_WEBGL_compressed_texture_pvrtc","WEBGL_compressed_texture_s3tc_srgb","OES_vertex_array_object","TRANSPARENT_TEXTURE_DATA","Uint8Array","WebGlCoreCtxTexture","_nativeCtxTexture","_state","_w","_h","ctxTexture","load","w","h","setState","onLoadRequest","then","catch","err","error","createNativeCtxTexture","bindTexture","TEXTURE_2D","texParameteri","TEXTURE_MAG_FILTER","LINEAR","TEXTURE_MIN_FILTER","TEXTURE_WRAP_S","CLAMP_TO_EDGE","TEXTURE_WRAP_T","texImage2D","RGBA","UNSIGNED_BYTE","textureData","getTextureData","ImageBitmap","ImageData","pixelStorei","UNPACK_PREMULTIPLY_ALPHA_WEBGL","premultiplyAlpha","generateMipmap","free","deleteTexture","nativeTexture","createTexture","Texture","txManager","state","loadedArgs","failedArgs","ColorTexture","pixelData32","Uint32Array","pixelData8","Uint8ClampedArray","SubTexture","parentTexture","loadTexture","txType","queueMicrotask","parentTx","onParentTxLoaded","onParentTxFailed","WebGlCoreCtxSubTexture","getNormalizedRgbaComponents","BufferCollection","config","find","item","WebGlCoreRenderer","quadBuffer","ArrayBuffer","fQuadBuffer","Float32Array","uiQuadBuffer","renderOps","curBufferIdx","curRenderOp","renderables","defaultShader","quadBufferCollection","defaultTexture","clearColor","bufferMemory","antialias","depth","stencil","desynchronized","failIfMajorPerformanceCaveat","powerPreference","premultipliedAlpha","preserveDrawingBuffer","getContext","createWebGLContext","viewport","maxQuads","indices","Uint16Array","j","ELEMENT_ARRAY_BUFFER","bufferData","STATIC_DRAW","createIndexBuffer","loadShader","BYTES_PER_ELEMENT","a_position","FLOAT","a_textureCoordinate","a_color","a_textureIndex","reset","clear","COLOR_BUFFER_BIT","getShaderManager","createCtxTexture","addRenderable","renderable","addQuad","colorTl","colorTr","colorBl","colorBr","textureOptions","wpx","wpy","ta","tb","tc","td","targetDims","targetShader","newRenderOp","flipX","flipY","texCoordX1","texCoordY1","texCoordX2","texCoordY2","tx","ty","tw","th","parentW","parentH","getCtxTexture","textureIdx","rightCornerX","rightCornerY","recursive","sortRenderables","sort","render","surface","arr","DYNAMIC_DRAW","TrFontFace","fontFamily","descriptors","loaded","style","weight","stretch","convertToCssFontFaceDescriptors","unicodeRange","variant","featureSettings","display","SpecialCodepoints","FontShaper","SdfFontShaper","kernings","kerning","second","first","amount","shapeText","codepoints","codepointResult","lastGlyphId","peek","done","codepoint","glyph","chars","char","id","next","undefined","letterSpacing","mapped","glyphId","cluster","lastIndex","xAdvance","xadvance","yAdvance","xOffset","xoffset","yOffset","yoffset","xBearing","yBearing","shaper","glyphMap","Map","atlasUrl","atlasDataUrl","src","preload","fetch","async","response","json","set","checkLoaded","getAtlasEntry","get","fontFace","fontUrl","fontUrlWithoutParentheses","replace","determinedDescriptors","cssDescriptors","FontFace"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26]}